{"ast":null,"code":"import React,{useState,useEffect,useMemo}from\"react\";import{getPairs,getMatches}from\"../lib/database\";import{SimpleMatchCalculator}from\"./SimpleMatchCalculator\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const StandingsTable=_ref=>{let{tournamentId,forceRefresh}=_ref;const[pairs,setPairs]=useState([]);const[matches,setMatches]=useState([]);const[loading,setLoading]=useState(false);const[error,setError]=useState(\"\");// Cargar datos cuando cambie el tournamentId o forceRefresh\nuseEffect(()=>{if(tournamentId){loadTournamentData();}},[tournamentId,forceRefresh]);const loadTournamentData=async()=>{try{setLoading(true);setError(\"\");console.log(\"🔄 Cargando datos para tabla de clasificación...\");// Cargar parejas y partidos en paralelo\nconst[pairsData,matchesData]=await Promise.all([getPairs(tournamentId),getMatches(tournamentId)]);setPairs(pairsData);setMatches(matchesData);console.log(`✅ Datos cargados: ${pairsData.length} parejas, ${matchesData.length} partidos`);}catch(error){console.error(\"❌ Error cargando datos:\",error);setError(\"Error al cargar los datos del torneo\");}finally{setLoading(false);}};// Recalcular todas las estadísticas\nconst recalculateAllStatistics=async()=>{try{console.log(\"🔄 Recalculando todas las estadísticas...\");setLoading(true);setError(\"\");// Usar la nueva función de recálculo completo\nconst result=await SimpleMatchCalculator.recalculateAllStatistics(tournamentId);if(result.success){console.log(\"✅ Estadísticas recalculadas exitosamente\");// Recargar datos después del recálculo\nawait loadTournamentData();}else{console.error(\"❌ Error en recálculo:\",result.message);setError(result.message);}}catch(error){console.error(\"❌ Error recalculando estadísticas:\",error);setError(\"Error al recalcular estadísticas\");}finally{setLoading(false);}};// Ordenar parejas usando SETS GANADOS como criterio principal\nconst sortedPairs=useMemo(()=>{return[...pairs].sort((a,b)=>{// Criterio 1: Sets ganados (descendente) - CRITERIO PRINCIPAL\nif(b.sets_won!==a.sets_won){return b.sets_won-a.sets_won;}// Criterio 2: Puntos totales (descendente)\nif(b.points!==a.points){return b.points-a.points;}// Criterio 3: Menos partidos jugados (mejor eficiencia)\nreturn a.matches_played-b.matches_played;});},[pairs]);// Detectar empates en partidos\nconst detectTies=()=>{const ties=[];matches.forEach(match=>{if(match.is_finished&&!match.winner_id){var _match$pair,_match$pair$player,_match$pair2,_match$pair2$player,_match$pair3,_match$pair3$player,_match$pair4,_match$pair4$player;ties.push({matchId:match.id,pair1:`${(_match$pair=match.pair1)===null||_match$pair===void 0?void 0:(_match$pair$player=_match$pair.player1)===null||_match$pair$player===void 0?void 0:_match$pair$player.name} y ${(_match$pair2=match.pair1)===null||_match$pair2===void 0?void 0:(_match$pair2$player=_match$pair2.player2)===null||_match$pair2$player===void 0?void 0:_match$pair2$player.name}`,pair2:`${(_match$pair3=match.pair2)===null||_match$pair3===void 0?void 0:(_match$pair3$player=_match$pair3.player1)===null||_match$pair3$player===void 0?void 0:_match$pair3$player.name} y ${(_match$pair4=match.pair2)===null||_match$pair4===void 0?void 0:(_match$pair4$player=_match$pair4.player2)===null||_match$pair4$player===void 0?void 0:_match$pair4$player.name}`});}});return ties;};const ties=detectTies();if(loading){return/*#__PURE__*/_jsxs(\"div\",{className:\"standings\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"\\uD83D\\uDCCA Clasificaci\\xF3n\"}),/*#__PURE__*/_jsx(\"div\",{className:\"loading\",children:\"\\u23F3 Cargando clasificaci\\xF3n...\"})]});}if(error){return/*#__PURE__*/_jsxs(\"div\",{className:\"standings\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"\\uD83D\\uDCCA Clasificaci\\xF3n\"}),/*#__PURE__*/_jsx(\"div\",{className:\"error\",children:error})]});}return/*#__PURE__*/_jsxs(\"div\",{className:\"standings\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"standings-header\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"\\uD83D\\uDCCA Clasificaci\\xF3n\"}),/*#__PURE__*/_jsx(\"button\",{onClick:recalculateAllStatistics,className:\"recalculate-stats-btn\",disabled:loading,children:\"\\uD83D\\uDD04 Recalcular Estad\\xEDsticas\"})]}),ties.length>0&&/*#__PURE__*/_jsxs(\"div\",{className:\"ties-notice\",children:[/*#__PURE__*/_jsx(\"h4\",{children:\"\\uD83E\\uDD1D Partidos con Empate\"}),/*#__PURE__*/_jsx(\"ul\",{children:ties.map(tie=>/*#__PURE__*/_jsxs(\"li\",{children:[tie.pair1,\" vs \",tie.pair2,\" - Empate\"]},tie.matchId))})]}),/*#__PURE__*/_jsx(\"div\",{className:\"table-container\",children:/*#__PURE__*/_jsxs(\"table\",{children:[/*#__PURE__*/_jsx(\"thead\",{children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"th\",{children:\"Pos\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Pareja\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Sets\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Partidos\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Puntos\"})]})}),/*#__PURE__*/_jsx(\"tbody\",{children:sortedPairs.map((pair,index)=>{var _pair$player,_pair$player2;return/*#__PURE__*/_jsxs(\"tr\",{className:`position-${index+1}`,children:[/*#__PURE__*/_jsxs(\"td\",{className:\"position\",children:[index+1,index===0&&\"🥇\",index===1&&\"🥈\",index===2&&\"🥉\"]}),/*#__PURE__*/_jsxs(\"td\",{className:\"pair-name\",children:[(_pair$player=pair.player1)===null||_pair$player===void 0?void 0:_pair$player.name,\" y \",(_pair$player2=pair.player2)===null||_pair$player2===void 0?void 0:_pair$player2.name]}),/*#__PURE__*/_jsx(\"td\",{className:\"points\",children:pair.sets_won}),/*#__PURE__*/_jsx(\"td\",{className:\"points\",children:pair.matches_played}),/*#__PURE__*/_jsx(\"td\",{className:\"points\",children:pair.points})]},pair.id);})})]})}),sortedPairs.length===0&&/*#__PURE__*/_jsx(\"div\",{className:\"no-pairs\",children:/*#__PURE__*/_jsx(\"p\",{children:\"\\uD83D\\uDCDD No hay parejas registradas en este torneo\"})})]});};export default StandingsTable;","map":{"version":3,"names":["React","useState","useEffect","useMemo","getPairs","getMatches","SimpleMatchCalculator","jsx","_jsx","jsxs","_jsxs","StandingsTable","_ref","tournamentId","forceRefresh","pairs","setPairs","matches","setMatches","loading","setLoading","error","setError","loadTournamentData","console","log","pairsData","matchesData","Promise","all","length","recalculateAllStatistics","result","success","message","sortedPairs","sort","a","b","sets_won","points","matches_played","detectTies","ties","forEach","match","is_finished","winner_id","_match$pair","_match$pair$player","_match$pair2","_match$pair2$player","_match$pair3","_match$pair3$player","_match$pair4","_match$pair4$player","push","matchId","id","pair1","player1","name","player2","pair2","className","children","onClick","disabled","map","tie","pair","index","_pair$player","_pair$player2"],"sources":["/Users/nedev/padel-tournament-app/src/components/StandingsTable.tsx"],"sourcesContent":["import React, { useState, useEffect, useMemo } from \"react\";\nimport { getPairs, getMatches, getGames, Pair } from \"../lib/database\";\nimport { SimpleMatchCalculator } from \"./SimpleMatchCalculator\";\n\ninterface PairWithPlayers {\n  id: string;\n  tournament_id: string;\n  player1_id: string;\n  player2_id: string;\n  sets_won: number;\n  games_won: number;\n  points: number;\n  matches_played: number;\n  created_at: string;\n  updated_at: string;\n  player1?: {\n    id: string;\n    name: string;\n  };\n  player2?: {\n    id: string;\n    name: string;\n  };\n}\n\ninterface Match {\n  id: string;\n  tournament_id: string;\n  pair1_id: string;\n  pair2_id: string;\n  court: number;\n  round: number;\n  winner_id?: string;\n  is_finished: boolean;\n  created_at: string;\n  updated_at: string;\n  pair1?: Pair;\n  pair2?: Pair;\n}\n\ninterface Game {\n  id: string;\n  match_id: string;\n  game_number: number;\n  pair1_games: number;\n  pair2_games: number;\n  is_tie_break: boolean;\n  tie_break_pair1_points?: number;\n  tie_break_pair2_points?: number;\n  created_at: string;\n  updated_at: string;\n}\n\ninterface StandingsTableProps {\n  tournamentId: string;\n  forceRefresh: number;\n}\n\nconst StandingsTable: React.FC<StandingsTableProps> = ({\n  tournamentId,\n  forceRefresh,\n}) => {\n  const [pairs, setPairs] = useState<PairWithPlayers[]>([]);\n  const [matches, setMatches] = useState<Match[]>([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(\"\");\n\n  // Cargar datos cuando cambie el tournamentId o forceRefresh\n  useEffect(() => {\n    if (tournamentId) {\n      loadTournamentData();\n    }\n  }, [tournamentId, forceRefresh]);\n\n  const loadTournamentData = async () => {\n    try {\n      setLoading(true);\n      setError(\"\");\n\n      console.log(\"🔄 Cargando datos para tabla de clasificación...\");\n\n      // Cargar parejas y partidos en paralelo\n      const [pairsData, matchesData] = await Promise.all([\n        getPairs(tournamentId),\n        getMatches(tournamentId),\n      ]);\n\n      setPairs(pairsData);\n      setMatches(matchesData);\n\n      console.log(\n        `✅ Datos cargados: ${pairsData.length} parejas, ${matchesData.length} partidos`\n      );\n    } catch (error) {\n      console.error(\"❌ Error cargando datos:\", error);\n      setError(\"Error al cargar los datos del torneo\");\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Recalcular todas las estadísticas\n  const recalculateAllStatistics = async () => {\n    try {\n      console.log(\"🔄 Recalculando todas las estadísticas...\");\n      setLoading(true);\n      setError(\"\");\n\n      // Usar la nueva función de recálculo completo\n      const result = await SimpleMatchCalculator.recalculateAllStatistics(\n        tournamentId\n      );\n\n      if (result.success) {\n        console.log(\"✅ Estadísticas recalculadas exitosamente\");\n        // Recargar datos después del recálculo\n        await loadTournamentData();\n      } else {\n        console.error(\"❌ Error en recálculo:\", result.message);\n        setError(result.message);\n      }\n    } catch (error) {\n      console.error(\"❌ Error recalculando estadísticas:\", error);\n      setError(\"Error al recalcular estadísticas\");\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Ordenar parejas usando SETS GANADOS como criterio principal\n  const sortedPairs = useMemo(() => {\n    return [...pairs].sort((a, b) => {\n      // Criterio 1: Sets ganados (descendente) - CRITERIO PRINCIPAL\n      if (b.sets_won !== a.sets_won) {\n        return b.sets_won - a.sets_won;\n      }\n      // Criterio 2: Puntos totales (descendente)\n      if (b.points !== a.points) {\n        return b.points - a.points;\n      }\n      // Criterio 3: Menos partidos jugados (mejor eficiencia)\n      return a.matches_played - b.matches_played;\n    });\n  }, [pairs]);\n\n  // Detectar empates en partidos\n  const detectTies = () => {\n    const ties: { matchId: string; pair1: string; pair2: string }[] = [];\n\n    matches.forEach((match) => {\n      if (match.is_finished && !match.winner_id) {\n        ties.push({\n          matchId: match.id,\n          pair1: `${match.pair1?.player1?.name} y ${match.pair1?.player2?.name}`,\n          pair2: `${match.pair2?.player1?.name} y ${match.pair2?.player2?.name}`,\n        });\n      }\n    });\n\n    return ties;\n  };\n\n  const ties = detectTies();\n\n  if (loading) {\n    return (\n      <div className=\"standings\">\n        <h3>📊 Clasificación</h3>\n        <div className=\"loading\">⏳ Cargando clasificación...</div>\n      </div>\n    );\n  }\n\n  if (error) {\n    return (\n      <div className=\"standings\">\n        <h3>📊 Clasificación</h3>\n        <div className=\"error\">{error}</div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"standings\">\n      <div className=\"standings-header\">\n        <h3>📊 Clasificación</h3>\n        <button\n          onClick={recalculateAllStatistics}\n          className=\"recalculate-stats-btn\"\n          disabled={loading}\n        >\n          🔄 Recalcular Estadísticas\n        </button>\n      </div>\n\n      {ties.length > 0 && (\n        <div className=\"ties-notice\">\n          <h4>🤝 Partidos con Empate</h4>\n          <ul>\n            {ties.map((tie) => (\n              <li key={tie.matchId}>\n                {tie.pair1} vs {tie.pair2} - Empate\n              </li>\n            ))}\n          </ul>\n        </div>\n      )}\n\n      <div className=\"table-container\">\n        <table>\n          <thead>\n            <tr>\n              <th>Pos</th>\n              <th>Pareja</th>\n              <th>Sets</th>\n              <th>Partidos</th>\n              <th>Puntos</th>\n            </tr>\n          </thead>\n          <tbody>\n            {sortedPairs.map((pair, index) => (\n              <tr key={pair.id} className={`position-${index + 1}`}>\n                <td className=\"position\">\n                  {index + 1}\n                  {index === 0 && \"🥇\"}\n                  {index === 1 && \"🥈\"}\n                  {index === 2 && \"🥉\"}\n                </td>\n                <td className=\"pair-name\">\n                  {pair.player1?.name} y {pair.player2?.name}\n                </td>\n                <td className=\"points\">{pair.sets_won}</td>\n                <td className=\"points\">{pair.matches_played}</td>\n                <td className=\"points\">{pair.points}</td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      </div>\n\n      {sortedPairs.length === 0 && (\n        <div className=\"no-pairs\">\n          <p>📝 No hay parejas registradas en este torneo</p>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default StandingsTable;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}