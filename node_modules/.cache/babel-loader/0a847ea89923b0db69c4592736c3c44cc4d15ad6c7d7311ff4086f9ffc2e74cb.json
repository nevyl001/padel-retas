{"ast":null,"code":"var _jsxFileName = \"/Users/nedev/padel-tournament-app/src/App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback, useMemo } from \"react\";\nimport \"./App.css\";\nimport { TournamentManager } from \"./components/TournamentManager\";\nimport { PlayerManager } from \"./components/PlayerManager\";\nimport { PairManager } from \"./components/PairManager\";\nimport { MatchScoreEditor } from \"./components/MatchScoreEditor\";\nimport StandingsTable from \"./components/StandingsTable\";\nimport { SuccessModal } from \"./components/SuccessModal\";\nimport { createPair, getPairs, updatePair, deletePair as deletePairFromDB, createMatch, getMatches, updateMatch, deleteMatchesByTournament, getGames, updateGame, deleteGame, updateTournament } from \"./lib/database\";\nimport { testConnection } from \"./lib/supabaseClient\";\nimport { FlexibleMatchFinisher } from \"./components/FlexibleMatchFinisher\";\nimport { MatchResultCalculator } from \"./components/MatchResultCalculator\";\nimport { TournamentWinnerCalculator } from \"./components/TournamentWinnerCalculator\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  var _winner$player, _winner$player2, _selectedMatchResults, _selectedMatchResults2, _selectedMatchResults3, _selectedMatchResults4, _selectedMatchResults5, _selectedMatchResults6, _selectedMatchResults7, _selectedMatchResults8, _calculatedMatchResul, _selectedMatchResults9, _calculatedMatchResul2, _selectedMatchResults0, _calculatedMatchResul3, _selectedMatchResults1, _calculatedMatchResul4, _selectedMatchResults10, _calculatedMatchResul5, _selectedMatchResults11, _calculatedMatchResul6, _selectedMatchResults12;\n  const [selectedTournament, setSelectedTournament] = useState(null);\n  const [pairs, setPairs] = useState([]);\n  const [matches, setMatches] = useState([]);\n  const [games, setGames] = useState([]);\n  const [selectedMatchId, setSelectedMatchId] = useState(null);\n  const [error, setError] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [showPlayerManager, setShowPlayerManager] = useState(false);\n  const [showPairManager, setShowPairManager] = useState(false);\n  const [selectedPlayers, setSelectedPlayers] = useState([]);\n  const [showWinnerScreen, setShowWinnerScreen] = useState(false);\n  const [showMatchResults, setShowMatchResults] = useState(false);\n  const [selectedMatchResults, setSelectedMatchResults] = useState(null);\n  const [calculatedMatchResults, setCalculatedMatchResults] = useState(null);\n  const [showScoreCorrector, setShowScoreCorrector] = useState(false);\n  const [selectedCorrectorMatch, setSelectedCorrectorMatch] = useState(null);\n  const [forceRefresh, setForceRefresh] = useState(0);\n  const [showDebugInfo, setShowDebugInfo] = useState(false);\n  const [showSuccessModal, setShowSuccessModal] = useState(false);\n  const [successModalData, setSuccessModalData] = useState({\n    title: \"\",\n    message: \"\",\n    icon: \"✅\"\n  });\n\n  // Cargar datos cuando se selecciona un torneo\n  useEffect(() => {\n    if (selectedTournament) {\n      loadTournamentData();\n    }\n  }, [selectedTournament === null || selectedTournament === void 0 ? void 0 : selectedTournament.id]);\n  const loadTournamentData = useCallback(async () => {\n    if (!selectedTournament) return;\n    try {\n      setLoading(true);\n      setError(\"\");\n      console.log(\"Loading tournament data for:\", selectedTournament.name);\n      const [pairsData, matchesData] = await Promise.all([getPairs(selectedTournament.id), getMatches(selectedTournament.id)]);\n      console.log(\"Pairs loaded:\", pairsData.length, \"pairs\");\n      setPairs(pairsData);\n      console.log(\"Matches loaded from database:\", matchesData.length, \"matches\");\n      setMatches(matchesData);\n    } catch (err) {\n      console.error(\"Error loading tournament data:\", err);\n      setError(\"Error al cargar los datos del torneo: \" + err.message);\n    } finally {\n      setLoading(false);\n    }\n  }, [selectedTournament]);\n  const deletePair = async pairId => {\n    try {\n      setError(\"\");\n      console.log(\"Eliminando pareja:\", pairId);\n      await deletePairFromDB(pairId);\n      setPairs(pairs.filter(p => p.id !== pairId));\n      console.log(\"Pareja eliminada exitosamente\");\n    } catch (err) {\n      console.error(\"Error eliminando pareja:\", err);\n      setError(\"Error al eliminar la pareja: \" + err.message);\n    }\n  };\n  const updatePairPlayers = async (pairId, player1, player2) => {\n    try {\n      setError(\"\");\n      console.log(\"Actualizando pareja:\", pairId);\n      console.log(\"Nuevos jugadores:\", player1.name, \"+\", player2.name);\n\n      // Actualizar la pareja en la base de datos\n      await updatePair(pairId, {\n        player1_id: player1.id,\n        player2_id: player2.id\n      });\n\n      // Actualizar el estado local\n      setPairs(pairs.map(pair => {\n        if (pair.id === pairId) {\n          return {\n            ...pair,\n            player1_id: player1.id,\n            player2_id: player2.id,\n            player1: player1,\n            player2: player2\n          };\n        }\n        return pair;\n      }));\n      console.log(\"Pareja actualizada exitosamente\");\n    } catch (err) {\n      console.error(\"Error actualizando pareja:\", err);\n      setError(\"Error al actualizar la pareja: \" + err.message);\n    }\n  };\n  const addPair = async (player1, player2) => {\n    if (!selectedTournament) {\n      setError(\"No hay torneo seleccionado\");\n      return;\n    }\n    try {\n      setError(\"\");\n\n      // Verificar duplicados en estado local\n      const existingPairLocal = pairs.find(pair => {\n        var _pair$player, _pair$player2, _pair$player3, _pair$player4;\n        const sameIds = pair.player1_id === player1.id && pair.player2_id === player2.id || pair.player1_id === player2.id && pair.player2_id === player1.id;\n        const sameNames = ((_pair$player = pair.player1) === null || _pair$player === void 0 ? void 0 : _pair$player.name.toLowerCase()) === player1.name.toLowerCase() && ((_pair$player2 = pair.player2) === null || _pair$player2 === void 0 ? void 0 : _pair$player2.name.toLowerCase()) === player2.name.toLowerCase() || ((_pair$player3 = pair.player1) === null || _pair$player3 === void 0 ? void 0 : _pair$player3.name.toLowerCase()) === player2.name.toLowerCase() && ((_pair$player4 = pair.player2) === null || _pair$player4 === void 0 ? void 0 : _pair$player4.name.toLowerCase()) === player1.name.toLowerCase();\n        return sameIds || sameNames;\n      });\n      if (existingPairLocal) {\n        setError(`La pareja ${player1.name} y ${player2.name} ya está registrada`);\n        return;\n      }\n      const newPair = await createPair(selectedTournament.id, player1.id, player2.id);\n      setPairs([...pairs, newPair]);\n      setSelectedPlayers([]);\n      console.log(\"Pair added successfully\");\n    } catch (err) {\n      console.error(\"Error creating pair:\", err);\n      setError(\"Error al crear la pareja: \" + err.message);\n    }\n  };\n  const startTournament = async () => {\n    if (!selectedTournament || pairs.length < 2) {\n      setError(\"Se necesitan al menos 2 parejas para iniciar el torneo\");\n      return;\n    }\n    try {\n      setLoading(true);\n      setError(\"\");\n      console.log(\"🚀 Iniciando torneo:\", selectedTournament.name);\n\n      // Limpiar partidos existentes\n      if (matches.length > 0) {\n        await deleteMatchesByTournament(selectedTournament.id);\n        setMatches([]);\n      }\n      const allPairs = [...pairs];\n      const allCombinations = [];\n      for (let i = 0; i < allPairs.length; i++) {\n        for (let j = i + 1; j < allPairs.length; j++) {\n          allCombinations.push({\n            pair1: allPairs[i],\n            pair2: allPairs[j]\n          });\n        }\n      }\n      const finalMatches = [];\n      const remainingCombinations = [...allCombinations];\n      let round = 1;\n      while (remainingCombinations.length > 0) {\n        const roundMatches = [];\n        const usedPairs = new Set();\n        const courtOrder = [];\n        for (let i = 0; i < selectedTournament.courts; i++) {\n          const rotatedCourt = (round - 1 + i) % selectedTournament.courts + 1;\n          courtOrder.push(rotatedCourt);\n        }\n        for (let courtIndex = 0; courtIndex < courtOrder.length; courtIndex++) {\n          const court = courtOrder[courtIndex];\n          let bestIndex = -1;\n          let bestScore = -1;\n          for (let i = 0; i < remainingCombinations.length; i++) {\n            const combo = remainingCombinations[i];\n            if (!usedPairs.has(combo.pair1.id) && !usedPairs.has(combo.pair2.id)) {\n              let score = 0;\n              for (let j = 0; j < remainingCombinations.length; j++) {\n                if (i !== j) {\n                  const futureCombo = remainingCombinations[j];\n                  if (!usedPairs.has(futureCombo.pair1.id) && !usedPairs.has(futureCombo.pair2.id) && futureCombo.pair1.id !== combo.pair1.id && futureCombo.pair1.id !== combo.pair2.id && futureCombo.pair2.id !== combo.pair1.id && futureCombo.pair2.id !== combo.pair2.id) {\n                    score++;\n                  }\n                }\n              }\n              if (score > bestScore) {\n                bestScore = score;\n                bestIndex = i;\n              }\n            }\n          }\n          if (bestIndex !== -1) {\n            const combo = remainingCombinations[bestIndex];\n            const match = {\n              pair1: combo.pair1,\n              pair2: combo.pair2,\n              round,\n              court\n            };\n            roundMatches.push(match);\n            usedPairs.add(combo.pair1.id);\n            usedPairs.add(combo.pair2.id);\n            remainingCombinations.splice(bestIndex, 1);\n          } else {\n            break;\n          }\n        }\n        if (roundMatches.length > 0) {\n          finalMatches.push(...roundMatches);\n        }\n        round++;\n      }\n      const createdMatches = [];\n      for (const match of finalMatches) {\n        try {\n          const createdMatch = await createMatch(selectedTournament.id, match.pair1.id, match.pair2.id, match.court, match.round);\n          createdMatches.push(createdMatch);\n        } catch (error) {\n          console.error(\"Error creating match:\", error);\n        }\n      }\n      await updateTournament(selectedTournament.id, {\n        is_started: true\n      });\n      setSelectedTournament(prev => prev ? {\n        ...prev,\n        is_started: true\n      } : null);\n      await loadTournamentData();\n      setSuccessModalData({\n        title: \"¡Torneo Iniciado!\",\n        message: `Se han creado ${createdMatches.length} partidos exitosamente usando ${selectedTournament.courts} canchas. El torneo está listo para comenzar.`,\n        icon: \"🏆\"\n      });\n      setShowSuccessModal(true);\n    } catch (error) {\n      console.error(\"Error starting tournament:\", error);\n      setError(\"Error al iniciar el torneo: \" + error.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const updateTieBreakScore = async (gameId, pair1Points, pair2Points) => {\n    try {\n      setError(\"\");\n      setGames(prevGames => prevGames.map(g => g.id === gameId ? {\n        ...g,\n        tie_break_pair1_points: pair1Points,\n        tie_break_pair2_points: pair2Points\n      } : g));\n      await updateGame(gameId, {\n        tie_break_pair1_points: pair1Points,\n        tie_break_pair2_points: pair2Points\n      });\n    } catch (err) {\n      console.error(\"❌ Error al actualizar el tie break:\", err);\n      setError(\"Error al actualizar el tie break: \" + err.message);\n    }\n  };\n  const toggleTieBreak = async gameId => {\n    try {\n      setError(\"\");\n      const game = games.find(g => g.id === gameId);\n      if (!game) return;\n      const newIsTieBreak = !game.is_tie_break;\n      setGames(prevGames => prevGames.map(g => g.id === gameId ? {\n        ...g,\n        is_tie_break: newIsTieBreak,\n        tie_break_pair1_points: 0,\n        tie_break_pair2_points: 0\n      } : g));\n      await updateGame(gameId, {\n        is_tie_break: newIsTieBreak,\n        tie_break_pair1_points: 0,\n        tie_break_pair2_points: 0\n      });\n    } catch (err) {\n      setError(\"Error al cambiar el tipo de juego\");\n      console.error(err);\n    }\n  };\n  const removeGame = async gameId => {\n    try {\n      setError(\"\");\n      await deleteGame(gameId);\n      setGames(games.filter(g => g.id !== gameId));\n    } catch (err) {\n      console.error(\"❌ Error al eliminar el juego:\", err);\n      setError(\"Error al eliminar el juego: \" + err.message);\n    }\n  };\n  const correctGameScore = useCallback(async (gameId, pair1Games, pair2Games, pair1TieBreakPoints = 0, pair2TieBreakPoints = 0, isTieBreak = false) => {\n    try {\n      setError(\"\");\n      setGames(prevGames => prevGames.map(g => g.id === gameId ? {\n        ...g,\n        pair1_games: pair1Games,\n        pair2_games: pair2Games,\n        tie_break_pair1_points: pair1TieBreakPoints,\n        tie_break_pair2_points: pair2TieBreakPoints,\n        is_tie_break: isTieBreak,\n        updated_at: new Date().toISOString()\n      } : g));\n      await updateGame(gameId, {\n        pair1_games: pair1Games,\n        pair2_games: pair2Games,\n        tie_break_pair1_points: pair1TieBreakPoints,\n        tie_break_pair2_points: pair2TieBreakPoints,\n        is_tie_break: isTieBreak\n      });\n    } catch (err) {\n      console.error(\"❌ Error al corregir el marcador:\", err);\n      setError(\"Error al corregir el marcador: \" + err.message);\n    }\n  }, []);\n  const finishMatch = async matchId => {\n    try {\n      setError(\"\");\n      const match = matches.find(m => m.id === matchId);\n      if (!match) {\n        console.error(\"Match not found:\", matchId);\n        return;\n      }\n      const matchGames = games.filter(g => g.match_id === matchId);\n      if (!FlexibleMatchFinisher.canFinishMatch(matchGames)) {\n        setError(\"No se puede finalizar el partido. Verifica que todos los juegos tengan marcadores válidos.\");\n        return;\n      }\n      const result = await FlexibleMatchFinisher.finishMatch(match, matchGames, pairs, async () => {\n        if (selectedTournament) {\n          const pairsData = await getPairs(selectedTournament.id);\n          setPairs(pairsData);\n          setForceRefresh(prev => prev + 1);\n          const matchesData = await getMatches(selectedTournament.id);\n          setMatches(matchesData);\n        }\n      });\n      if (result.success) {\n        setMatches(matches.map(m => m.id === matchId ? {\n          ...m,\n          winner_id: result.winnerId,\n          is_finished: true\n        } : m));\n        if (selectedTournament) {\n          const updatedPairsData = await getPairs(selectedTournament.id);\n          setPairs(updatedPairsData);\n          setForceRefresh(prev => prev + 1);\n        }\n        alert(result.message);\n      } else {\n        setError(result.message);\n      }\n    } catch (err) {\n      setError(\"Error al finalizar el partido\");\n      console.error(err);\n    }\n  };\n  const handleMatchSelect = matchId => {\n    setSelectedMatchId(matchId);\n    loadMatchGames(matchId);\n  };\n  const loadMatchGames = async matchId => {\n    try {\n      const gamesData = await getGames(matchId);\n      setGames(gamesData);\n    } catch (err) {\n      console.error(\"❌ Error al cargar juegos:\", err);\n    }\n  };\n  const selectedMatch = matches.find(match => match.id === selectedMatchId);\n  const matchesByRound = matches.reduce((acc, match) => {\n    if (!acc[match.round]) {\n      acc[match.round] = [];\n    }\n    acc[match.round].push(match);\n    return acc;\n  }, {});\n  const sortedPairs = useMemo(() => {\n    return [...pairs].sort((a, b) => {\n      // Criterio 1: Puntos totales (descendente) - CRITERIO PRINCIPAL\n      if (a.points !== b.points) {\n        return b.points - a.points;\n      }\n      // Criterio 2: Sets ganados (descendente) - CRITERIO DE DESEMPATE\n      if (a.sets_won !== b.sets_won) {\n        return b.sets_won - a.sets_won;\n      }\n      // Criterio 3: Juegos ganados (descendente)\n      if (a.games_won !== b.games_won) {\n        return b.games_won - a.games_won;\n      }\n      // Criterio 4: Menos partidos jugados (mejor eficiencia)\n      return a.matches_played - b.matches_played;\n    });\n  }, [pairs, forceRefresh]);\n  const isTournamentFinished = useMemo(() => {\n    return matches.length > 0 && matches.every(match => match.is_finished);\n  }, [matches]);\n  const [tournamentWinner, setTournamentWinner] = useState(null);\n  const winner = useMemo(() => {\n    return tournamentWinner ? tournamentWinner.pair : sortedPairs.length > 0 ? sortedPairs[0] : null;\n  }, [tournamentWinner, sortedPairs]);\n  const showWinnerScreenHandler = async () => {\n    try {\n      console.log(\"🏆 Calculando ganador del torneo...\");\n      const winner = await TournamentWinnerCalculator.calculateTournamentWinner(pairs, matches);\n      setTournamentWinner(winner);\n      setShowWinnerScreen(true);\n    } catch (error) {\n      console.error(\"❌ Error al calcular ganador:\", error);\n      setShowWinnerScreen(true);\n    }\n  };\n  const hideWinnerScreenHandler = () => {\n    setShowWinnerScreen(false);\n  };\n  const showMatchResultsHandler = async match => {\n    try {\n      // Obtener los juegos del partido\n      const matchGames = await getGames(match.id);\n\n      // Calcular estadísticas en tiempo real\n      const stats = MatchResultCalculator.calculateMatchStatistics(match, matchGames);\n\n      // Crear un objeto con los resultados calculados\n      const calculatedMatch = {\n        ...match,\n        pair1: {\n          ...match.pair1,\n          games_won: stats.pair1GamesWon,\n          sets_won: stats.pair1SetsWon,\n          points: stats.pair1TotalPoints\n        },\n        pair2: {\n          ...match.pair2,\n          games_won: stats.pair2GamesWon,\n          sets_won: stats.pair2SetsWon,\n          points: stats.pair2TotalPoints\n        },\n        winner_id: stats.isTie ? undefined : stats.pair1TotalPoints > stats.pair2TotalPoints ? match.pair1_id : match.pair2_id\n      };\n      setSelectedMatchResults(match);\n      setCalculatedMatchResults(calculatedMatch);\n      setShowMatchResults(true);\n    } catch (error) {\n      console.error(\"Error al calcular resultados:\", error);\n      // Fallback al comportamiento original\n      setSelectedMatchResults(match);\n      setShowMatchResults(true);\n    }\n  };\n  const hideMatchResultsHandler = () => {\n    setShowMatchResults(false);\n    setSelectedMatchResults(null);\n    setCalculatedMatchResults(null);\n  };\n  const handleViewTournamentResults = async tournament => {\n    try {\n      setSelectedTournament(tournament);\n      await loadTournamentData();\n      alert(`✅ Torneo \"${tournament.name}\" seleccionado\\n\\nAhora puedes ver todos los partidos y resultados en el panel derecho.`);\n    } catch (err) {\n      console.error(\"❌ Error al cargar resultados del torneo:\", err);\n      alert(\"Error al cargar los resultados del torneo. Inténtalo de nuevo.\");\n    }\n  };\n  const recalculateMatchWinner = async matchId => {\n    try {\n      const match = matches.find(m => m.id === matchId);\n      if (!match) {\n        console.error(\"Match not found:\", matchId);\n        return;\n      }\n      const matchGames = await getGames(matchId);\n      if (matchGames.length === 0) {\n        console.log(\"No hay juegos para recalcular\");\n        return;\n      }\n      let pair1Games = 0;\n      let pair2Games = 0;\n      matchGames.forEach(game => {\n        if (game.is_tie_break) {\n          if (game.tie_break_pair1_points >= 10 && game.tie_break_pair1_points - game.tie_break_pair2_points >= 2) {\n            pair1Games++;\n          } else if (game.tie_break_pair2_points >= 10 && game.tie_break_pair2_points - game.tie_break_pair1_points >= 2) {\n            pair2Games++;\n          }\n        } else {\n          if (game.pair1_games > game.pair2_games) {\n            pair1Games++;\n          } else if (game.pair2_games > game.pair1_games) {\n            pair2Games++;\n          }\n        }\n      });\n      const isTie = pair1Games === pair2Games;\n      const winnerId = isTie ? undefined : pair1Games > pair2Games ? match.pair1_id : match.pair2_id;\n      await updateMatch(matchId, {\n        winner_id: winnerId,\n        is_finished: true\n      });\n      console.log(\"✅ Ganador recalculado y actualizado en la base de datos\");\n    } catch (error) {\n      console.error(\"Error recalculating match winner:\", error);\n    }\n  };\n  const handleBackToHome = () => {\n    setSelectedTournament(null);\n    setPairs([]);\n    setMatches([]);\n    setGames([]);\n    setSelectedMatchId(null);\n    setError(\"\");\n    setShowWinnerScreen(false);\n    setShowMatchResults(false);\n    setSelectedMatchResults(null);\n    setShowScoreCorrector(false);\n    setSelectedCorrectorMatch(null);\n    setForceRefresh(0);\n    setShowDebugInfo(false);\n    setShowSuccessModal(false);\n    setSuccessModalData({\n      title: \"\",\n      message: \"\",\n      icon: \"✅\"\n    });\n  };\n  const openScoreCorrector = async match => {\n    try {\n      // Recargar los juegos del partido antes de abrir el editor\n      const matchGames = await getGames(match.id);\n      setGames(prevGames => {\n        const otherGames = prevGames.filter(g => g.match_id !== match.id);\n        return [...otherGames, ...matchGames];\n      });\n    } catch (error) {\n      console.error(\"Error al cargar juegos:\", error);\n    }\n    setSelectedCorrectorMatch(match);\n    setShowScoreCorrector(true);\n  };\n  const closeScoreCorrector = () => {\n    setShowScoreCorrector(false);\n    setSelectedCorrectorMatch(null);\n  };\n\n  // Función para cuando se corrige un juego (NO incrementa forceRefresh)\n  const handleGameCorrection = async () => {\n    if (selectedTournament) {\n      console.log(\"🔄 Juego corregido - NO actualizando tabla de clasificación\");\n\n      // NO incrementar forceRefresh cuando se corrige un juego\n      // Solo cerrar el editor\n      console.log(\"✅ Solo se corrigió el juego - NO se actualizó la tabla\");\n    }\n    closeScoreCorrector();\n  };\n\n  // Función para cuando se finaliza un partido (SÍ incrementa forceRefresh)\n  const handleScoreCorrectorUpdate = async () => {\n    if (selectedTournament) {\n      console.log(\"🏆 Actualizando tabla de clasificación después de FINALIZAR partido...\");\n\n      // SOLO incrementar forceRefresh cuando se FINALIZA un partido\n      setForceRefresh(prev => {\n        console.log(`🏆 Incrementando forceRefresh de ${prev} a ${prev + 1} (FINALIZACIÓN)`);\n        return prev + 1;\n      });\n      console.log(\"✅ Tabla de clasificación actualizada después de finalizar partido\");\n    }\n    closeScoreCorrector();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"\\uD83C\\uDFC6 Gesti\\xF3n de Torneos Express y Retas\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 810,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"\\u274C Error\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 814,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 815,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"error-help\",\n          children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n            children: \"\\uD83D\\uDCA1 Ayuda:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 817,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"ol\", {\n            children: [/*#__PURE__*/_jsxDEV(\"li\", {\n              children: \"Verifica tu conexi\\xF3n a internet\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 819,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: \"Intenta recargar la p\\xE1gina\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 820,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: \"Si el problema persiste, contacta al administrador\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 821,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 818,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 816,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 813,\n        columnNumber: 11\n      }, this), loading && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"\\u23F3 Cargando...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 829,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 828,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"main-layout\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"left-panel\",\n          children: /*#__PURE__*/_jsxDEV(TournamentManager, {\n            selectedTournament: selectedTournament || undefined,\n            onTournamentSelect: setSelectedTournament,\n            onViewResults: handleViewTournamentResults\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 835,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 834,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"right-panel\",\n          children: selectedTournament ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"tournament-details\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"player-management-section\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"player-management-header\",\n                  children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                    children: \"\\uD83D\\uDC65 Gesti\\xF3n de Jugadores\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 849,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    className: \"toggle-player-manager-btn\",\n                    onClick: () => setShowPlayerManager(!showPlayerManager),\n                    children: showPlayerManager ? \"👥 Ocultar Gestión de Jugadores\" : \"👥 Mostrar Gestión de Jugadores\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 850,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 848,\n                  columnNumber: 21\n                }, this), showPlayerManager && /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"player-manager-container\",\n                  children: /*#__PURE__*/_jsxDEV(PlayerManager, {\n                    playersInPairs: pairs.flatMap(pair => [pair.player1_id, pair.player2_id]),\n                    onPlayerSelect: players => {\n                      console.log(\"=== SELECCIÓN DE JUGADORES ===\");\n                      console.log(\"Players selected:\", players.length);\n                      players.forEach((player, index) => {\n                        console.log(`Player ${index + 1}:`, player.name, \"(ID:\", player.id + \")\");\n                      });\n\n                      // Validación: Verificar si algún jugador ya está en una pareja\n                      const playersInPairs = players.filter(player => {\n                        const isInPair = pairs.some(pair => pair.player1_id === player.id || pair.player2_id === player.id);\n                        if (isInPair) {\n                          var _existingPair$player, _existingPair$player2, _existingPair$player3;\n                          const existingPair = pairs.find(pair => pair.player1_id === player.id || pair.player2_id === player.id);\n                          console.log(`🚨 JUGADOR YA EN PAREJA: ${player.name} está en pareja con ${(existingPair === null || existingPair === void 0 ? void 0 : (_existingPair$player = existingPair.player1) === null || _existingPair$player === void 0 ? void 0 : _existingPair$player.id) === player.id ? existingPair === null || existingPair === void 0 ? void 0 : (_existingPair$player2 = existingPair.player2) === null || _existingPair$player2 === void 0 ? void 0 : _existingPair$player2.name : existingPair === null || existingPair === void 0 ? void 0 : (_existingPair$player3 = existingPair.player1) === null || _existingPair$player3 === void 0 ? void 0 : _existingPair$player3.name}`);\n                        }\n                        return isInPair;\n                      });\n                      if (playersInPairs.length > 0) {\n                        const playerNames = playersInPairs.map(p => p.name).join(\", \");\n                        console.log(\"🚨 ERROR: Jugadores ya están en parejas:\", playerNames);\n                        setError(`Los jugadores ${playerNames} ya están en parejas existentes. Debes eliminar sus parejas actuales antes de poder seleccionarlos nuevamente.`);\n                        return;\n                      }\n\n                      // Validación: No permitir jugadores con nombres iguales\n                      if (players.length === 2) {\n                        const player1 = players[0];\n                        const player2 = players[1];\n                        if (player1.name.toLowerCase() === player2.name.toLowerCase()) {\n                          console.log(\"🚨 ERROR: Jugadores con nombres iguales detectados\");\n                          console.log(\"Player 1:\", player1.name, \"(ID:\", player1.id + \")\");\n                          console.log(\"Player 2:\", player2.name, \"(ID:\", player2.id + \")\");\n                          setError(\"No puedes seleccionar dos jugadores con el mismo nombre\");\n                          return;\n                        }\n\n                        // Validación: Verificar si ya existe una pareja con estos jugadores\n                        const existingPair = pairs.find(pair => {\n                          var _pair$player5, _pair$player6, _pair$player7, _pair$player8;\n                          const sameIds = pair.player1_id === player1.id && pair.player2_id === player2.id || pair.player1_id === player2.id && pair.player2_id === player1.id;\n                          const sameNames = ((_pair$player5 = pair.player1) === null || _pair$player5 === void 0 ? void 0 : _pair$player5.name.toLowerCase()) === player1.name.toLowerCase() && ((_pair$player6 = pair.player2) === null || _pair$player6 === void 0 ? void 0 : _pair$player6.name.toLowerCase()) === player2.name.toLowerCase() || ((_pair$player7 = pair.player1) === null || _pair$player7 === void 0 ? void 0 : _pair$player7.name.toLowerCase()) === player2.name.toLowerCase() && ((_pair$player8 = pair.player2) === null || _pair$player8 === void 0 ? void 0 : _pair$player8.name.toLowerCase()) === player1.name.toLowerCase();\n                          if (sameIds || sameNames) {\n                            console.log(\"🚨 PAREJA DUPLICADA DETECTADA:\", player1.name, \"+\", player2.name);\n                            console.log(\"Existing pair:\", existingPair);\n                          }\n                          return sameIds || sameNames;\n                        });\n                        if (existingPair) {\n                          console.log(\"🚨 ERROR: Pareja ya existe en la base de datos\");\n                          setError(`La pareja ${player1.name} + ${player2.name} ya existe en el torneo`);\n                          return;\n                        }\n\n                        // Si llegamos aquí, la pareja es válida\n                        console.log(\"✅ PAREJA VÁLIDA:\", player1.name, \"+\", player2.name);\n                        addPair(player1, player2);\n                        setSelectedPlayers([]); // Limpiar selección después de crear la pareja\n                      } else {\n                        setSelectedPlayers(players);\n                      }\n                    },\n                    selectedPlayers: selectedPlayers,\n                    allowMultipleSelection: true\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 862,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 861,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 847,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"pair-management-section\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"pair-management-header\",\n                  children: /*#__PURE__*/_jsxDEV(\"button\", {\n                    className: \"toggle-pair-manager-btn\",\n                    onClick: () => setShowPairManager(!showPairManager),\n                    children: showPairManager ? \"✏️ Ocultar Gestión de Parejas\" : \"✏️ Mostrar Gestión de Parejas\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1015,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1014,\n                  columnNumber: 21\n                }, this), showPairManager && /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"pair-manager-container\",\n                  children: /*#__PURE__*/_jsxDEV(PairManager, {\n                    pairs: pairs,\n                    onPairUpdate: updatePairPlayers,\n                    onPairDelete: deletePair\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1027,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1026,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1013,\n                columnNumber: 19\n              }, this), !selectedTournament.is_started ? /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"start-tournament-section\",\n                children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                  children: \"\\uD83D\\uDE80 Iniciar Torneo\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1038,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"tournament-info\",\n                  children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                    children: [\"Tienes \", pairs.length, \" parejas registradas\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1040,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    children: [\"Se crear\\xE1n \", pairs.length * (pairs.length - 1) / 2, \" \", \"partidos (round-robin completo - todas las parejas se enfrentan)\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1041,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    children: [\"Estado del torneo:\", \" \", selectedTournament.is_started ? \"Iniciado\" : \"Pendiente\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1046,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1039,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"start-button\",\n                  onClick: startTournament,\n                  disabled: loading || pairs.length < 2,\n                  children: loading ? \"⏳ Iniciando...\" : selectedTournament.is_started ? \"🏆 Torneo Ya Iniciado\" : pairs.length < 2 ? \"❌ Necesitas al menos 2 parejas\" : \"🚀 ¡Iniciar Torneo!\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1053,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1037,\n                columnNumber: 21\n              }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"tournament-status-section\",\n                children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                  children: \"\\uD83C\\uDFC6 Torneo en Progreso\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1069,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"tournament-info\",\n                  children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                    children: \"El torneo ya est\\xE1 iniciado y en progreso\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1071,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    children: [\"Tienes \", pairs.length, \" parejas registradas\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1072,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    children: \"Estado del torneo: Iniciado\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1073,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1070,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"reset-button\",\n                  onClick: async () => {\n                    if (window.confirm(\"¿Estás seguro de que quieres resetear el torneo? Esto eliminará todos los partidos existentes.\")) {\n                      try {\n                        setLoading(true);\n                        await deleteMatchesByTournament(selectedTournament.id);\n                        await updateTournament(selectedTournament.id, {\n                          is_started: false\n                        });\n                        setSelectedTournament(prev => prev ? {\n                          ...prev,\n                          is_started: false\n                        } : null);\n                        setMatches([]);\n                        await loadTournamentData();\n                        setSuccessModalData({\n                          title: \"¡Torneo Reseteado!\",\n                          message: \"El torneo ha sido reseteado y está listo para iniciar nuevamente.\",\n                          icon: \"🔄\"\n                        });\n                        setShowSuccessModal(true);\n                      } catch (error) {\n                        setError(\"Error al resetear el torneo: \" + error.message);\n                      } finally {\n                        setLoading(false);\n                      }\n                    }\n                  },\n                  disabled: loading,\n                  children: loading ? \"⏳ Reseteando...\" : \"🔄 Resetear Torneo\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1075,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1068,\n                columnNumber: 21\n              }, this), selectedTournament && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"debug-section\",\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"debug-toggle-btn\",\n                  onClick: () => setShowDebugInfo(!showDebugInfo),\n                  children: [showDebugInfo ? \"🔽\" : \"🔼\", \" Debug Info\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1123,\n                  columnNumber: 23\n                }, this), showDebugInfo && /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"debug-info\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"debug-header\",\n                    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                      children: \"\\uD83D\\uDD27 Informaci\\xF3n de Debug\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1133,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"debug-stats\",\n                      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                        children: [\"Estado:\", \" \", selectedTournament.is_started ? \"✅ Iniciado\" : \"⏳ Pendiente\"]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1135,\n                        columnNumber: 31\n                      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                        children: [\"Parejas: \", pairs.length]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1141,\n                        columnNumber: 31\n                      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                        children: [\"Partidos: \", matches.length]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1142,\n                        columnNumber: 31\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1134,\n                      columnNumber: 29\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1132,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"debug-buttons\",\n                    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                      onClick: async () => {\n                        console.log(\"=== PROBAR CONEXIÓN ===\");\n                        const isConnected = await testConnection();\n                        if (isConnected) {\n                          setError(\"\");\n                        } else {\n                          setError(\"❌ Error de conexión a Supabase. Verifica tu configuración.\");\n                        }\n                      },\n                      className: \"debug-btn connection-btn\",\n                      children: \"\\uD83D\\uDD0C Probar Conexi\\xF3n\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1147,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                      onClick: () => {\n                        console.log(\"=== FORZANDO RECARGA DE DATOS ===\");\n                        loadTournamentData();\n                      },\n                      className: \"debug-btn reload-btn\",\n                      children: \"\\uD83D\\uDD04 Recargar Datos\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1164,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                      onClick: async () => {\n                        console.log(\"=== VERIFICANDO ESTADO DEL TORNEO ===\");\n                        try {\n                          console.log(\"Estado actual del torneo:\", selectedTournament);\n                          console.log(\"Parejas en estado:\", pairs.length);\n                          console.log(\"Partidos en estado:\", matches.length);\n                          const dbPairs = await getPairs(selectedTournament.id);\n                          const dbMatches = await getMatches(selectedTournament.id);\n                          console.log(\"Parejas en BD:\", dbPairs.length);\n                          console.log(\"Partidos en BD:\", dbMatches.length);\n                          alert(`Estado del torneo:\\n\\nParejas: ${pairs.length} (estado) / ${dbPairs.length} (BD)\\nPartidos: ${matches.length} (estado) / ${dbMatches.length} (BD)\\n\\nTorneo iniciado: ${selectedTournament.is_started ? \"Sí\" : \"No\"}`);\n                        } catch (error) {\n                          console.error(\"Error verificando estado:\", error);\n                        }\n                      },\n                      className: \"debug-btn status-btn\",\n                      children: \"\\uD83D\\uDD0D Verificar Estado\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1176,\n                      columnNumber: 29\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1146,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1131,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1122,\n                columnNumber: 21\n              }, this), pairs.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"pairs-display\",\n                children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                  children: [\"\\uD83D\\uDC65 Parejas Registradas (\", pairs.length, \")\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1243,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"pairs-grid\",\n                  children: pairs.map((pair, index) => {\n                    var _pair$player9, _pair$player0;\n                    return /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"pair-display-card\",\n                      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"pair-number\",\n                        children: [\"#\", index + 1]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1247,\n                        columnNumber: 29\n                      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"pair-names\",\n                        children: [(_pair$player9 = pair.player1) === null || _pair$player9 === void 0 ? void 0 : _pair$player9.name, \" y \", (_pair$player0 = pair.player2) === null || _pair$player0 === void 0 ? void 0 : _pair$player0.name]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1248,\n                        columnNumber: 29\n                      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"pair-stats\",\n                        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                          children: [\"Sets: \", pair.sets_won]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1252,\n                          columnNumber: 31\n                        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                          children: [\"Partidos: \", pair.matches_played]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1253,\n                          columnNumber: 31\n                        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                          children: [\"Puntos: \", pair.points]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1254,\n                          columnNumber: 31\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1251,\n                        columnNumber: 29\n                      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                        onClick: () => {\n                          var _pair$player1, _pair$player10;\n                          if (window.confirm(`¿Estás seguro de que quieres eliminar la pareja \"${(_pair$player1 = pair.player1) === null || _pair$player1 === void 0 ? void 0 : _pair$player1.name} y ${(_pair$player10 = pair.player2) === null || _pair$player10 === void 0 ? void 0 : _pair$player10.name}\"?`)) {\n                            deletePair(pair.id);\n                          }\n                        },\n                        className: \"delete-pair-btn\",\n                        title: \"Eliminar pareja\",\n                        children: \"\\uD83D\\uDDD1\\uFE0F\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1256,\n                        columnNumber: 29\n                      }, this)]\n                    }, pair.id, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1246,\n                      columnNumber: 27\n                    }, this);\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1244,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1242,\n                columnNumber: 21\n              }, this), selectedTournament.is_started && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"tournament-content\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"matches-section\",\n                  children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                    children: [\"\\uD83C\\uDFBE Partidos (\", matches.length, \" total)\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1281,\n                    columnNumber: 25\n                  }, this), matches.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"no-matches\",\n                    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                      children: \"\\uD83D\\uDCDD No hay partidos programados a\\xFAn\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1284,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                      children: \"Inicia el torneo para generar los partidos autom\\xE1ticamente\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1285,\n                      columnNumber: 29\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1283,\n                    columnNumber: 27\n                  }, this) : Object.entries(matchesByRound).map(([round, roundMatches]) => /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"round-section\",\n                    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                      children: [\"\\uD83D\\uDD04 Ronda \", round, \" (\", roundMatches.length, \" \", \"partidos)\"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1294,\n                      columnNumber: 33\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"matches-container\",\n                      children: roundMatches.map(match => {\n                        var _match$pair, _match$pair$player, _match$pair2, _match$pair2$player, _match$pair3, _match$pair3$player, _match$pair4, _match$pair4$player, _match$pair5, _match$pair5$player, _match$pair6, _match$pair6$player, _match$pair7, _match$pair7$player, _match$pair8, _match$pair8$player;\n                        return /*#__PURE__*/_jsxDEV(\"div\", {\n                          className: `match-card ${selectedMatchId === match.id ? \"selected\" : \"\"}`,\n                          onClick: () => handleMatchSelect(match.id),\n                          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                            className: \"match-header\",\n                            children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n                              children: [(_match$pair = match.pair1) === null || _match$pair === void 0 ? void 0 : (_match$pair$player = _match$pair.player1) === null || _match$pair$player === void 0 ? void 0 : _match$pair$player.name, \" y\", \" \", (_match$pair2 = match.pair1) === null || _match$pair2 === void 0 ? void 0 : (_match$pair2$player = _match$pair2.player2) === null || _match$pair2$player === void 0 ? void 0 : _match$pair2$player.name, \" vs\", \" \", (_match$pair3 = match.pair2) === null || _match$pair3 === void 0 ? void 0 : (_match$pair3$player = _match$pair3.player1) === null || _match$pair3$player === void 0 ? void 0 : _match$pair3$player.name, \" y\", \" \", (_match$pair4 = match.pair2) === null || _match$pair4 === void 0 ? void 0 : (_match$pair4$player = _match$pair4.player2) === null || _match$pair4$player === void 0 ? void 0 : _match$pair4$player.name]\n                            }, void 0, true, {\n                              fileName: _jsxFileName,\n                              lineNumber: 1312,\n                              columnNumber: 41\n                            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                              className: \"match-info\",\n                              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                                className: \"court-badge\",\n                                children: [\"\\uD83C\\uDFDF\\uFE0F Cancha \", match.court]\n                              }, void 0, true, {\n                                fileName: _jsxFileName,\n                                lineNumber: 1319,\n                                columnNumber: 43\n                              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                                className: \"round-badge\",\n                                children: [\"\\uD83D\\uDD04 Ronda \", match.round]\n                              }, void 0, true, {\n                                fileName: _jsxFileName,\n                                lineNumber: 1322,\n                                columnNumber: 43\n                              }, this)]\n                            }, void 0, true, {\n                              fileName: _jsxFileName,\n                              lineNumber: 1318,\n                              columnNumber: 41\n                            }, this)]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1311,\n                            columnNumber: 39\n                          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                            className: \"match-details\",\n                            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                              className: \"match-pairs\",\n                              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                                children: \"Pareja 1:\"\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 1329,\n                                columnNumber: 43\n                              }, this), \" \", (_match$pair5 = match.pair1) === null || _match$pair5 === void 0 ? void 0 : (_match$pair5$player = _match$pair5.player1) === null || _match$pair5$player === void 0 ? void 0 : _match$pair5$player.name, \" y\", \" \", (_match$pair6 = match.pair1) === null || _match$pair6 === void 0 ? void 0 : (_match$pair6$player = _match$pair6.player2) === null || _match$pair6$player === void 0 ? void 0 : _match$pair6$player.name]\n                            }, void 0, true, {\n                              fileName: _jsxFileName,\n                              lineNumber: 1328,\n                              columnNumber: 41\n                            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                              className: \"match-pairs\",\n                              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                                children: \"Pareja 2:\"\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 1334,\n                                columnNumber: 43\n                              }, this), \" \", (_match$pair7 = match.pair2) === null || _match$pair7 === void 0 ? void 0 : (_match$pair7$player = _match$pair7.player1) === null || _match$pair7$player === void 0 ? void 0 : _match$pair7$player.name, \" y\", \" \", (_match$pair8 = match.pair2) === null || _match$pair8 === void 0 ? void 0 : (_match$pair8$player = _match$pair8.player2) === null || _match$pair8$player === void 0 ? void 0 : _match$pair8$player.name]\n                            }, void 0, true, {\n                              fileName: _jsxFileName,\n                              lineNumber: 1333,\n                              columnNumber: 41\n                            }, this)]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1327,\n                            columnNumber: 39\n                          }, this), (() => {\n                            // Calcular el ganador en tiempo real\n                            const matchGames = games.filter(g => g.match_id === match.id);\n                            if (matchGames.length > 0) {\n                              const stats = MatchResultCalculator.calculateMatchStatistics(match, matchGames);\n                              const isTie = stats.isTie;\n                              if (isTie) {\n                                return /*#__PURE__*/_jsxDEV(\"div\", {\n                                  className: \"winner\",\n                                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                                    className: \"winner-icon\",\n                                    children: \"\\uD83E\\uDD1D\"\n                                  }, void 0, false, {\n                                    fileName: _jsxFileName,\n                                    lineNumber: 1355,\n                                    columnNumber: 49\n                                  }, this), \"Empate (\", stats.pair1TotalPoints, \"-\", stats.pair2TotalPoints, \" \", \"puntos)\"]\n                                }, void 0, true, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 1354,\n                                  columnNumber: 47\n                                }, this);\n                              } else {\n                                var _match$pair9, _match$pair9$player, _match$pair0, _match$pair0$player, _match$pair1, _match$pair1$player, _match$pair10, _match$pair10$player;\n                                const winnerId = stats.pair1TotalPoints > stats.pair2TotalPoints ? match.pair1_id : match.pair2_id;\n                                return /*#__PURE__*/_jsxDEV(\"div\", {\n                                  className: \"winner\",\n                                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                                    className: \"winner-icon\",\n                                    children: \"\\uD83C\\uDFC6\"\n                                  }, void 0, false, {\n                                    fileName: _jsxFileName,\n                                    lineNumber: 1372,\n                                    columnNumber: 49\n                                  }, this), \"Ganador:\", \" \", winnerId === match.pair1_id ? `${(_match$pair9 = match.pair1) === null || _match$pair9 === void 0 ? void 0 : (_match$pair9$player = _match$pair9.player1) === null || _match$pair9$player === void 0 ? void 0 : _match$pair9$player.name} y ${(_match$pair0 = match.pair1) === null || _match$pair0 === void 0 ? void 0 : (_match$pair0$player = _match$pair0.player2) === null || _match$pair0$player === void 0 ? void 0 : _match$pair0$player.name}` : `${(_match$pair1 = match.pair2) === null || _match$pair1 === void 0 ? void 0 : (_match$pair1$player = _match$pair1.player1) === null || _match$pair1$player === void 0 ? void 0 : _match$pair1$player.name} y ${(_match$pair10 = match.pair2) === null || _match$pair10 === void 0 ? void 0 : (_match$pair10$player = _match$pair10.player2) === null || _match$pair10$player === void 0 ? void 0 : _match$pair10$player.name}`]\n                                }, void 0, true, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 1371,\n                                  columnNumber: 47\n                                }, this);\n                              }\n                            } else {\n                              // Fallback a los datos de la base de datos\n                              if (match.winner_id) {\n                                var _match$pair11, _match$pair11$player, _match$pair12, _match$pair12$player, _match$pair13, _match$pair13$player, _match$pair14, _match$pair14$player;\n                                return /*#__PURE__*/_jsxDEV(\"div\", {\n                                  className: \"winner\",\n                                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                                    className: \"winner-icon\",\n                                    children: \"\\uD83C\\uDFC6\"\n                                  }, void 0, false, {\n                                    fileName: _jsxFileName,\n                                    lineNumber: 1387,\n                                    columnNumber: 49\n                                  }, this), \"Ganador:\", \" \", match.winner_id === match.pair1_id ? `${(_match$pair11 = match.pair1) === null || _match$pair11 === void 0 ? void 0 : (_match$pair11$player = _match$pair11.player1) === null || _match$pair11$player === void 0 ? void 0 : _match$pair11$player.name} y ${(_match$pair12 = match.pair1) === null || _match$pair12 === void 0 ? void 0 : (_match$pair12$player = _match$pair12.player2) === null || _match$pair12$player === void 0 ? void 0 : _match$pair12$player.name}` : `${(_match$pair13 = match.pair2) === null || _match$pair13 === void 0 ? void 0 : (_match$pair13$player = _match$pair13.player1) === null || _match$pair13$player === void 0 ? void 0 : _match$pair13$player.name} y ${(_match$pair14 = match.pair2) === null || _match$pair14 === void 0 ? void 0 : (_match$pair14$player = _match$pair14.player2) === null || _match$pair14$player === void 0 ? void 0 : _match$pair14$player.name}`]\n                                }, void 0, true, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 1386,\n                                  columnNumber: 47\n                                }, this);\n                              } else if (match.is_finished) {\n                                return /*#__PURE__*/_jsxDEV(\"div\", {\n                                  className: \"winner\",\n                                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                                    className: \"winner-icon\",\n                                    children: \"\\uD83E\\uDD1D\"\n                                  }, void 0, false, {\n                                    fileName: _jsxFileName,\n                                    lineNumber: 1400,\n                                    columnNumber: 49\n                                  }, this), \"Empate\"]\n                                }, void 0, true, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 1399,\n                                  columnNumber: 47\n                                }, this);\n                              }\n                            }\n                            return null;\n                          })(), /*#__PURE__*/_jsxDEV(\"div\", {\n                            className: \"match-status\",\n                            children: match.is_finished ? /*#__PURE__*/_jsxDEV(\"span\", {\n                              className: \"status-finished\",\n                              children: \"\\u2714 Finalizado\"\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 1412,\n                              columnNumber: 43\n                            }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n                              className: \"status-pending\",\n                              children: \"\\u23F3 Pendiente\"\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 1416,\n                              columnNumber: 43\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1410,\n                            columnNumber: 39\n                          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                            className: \"match-actions\",\n                            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                              onClick: e => {\n                                e.stopPropagation();\n                                showMatchResultsHandler(match);\n                              },\n                              className: \"view-results-btn\",\n                              children: \"\\uD83D\\uDCCA Ver Resultados\"\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 1422,\n                              columnNumber: 41\n                            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                              onClick: e => {\n                                e.stopPropagation();\n                                openScoreCorrector(match);\n                              },\n                              className: \"correct-result-btn\",\n                              children: \"\\u270F\\uFE0F Marcador\"\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 1431,\n                              columnNumber: 41\n                            }, this)]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1421,\n                            columnNumber: 39\n                          }, this)]\n                        }, match.id, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1300,\n                          columnNumber: 37\n                        }, this);\n                      })\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1298,\n                      columnNumber: 33\n                    }, this)]\n                  }, round, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1293,\n                    columnNumber: 31\n                  }, this))]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1280,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(StandingsTable, {\n                  tournamentId: selectedTournament.id,\n                  forceRefresh: forceRefresh\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1451,\n                  columnNumber: 23\n                }, this), isTournamentFinished && winner && /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"winner-button-container\",\n                  children: /*#__PURE__*/_jsxDEV(\"button\", {\n                    className: \"show-winner-button\",\n                    onClick: showWinnerScreenHandler,\n                    children: \"\\uD83C\\uDFC6 \\xA1Ver Ganador!\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1459,\n                    columnNumber: 27\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1458,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"back-home-button-container\",\n                  children: /*#__PURE__*/_jsxDEV(\"button\", {\n                    className: \"back-home-button\",\n                    onClick: handleBackToHome,\n                    children: \"\\uD83C\\uDFE0 Volver al Inicio\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1470,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1469,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1278,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 845,\n              columnNumber: 17\n            }, this)\n          }, void 0, false) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"no-tournament-selected\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: \"\\uD83C\\uDFC6 Bienvenido al Gestor de Torneos\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1483,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Selecciona un torneo del panel izquierdo para comenzar a gestionar partidos y resultados.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1484,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1482,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 842,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 833,\n        columnNumber: 9\n      }, this), showWinnerScreen && winner && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"winner-screen\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"winner-content\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"winner-celebration\",\n            children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n              className: \"winner-title\",\n              children: \"\\uD83C\\uDFC6 \\xA1FELICIDADES! \\uD83C\\uDFC6\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1498,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"winner-names\",\n              children: [(_winner$player = winner.player1) === null || _winner$player === void 0 ? void 0 : _winner$player.name, \" y \", (_winner$player2 = winner.player2) === null || _winner$player2 === void 0 ? void 0 : _winner$player2.name]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1499,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"winner-subtitle\",\n              children: \"\\xA1Son los campeones del torneo!\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1502,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"winner-stats\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"stat-item\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"stat-number\",\n                  children: tournamentWinner ? tournamentWinner.totalSets : winner.sets_won\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1507,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"stat-label\",\n                  children: \"Sets Ganados\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1512,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1506,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"stat-item\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"stat-number\",\n                  children: tournamentWinner ? tournamentWinner.matchesPlayed : winner.games_won\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1515,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"stat-label\",\n                  children: \"Partidos Ganados\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1520,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1514,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"stat-item\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"stat-number\",\n                  children: tournamentWinner ? tournamentWinner.totalPoints : winner.points\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1523,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"stat-label\",\n                  children: \"Puntos Totales\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1528,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1522,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1505,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"back-button\",\n              onClick: hideWinnerScreenHandler,\n              children: \"\\uD83C\\uDFE0 Volver al Torneo\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1531,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1497,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1496,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1495,\n        columnNumber: 11\n      }, this), showMatchResults && selectedMatchResults && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"match-results-modal\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"match-results-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"match-results-header\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"\\uD83D\\uDCCA Resultados del Partido\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1547,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: hideMatchResultsHandler,\n              className: \"close-btn\",\n              children: \"\\u2715\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1548,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1546,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"match-results-info\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: [\"Partido \", selectedMatchResults.court, \" - Ronda\", \" \", selectedMatchResults.round]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1554,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"pairs-info\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"pair-info\",\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Pareja 1:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1560,\n                  columnNumber: 21\n                }, this), \" \", (_selectedMatchResults = selectedMatchResults.pair1) === null || _selectedMatchResults === void 0 ? void 0 : (_selectedMatchResults2 = _selectedMatchResults.player1) === null || _selectedMatchResults2 === void 0 ? void 0 : _selectedMatchResults2.name, \" y\", \" \", (_selectedMatchResults3 = selectedMatchResults.pair1) === null || _selectedMatchResults3 === void 0 ? void 0 : (_selectedMatchResults4 = _selectedMatchResults3.player2) === null || _selectedMatchResults4 === void 0 ? void 0 : _selectedMatchResults4.name]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1559,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"pair-info\",\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Pareja 2:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1565,\n                  columnNumber: 21\n                }, this), \" \", (_selectedMatchResults5 = selectedMatchResults.pair2) === null || _selectedMatchResults5 === void 0 ? void 0 : (_selectedMatchResults6 = _selectedMatchResults5.player1) === null || _selectedMatchResults6 === void 0 ? void 0 : _selectedMatchResults6.name, \" y\", \" \", (_selectedMatchResults7 = selectedMatchResults.pair2) === null || _selectedMatchResults7 === void 0 ? void 0 : (_selectedMatchResults8 = _selectedMatchResults7.player2) === null || _selectedMatchResults8 === void 0 ? void 0 : _selectedMatchResults8.name]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1564,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1558,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1553,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"match-results-details\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"result-summary\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"result-item\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"result-label\",\n                  children: \"Juegos Ganados:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1575,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"result-value\",\n                  children: [(calculatedMatchResults === null || calculatedMatchResults === void 0 ? void 0 : (_calculatedMatchResul = calculatedMatchResults.pair1) === null || _calculatedMatchResul === void 0 ? void 0 : _calculatedMatchResul.games_won) || ((_selectedMatchResults9 = selectedMatchResults.pair1) === null || _selectedMatchResults9 === void 0 ? void 0 : _selectedMatchResults9.games_won) || 0, \" \", \"-\", \" \", (calculatedMatchResults === null || calculatedMatchResults === void 0 ? void 0 : (_calculatedMatchResul2 = calculatedMatchResults.pair2) === null || _calculatedMatchResul2 === void 0 ? void 0 : _calculatedMatchResul2.games_won) || ((_selectedMatchResults0 = selectedMatchResults.pair2) === null || _selectedMatchResults0 === void 0 ? void 0 : _selectedMatchResults0.games_won) || 0]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1576,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1574,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"result-item\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"result-label\",\n                  children: \"Sets Ganados:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1587,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"result-value\",\n                  children: [(calculatedMatchResults === null || calculatedMatchResults === void 0 ? void 0 : (_calculatedMatchResul3 = calculatedMatchResults.pair1) === null || _calculatedMatchResul3 === void 0 ? void 0 : _calculatedMatchResul3.sets_won) || ((_selectedMatchResults1 = selectedMatchResults.pair1) === null || _selectedMatchResults1 === void 0 ? void 0 : _selectedMatchResults1.sets_won) || 0, \" \", \"-\", \" \", (calculatedMatchResults === null || calculatedMatchResults === void 0 ? void 0 : (_calculatedMatchResul4 = calculatedMatchResults.pair2) === null || _calculatedMatchResul4 === void 0 ? void 0 : _calculatedMatchResul4.sets_won) || ((_selectedMatchResults10 = selectedMatchResults.pair2) === null || _selectedMatchResults10 === void 0 ? void 0 : _selectedMatchResults10.sets_won) || 0]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1588,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1586,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"result-item\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"result-label\",\n                  children: \"Puntos Totales:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1599,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"result-value\",\n                  children: [(calculatedMatchResults === null || calculatedMatchResults === void 0 ? void 0 : (_calculatedMatchResul5 = calculatedMatchResults.pair1) === null || _calculatedMatchResul5 === void 0 ? void 0 : _calculatedMatchResul5.points) || ((_selectedMatchResults11 = selectedMatchResults.pair1) === null || _selectedMatchResults11 === void 0 ? void 0 : _selectedMatchResults11.points) || 0, \" \", \"-\", \" \", (calculatedMatchResults === null || calculatedMatchResults === void 0 ? void 0 : (_calculatedMatchResul6 = calculatedMatchResults.pair2) === null || _calculatedMatchResul6 === void 0 ? void 0 : _calculatedMatchResul6.points) || ((_selectedMatchResults12 = selectedMatchResults.pair2) === null || _selectedMatchResults12 === void 0 ? void 0 : _selectedMatchResults12.points) || 0]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1600,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1598,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1573,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"match-winner\",\n              children: ((_calculatedMatchResul7, _selectedMatchResults13, _calculatedMatchResul8, _selectedMatchResults14) => {\n                // Verificar si es empate basado en los puntos totales\n                const pair1Points = (calculatedMatchResults === null || calculatedMatchResults === void 0 ? void 0 : (_calculatedMatchResul7 = calculatedMatchResults.pair1) === null || _calculatedMatchResul7 === void 0 ? void 0 : _calculatedMatchResul7.points) || ((_selectedMatchResults13 = selectedMatchResults.pair1) === null || _selectedMatchResults13 === void 0 ? void 0 : _selectedMatchResults13.points) || 0;\n                const pair2Points = (calculatedMatchResults === null || calculatedMatchResults === void 0 ? void 0 : (_calculatedMatchResul8 = calculatedMatchResults.pair2) === null || _calculatedMatchResul8 === void 0 ? void 0 : _calculatedMatchResul8.points) || ((_selectedMatchResults14 = selectedMatchResults.pair2) === null || _selectedMatchResults14 === void 0 ? void 0 : _selectedMatchResults14.points) || 0;\n                const isTie = pair1Points === pair2Points;\n                if (isTie) {\n                  return /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"tie-display\",\n                    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"tie-icon\",\n                      children: \"\\uD83E\\uDD1D\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1628,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"tie-text\",\n                      children: [\"Empate (\", pair1Points, \"-\", pair2Points, \" puntos totales)\"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1629,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1627,\n                    columnNumber: 25\n                  }, this);\n                } else {\n                  const winnerId = (calculatedMatchResults === null || calculatedMatchResults === void 0 ? void 0 : calculatedMatchResults.winner_id) || selectedMatchResults.winner_id;\n                  if (winnerId) {\n                    var _selectedMatchResults15, _selectedMatchResults16, _selectedMatchResults17, _selectedMatchResults18, _selectedMatchResults19, _selectedMatchResults20, _selectedMatchResults21, _selectedMatchResults22, _selectedMatchResults23;\n                    return /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"winner-display\",\n                      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"winner-icon\",\n                        children: \"\\uD83C\\uDFC6\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1641,\n                        columnNumber: 29\n                      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"winner-text\",\n                        children: [\"Ganador:\", \" \", winnerId === ((_selectedMatchResults15 = selectedMatchResults.pair1) === null || _selectedMatchResults15 === void 0 ? void 0 : _selectedMatchResults15.id) ? `${(_selectedMatchResults16 = selectedMatchResults.pair1) === null || _selectedMatchResults16 === void 0 ? void 0 : (_selectedMatchResults17 = _selectedMatchResults16.player1) === null || _selectedMatchResults17 === void 0 ? void 0 : _selectedMatchResults17.name} y ${(_selectedMatchResults18 = selectedMatchResults.pair1) === null || _selectedMatchResults18 === void 0 ? void 0 : (_selectedMatchResults19 = _selectedMatchResults18.player2) === null || _selectedMatchResults19 === void 0 ? void 0 : _selectedMatchResults19.name}` : `${(_selectedMatchResults20 = selectedMatchResults.pair2) === null || _selectedMatchResults20 === void 0 ? void 0 : (_selectedMatchResults21 = _selectedMatchResults20.player1) === null || _selectedMatchResults21 === void 0 ? void 0 : _selectedMatchResults21.name} y ${(_selectedMatchResults22 = selectedMatchResults.pair2) === null || _selectedMatchResults22 === void 0 ? void 0 : (_selectedMatchResults23 = _selectedMatchResults22.player2) === null || _selectedMatchResults23 === void 0 ? void 0 : _selectedMatchResults23.name}`]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1642,\n                        columnNumber: 29\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1640,\n                      columnNumber: 27\n                    }, this);\n                  } else {\n                    return /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"tie-display\",\n                      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"tie-icon\",\n                        children: \"\\uD83E\\uDD1D\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1653,\n                        columnNumber: 29\n                      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"tie-text\",\n                        children: \"Empate\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1654,\n                        columnNumber: 29\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1652,\n                      columnNumber: 27\n                    }, this);\n                  }\n                }\n              })()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1612,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1572,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"match-results-actions\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: hideMatchResultsHandler,\n              className: \"close-results-btn\",\n              children: \"Cerrar\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1664,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1663,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1545,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1544,\n        columnNumber: 11\n      }, this), showScoreCorrector && selectedCorrectorMatch && /*#__PURE__*/_jsxDEV(MatchScoreEditor, {\n        match: selectedCorrectorMatch,\n        onClose: closeScoreCorrector,\n        onMatchFinish: handleScoreCorrectorUpdate\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1677,\n        columnNumber: 11\n      }, this), showSuccessModal && /*#__PURE__*/_jsxDEV(SuccessModal, {\n        title: successModalData.title,\n        message: successModalData.message,\n        icon: successModalData.icon,\n        isOpen: showSuccessModal,\n        onClose: () => setShowSuccessModal(false)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1686,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 809,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 808,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"54zyigxUknkZVymxvU8Kk/1ufT0=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","useMemo","TournamentManager","PlayerManager","PairManager","MatchScoreEditor","StandingsTable","SuccessModal","createPair","getPairs","updatePair","deletePair","deletePairFromDB","createMatch","getMatches","updateMatch","deleteMatchesByTournament","getGames","updateGame","deleteGame","updateTournament","testConnection","FlexibleMatchFinisher","MatchResultCalculator","TournamentWinnerCalculator","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","_winner$player","_winner$player2","_selectedMatchResults","_selectedMatchResults2","_selectedMatchResults3","_selectedMatchResults4","_selectedMatchResults5","_selectedMatchResults6","_selectedMatchResults7","_selectedMatchResults8","_calculatedMatchResul","_selectedMatchResults9","_calculatedMatchResul2","_selectedMatchResults0","_calculatedMatchResul3","_selectedMatchResults1","_calculatedMatchResul4","_selectedMatchResults10","_calculatedMatchResul5","_selectedMatchResults11","_calculatedMatchResul6","_selectedMatchResults12","selectedTournament","setSelectedTournament","pairs","setPairs","matches","setMatches","games","setGames","selectedMatchId","setSelectedMatchId","error","setError","loading","setLoading","showPlayerManager","setShowPlayerManager","showPairManager","setShowPairManager","selectedPlayers","setSelectedPlayers","showWinnerScreen","setShowWinnerScreen","showMatchResults","setShowMatchResults","selectedMatchResults","setSelectedMatchResults","calculatedMatchResults","setCalculatedMatchResults","showScoreCorrector","setShowScoreCorrector","selectedCorrectorMatch","setSelectedCorrectorMatch","forceRefresh","setForceRefresh","showDebugInfo","setShowDebugInfo","showSuccessModal","setShowSuccessModal","successModalData","setSuccessModalData","title","message","icon","loadTournamentData","id","console","log","name","pairsData","matchesData","Promise","all","length","err","pairId","filter","p","updatePairPlayers","player1","player2","player1_id","player2_id","map","pair","addPair","existingPairLocal","find","_pair$player","_pair$player2","_pair$player3","_pair$player4","sameIds","sameNames","toLowerCase","newPair","startTournament","allPairs","allCombinations","i","j","push","pair1","pair2","finalMatches","remainingCombinations","round","roundMatches","usedPairs","Set","courtOrder","courts","rotatedCourt","courtIndex","court","bestIndex","bestScore","combo","has","score","futureCombo","match","add","splice","createdMatches","createdMatch","is_started","prev","updateTieBreakScore","gameId","pair1Points","pair2Points","prevGames","g","tie_break_pair1_points","tie_break_pair2_points","toggleTieBreak","game","newIsTieBreak","is_tie_break","removeGame","correctGameScore","pair1Games","pair2Games","pair1TieBreakPoints","pair2TieBreakPoints","isTieBreak","pair1_games","pair2_games","updated_at","Date","toISOString","finishMatch","matchId","m","matchGames","match_id","canFinishMatch","result","success","winner_id","winnerId","is_finished","updatedPairsData","alert","handleMatchSelect","loadMatchGames","gamesData","selectedMatch","matchesByRound","reduce","acc","sortedPairs","sort","a","b","points","sets_won","games_won","matches_played","isTournamentFinished","every","tournamentWinner","setTournamentWinner","winner","showWinnerScreenHandler","calculateTournamentWinner","hideWinnerScreenHandler","showMatchResultsHandler","stats","calculateMatchStatistics","calculatedMatch","pair1GamesWon","pair1SetsWon","pair1TotalPoints","pair2GamesWon","pair2SetsWon","pair2TotalPoints","isTie","undefined","pair1_id","pair2_id","hideMatchResultsHandler","handleViewTournamentResults","tournament","recalculateMatchWinner","forEach","handleBackToHome","openScoreCorrector","otherGames","closeScoreCorrector","handleGameCorrection","handleScoreCorrectorUpdate","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onTournamentSelect","onViewResults","onClick","playersInPairs","flatMap","onPlayerSelect","players","player","index","isInPair","some","_existingPair$player","_existingPair$player2","_existingPair$player3","existingPair","playerNames","join","_pair$player5","_pair$player6","_pair$player7","_pair$player8","allowMultipleSelection","onPairUpdate","onPairDelete","disabled","window","confirm","isConnected","dbPairs","dbMatches","_pair$player9","_pair$player0","_pair$player1","_pair$player10","Object","entries","_match$pair","_match$pair$player","_match$pair2","_match$pair2$player","_match$pair3","_match$pair3$player","_match$pair4","_match$pair4$player","_match$pair5","_match$pair5$player","_match$pair6","_match$pair6$player","_match$pair7","_match$pair7$player","_match$pair8","_match$pair8$player","_match$pair9","_match$pair9$player","_match$pair0","_match$pair0$player","_match$pair1","_match$pair1$player","_match$pair10","_match$pair10$player","_match$pair11","_match$pair11$player","_match$pair12","_match$pair12$player","_match$pair13","_match$pair13$player","_match$pair14","_match$pair14$player","e","stopPropagation","tournamentId","totalSets","matchesPlayed","totalPoints","_calculatedMatchResul7","_selectedMatchResults13","_calculatedMatchResul8","_selectedMatchResults14","_selectedMatchResults15","_selectedMatchResults16","_selectedMatchResults17","_selectedMatchResults18","_selectedMatchResults19","_selectedMatchResults20","_selectedMatchResults21","_selectedMatchResults22","_selectedMatchResults23","onClose","onMatchFinish","isOpen","_c","$RefreshReg$"],"sources":["/Users/nedev/padel-tournament-app/src/App.tsx"],"sourcesContent":["import React, { useState, useEffect, useCallback, useMemo } from \"react\";\nimport \"./App.css\";\nimport { TournamentManager } from \"./components/TournamentManager\";\nimport { PlayerManager } from \"./components/PlayerManager\";\nimport { PairManager } from \"./components/PairManager\";\nimport { MatchScoreEditor } from \"./components/MatchScoreEditor\";\nimport StandingsTable from \"./components/StandingsTable\";\nimport { SuccessModal } from \"./components/SuccessModal\";\n\nimport {\n  Tournament,\n  Player,\n  Pair,\n  Match,\n  Game,\n  createPair,\n  getPairs,\n  updatePair,\n  deletePair as deletePairFromDB,\n  createMatch,\n  getMatches,\n  updateMatch,\n  deleteMatchesByTournament,\n  getGames,\n  updateGame,\n  deleteGame,\n  updateTournament,\n} from \"./lib/database\";\nimport { testConnection } from \"./lib/supabaseClient\";\nimport { FlexibleMatchFinisher } from \"./components/FlexibleMatchFinisher\";\nimport { MatchResultCalculator } from \"./components/MatchResultCalculator\";\nimport {\n  TournamentWinnerCalculator,\n  TournamentWinner,\n} from \"./components/TournamentWinnerCalculator\";\n\nfunction App() {\n  const [selectedTournament, setSelectedTournament] =\n    useState<Tournament | null>(null);\n  const [pairs, setPairs] = useState<Pair[]>([]);\n  const [matches, setMatches] = useState<Match[]>([]);\n  const [games, setGames] = useState<Game[]>([]);\n  const [selectedMatchId, setSelectedMatchId] = useState<string | null>(null);\n  const [error, setError] = useState<string>(\"\");\n  const [loading, setLoading] = useState(false);\n  const [showPlayerManager, setShowPlayerManager] = useState(false);\n  const [showPairManager, setShowPairManager] = useState(false);\n  const [selectedPlayers, setSelectedPlayers] = useState<Player[]>([]);\n  const [showWinnerScreen, setShowWinnerScreen] = useState(false);\n  const [showMatchResults, setShowMatchResults] = useState(false);\n  const [selectedMatchResults, setSelectedMatchResults] =\n    useState<Match | null>(null);\n  const [calculatedMatchResults, setCalculatedMatchResults] =\n    useState<any>(null);\n  const [showScoreCorrector, setShowScoreCorrector] = useState(false);\n  const [selectedCorrectorMatch, setSelectedCorrectorMatch] =\n    useState<Match | null>(null);\n  const [forceRefresh, setForceRefresh] = useState(0);\n  const [showDebugInfo, setShowDebugInfo] = useState(false);\n\n  const [showSuccessModal, setShowSuccessModal] = useState(false);\n  const [successModalData, setSuccessModalData] = useState({\n    title: \"\",\n    message: \"\",\n    icon: \"✅\",\n  });\n\n  // Cargar datos cuando se selecciona un torneo\n  useEffect(() => {\n    if (selectedTournament) {\n      loadTournamentData();\n    }\n  }, [selectedTournament?.id]);\n\n  const loadTournamentData = useCallback(async () => {\n    if (!selectedTournament) return;\n\n    try {\n      setLoading(true);\n      setError(\"\");\n      console.log(\"Loading tournament data for:\", selectedTournament.name);\n\n      const [pairsData, matchesData] = await Promise.all([\n        getPairs(selectedTournament.id),\n        getMatches(selectedTournament.id),\n      ]);\n\n      console.log(\"Pairs loaded:\", pairsData.length, \"pairs\");\n      setPairs(pairsData);\n\n      console.log(\n        \"Matches loaded from database:\",\n        matchesData.length,\n        \"matches\"\n      );\n      setMatches(matchesData);\n    } catch (err) {\n      console.error(\"Error loading tournament data:\", err);\n      setError(\n        \"Error al cargar los datos del torneo: \" + (err as Error).message\n      );\n    } finally {\n      setLoading(false);\n    }\n  }, [selectedTournament]);\n\n  const deletePair = async (pairId: string) => {\n    try {\n      setError(\"\");\n      console.log(\"Eliminando pareja:\", pairId);\n\n      await deletePairFromDB(pairId);\n      setPairs(pairs.filter((p) => p.id !== pairId));\n\n      console.log(\"Pareja eliminada exitosamente\");\n    } catch (err) {\n      console.error(\"Error eliminando pareja:\", err);\n      setError(\"Error al eliminar la pareja: \" + (err as Error).message);\n    }\n  };\n\n  const updatePairPlayers = async (\n    pairId: string,\n    player1: Player,\n    player2: Player\n  ) => {\n    try {\n      setError(\"\");\n      console.log(\"Actualizando pareja:\", pairId);\n      console.log(\"Nuevos jugadores:\", player1.name, \"+\", player2.name);\n\n      // Actualizar la pareja en la base de datos\n      await updatePair(pairId, {\n        player1_id: player1.id,\n        player2_id: player2.id,\n      });\n\n      // Actualizar el estado local\n      setPairs(\n        pairs.map((pair) => {\n          if (pair.id === pairId) {\n            return {\n              ...pair,\n              player1_id: player1.id,\n              player2_id: player2.id,\n              player1: player1,\n              player2: player2,\n            };\n          }\n          return pair;\n        })\n      );\n\n      console.log(\"Pareja actualizada exitosamente\");\n    } catch (err) {\n      console.error(\"Error actualizando pareja:\", err);\n      setError(\"Error al actualizar la pareja: \" + (err as Error).message);\n    }\n  };\n\n  const addPair = async (player1: Player, player2: Player) => {\n    if (!selectedTournament) {\n      setError(\"No hay torneo seleccionado\");\n      return;\n    }\n\n    try {\n      setError(\"\");\n\n      // Verificar duplicados en estado local\n      const existingPairLocal = pairs.find((pair) => {\n        const sameIds =\n          (pair.player1_id === player1.id && pair.player2_id === player2.id) ||\n          (pair.player1_id === player2.id && pair.player2_id === player1.id);\n\n        const sameNames =\n          (pair.player1?.name.toLowerCase() === player1.name.toLowerCase() &&\n            pair.player2?.name.toLowerCase() === player2.name.toLowerCase()) ||\n          (pair.player1?.name.toLowerCase() === player2.name.toLowerCase() &&\n            pair.player2?.name.toLowerCase() === player1.name.toLowerCase());\n\n        return sameIds || sameNames;\n      });\n\n      if (existingPairLocal) {\n        setError(\n          `La pareja ${player1.name} y ${player2.name} ya está registrada`\n        );\n        return;\n      }\n\n      const newPair = await createPair(\n        selectedTournament.id,\n        player1.id,\n        player2.id\n      );\n\n      setPairs([...pairs, newPair]);\n      setSelectedPlayers([]);\n\n      console.log(\"Pair added successfully\");\n    } catch (err) {\n      console.error(\"Error creating pair:\", err);\n      setError(\"Error al crear la pareja: \" + (err as Error).message);\n    }\n  };\n\n  const startTournament = async () => {\n    if (!selectedTournament || pairs.length < 2) {\n      setError(\"Se necesitan al menos 2 parejas para iniciar el torneo\");\n      return;\n    }\n\n    try {\n      setLoading(true);\n      setError(\"\");\n\n      console.log(\"🚀 Iniciando torneo:\", selectedTournament.name);\n\n      // Limpiar partidos existentes\n      if (matches.length > 0) {\n        await deleteMatchesByTournament(selectedTournament.id);\n        setMatches([]);\n      }\n\n      const allPairs = [...pairs];\n      const allCombinations = [];\n\n      for (let i = 0; i < allPairs.length; i++) {\n        for (let j = i + 1; j < allPairs.length; j++) {\n          allCombinations.push({\n            pair1: allPairs[i],\n            pair2: allPairs[j],\n          });\n        }\n      }\n\n      const finalMatches = [];\n      const remainingCombinations = [...allCombinations];\n      let round = 1;\n\n      while (remainingCombinations.length > 0) {\n        const roundMatches = [];\n        const usedPairs = new Set();\n        const courtOrder = [];\n\n        for (let i = 0; i < selectedTournament.courts; i++) {\n          const rotatedCourt =\n            ((round - 1 + i) % selectedTournament.courts) + 1;\n          courtOrder.push(rotatedCourt);\n        }\n\n        for (let courtIndex = 0; courtIndex < courtOrder.length; courtIndex++) {\n          const court = courtOrder[courtIndex];\n          let bestIndex = -1;\n          let bestScore = -1;\n\n          for (let i = 0; i < remainingCombinations.length; i++) {\n            const combo = remainingCombinations[i];\n\n            if (\n              !usedPairs.has(combo.pair1.id) &&\n              !usedPairs.has(combo.pair2.id)\n            ) {\n              let score = 0;\n\n              for (let j = 0; j < remainingCombinations.length; j++) {\n                if (i !== j) {\n                  const futureCombo = remainingCombinations[j];\n                  if (\n                    !usedPairs.has(futureCombo.pair1.id) &&\n                    !usedPairs.has(futureCombo.pair2.id) &&\n                    futureCombo.pair1.id !== combo.pair1.id &&\n                    futureCombo.pair1.id !== combo.pair2.id &&\n                    futureCombo.pair2.id !== combo.pair1.id &&\n                    futureCombo.pair2.id !== combo.pair2.id\n                  ) {\n                    score++;\n                  }\n                }\n              }\n\n              if (score > bestScore) {\n                bestScore = score;\n                bestIndex = i;\n              }\n            }\n          }\n\n          if (bestIndex !== -1) {\n            const combo = remainingCombinations[bestIndex];\n\n            const match = {\n              pair1: combo.pair1,\n              pair2: combo.pair2,\n              round,\n              court,\n            };\n\n            roundMatches.push(match);\n            usedPairs.add(combo.pair1.id);\n            usedPairs.add(combo.pair2.id);\n            remainingCombinations.splice(bestIndex, 1);\n          } else {\n            break;\n          }\n        }\n\n        if (roundMatches.length > 0) {\n          finalMatches.push(...roundMatches);\n        }\n\n        round++;\n      }\n\n      const createdMatches = [];\n\n      for (const match of finalMatches) {\n        try {\n          const createdMatch = await createMatch(\n            selectedTournament.id,\n            match.pair1.id,\n            match.pair2.id,\n            match.court,\n            match.round\n          );\n          createdMatches.push(createdMatch);\n        } catch (error) {\n          console.error(\"Error creating match:\", error);\n        }\n      }\n\n      await updateTournament(selectedTournament.id, { is_started: true });\n      setSelectedTournament((prev) =>\n        prev ? { ...prev, is_started: true } : null\n      );\n\n      await loadTournamentData();\n\n      setSuccessModalData({\n        title: \"¡Torneo Iniciado!\",\n        message: `Se han creado ${createdMatches.length} partidos exitosamente usando ${selectedTournament.courts} canchas. El torneo está listo para comenzar.`,\n        icon: \"🏆\",\n      });\n      setShowSuccessModal(true);\n    } catch (error) {\n      console.error(\"Error starting tournament:\", error);\n      setError(\"Error al iniciar el torneo: \" + (error as Error).message);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const updateTieBreakScore = async (\n    gameId: string,\n    pair1Points: number,\n    pair2Points: number\n  ) => {\n    try {\n      setError(\"\");\n\n      setGames((prevGames) =>\n        prevGames.map((g) =>\n          g.id === gameId\n            ? {\n                ...g,\n                tie_break_pair1_points: pair1Points,\n                tie_break_pair2_points: pair2Points,\n              }\n            : g\n        )\n      );\n\n      await updateGame(gameId, {\n        tie_break_pair1_points: pair1Points,\n        tie_break_pair2_points: pair2Points,\n      });\n    } catch (err) {\n      console.error(\"❌ Error al actualizar el tie break:\", err);\n      setError(\"Error al actualizar el tie break: \" + (err as Error).message);\n    }\n  };\n\n  const toggleTieBreak = async (gameId: string) => {\n    try {\n      setError(\"\");\n      const game = games.find((g) => g.id === gameId);\n      if (!game) return;\n\n      const newIsTieBreak = !game.is_tie_break;\n\n      setGames((prevGames) =>\n        prevGames.map((g) =>\n          g.id === gameId\n            ? {\n                ...g,\n                is_tie_break: newIsTieBreak,\n                tie_break_pair1_points: 0,\n                tie_break_pair2_points: 0,\n              }\n            : g\n        )\n      );\n\n      await updateGame(gameId, {\n        is_tie_break: newIsTieBreak,\n        tie_break_pair1_points: 0,\n        tie_break_pair2_points: 0,\n      });\n    } catch (err) {\n      setError(\"Error al cambiar el tipo de juego\");\n      console.error(err);\n    }\n  };\n\n  const removeGame = async (gameId: string) => {\n    try {\n      setError(\"\");\n\n      await deleteGame(gameId);\n      setGames(games.filter((g) => g.id !== gameId));\n    } catch (err) {\n      console.error(\"❌ Error al eliminar el juego:\", err);\n      setError(\"Error al eliminar el juego: \" + (err as Error).message);\n    }\n  };\n\n  const correctGameScore = useCallback(\n    async (\n      gameId: string,\n      pair1Games: number,\n      pair2Games: number,\n      pair1TieBreakPoints: number = 0,\n      pair2TieBreakPoints: number = 0,\n      isTieBreak: boolean = false\n    ) => {\n      try {\n        setError(\"\");\n\n        setGames((prevGames) =>\n          prevGames.map((g) =>\n            g.id === gameId\n              ? {\n                  ...g,\n                  pair1_games: pair1Games,\n                  pair2_games: pair2Games,\n                  tie_break_pair1_points: pair1TieBreakPoints,\n                  tie_break_pair2_points: pair2TieBreakPoints,\n                  is_tie_break: isTieBreak,\n                  updated_at: new Date().toISOString(),\n                }\n              : g\n          )\n        );\n\n        await updateGame(gameId, {\n          pair1_games: pair1Games,\n          pair2_games: pair2Games,\n          tie_break_pair1_points: pair1TieBreakPoints,\n          tie_break_pair2_points: pair2TieBreakPoints,\n          is_tie_break: isTieBreak,\n        });\n      } catch (err) {\n        console.error(\"❌ Error al corregir el marcador:\", err);\n        setError(\"Error al corregir el marcador: \" + (err as Error).message);\n      }\n    },\n    []\n  );\n\n  const finishMatch = async (matchId: string) => {\n    try {\n      setError(\"\");\n      const match = matches.find((m) => m.id === matchId);\n      if (!match) {\n        console.error(\"Match not found:\", matchId);\n        return;\n      }\n\n      const matchGames = games.filter((g) => g.match_id === matchId);\n\n      if (!FlexibleMatchFinisher.canFinishMatch(matchGames)) {\n        setError(\n          \"No se puede finalizar el partido. Verifica que todos los juegos tengan marcadores válidos.\"\n        );\n        return;\n      }\n\n      const result = await FlexibleMatchFinisher.finishMatch(\n        match,\n        matchGames,\n        pairs,\n        async () => {\n          if (selectedTournament) {\n            const pairsData = await getPairs(selectedTournament.id);\n            setPairs(pairsData);\n            setForceRefresh((prev) => prev + 1);\n            const matchesData = await getMatches(selectedTournament.id);\n            setMatches(matchesData);\n          }\n        }\n      );\n\n      if (result.success) {\n        setMatches(\n          matches.map((m) =>\n            m.id === matchId\n              ? { ...m, winner_id: result.winnerId, is_finished: true }\n              : m\n          )\n        );\n\n        if (selectedTournament) {\n          const updatedPairsData = await getPairs(selectedTournament.id);\n          setPairs(updatedPairsData);\n          setForceRefresh((prev) => prev + 1);\n        }\n\n        alert(result.message);\n      } else {\n        setError(result.message);\n      }\n    } catch (err) {\n      setError(\"Error al finalizar el partido\");\n      console.error(err);\n    }\n  };\n\n  const handleMatchSelect = (matchId: string) => {\n    setSelectedMatchId(matchId);\n    loadMatchGames(matchId);\n  };\n\n  const loadMatchGames = async (matchId: string) => {\n    try {\n      const gamesData = await getGames(matchId);\n      setGames(gamesData);\n    } catch (err) {\n      console.error(\"❌ Error al cargar juegos:\", err);\n    }\n  };\n\n  const selectedMatch = matches.find((match) => match.id === selectedMatchId);\n\n  const matchesByRound = matches.reduce((acc, match) => {\n    if (!acc[match.round]) {\n      acc[match.round] = [];\n    }\n    acc[match.round].push(match);\n    return acc;\n  }, {} as Record<number, Match[]>);\n\n  const sortedPairs = useMemo(() => {\n    return [...pairs].sort((a, b) => {\n      // Criterio 1: Puntos totales (descendente) - CRITERIO PRINCIPAL\n      if (a.points !== b.points) {\n        return b.points - a.points;\n      }\n      // Criterio 2: Sets ganados (descendente) - CRITERIO DE DESEMPATE\n      if (a.sets_won !== b.sets_won) {\n        return b.sets_won - a.sets_won;\n      }\n      // Criterio 3: Juegos ganados (descendente)\n      if (a.games_won !== b.games_won) {\n        return b.games_won - a.games_won;\n      }\n      // Criterio 4: Menos partidos jugados (mejor eficiencia)\n      return a.matches_played - b.matches_played;\n    });\n  }, [pairs, forceRefresh]);\n\n  const isTournamentFinished = useMemo(() => {\n    return matches.length > 0 && matches.every((match) => match.is_finished);\n  }, [matches]);\n\n  const [tournamentWinner, setTournamentWinner] =\n    useState<TournamentWinner | null>(null);\n\n  const winner = useMemo(() => {\n    return tournamentWinner\n      ? tournamentWinner.pair\n      : sortedPairs.length > 0\n      ? sortedPairs[0]\n      : null;\n  }, [tournamentWinner, sortedPairs]);\n\n  const showWinnerScreenHandler = async () => {\n    try {\n      console.log(\"🏆 Calculando ganador del torneo...\");\n      const winner = await TournamentWinnerCalculator.calculateTournamentWinner(\n        pairs,\n        matches\n      );\n      setTournamentWinner(winner);\n      setShowWinnerScreen(true);\n    } catch (error) {\n      console.error(\"❌ Error al calcular ganador:\", error);\n      setShowWinnerScreen(true);\n    }\n  };\n\n  const hideWinnerScreenHandler = () => {\n    setShowWinnerScreen(false);\n  };\n\n  const showMatchResultsHandler = async (match: Match) => {\n    try {\n      // Obtener los juegos del partido\n      const matchGames = await getGames(match.id);\n\n      // Calcular estadísticas en tiempo real\n      const stats = MatchResultCalculator.calculateMatchStatistics(\n        match,\n        matchGames\n      );\n\n      // Crear un objeto con los resultados calculados\n      const calculatedMatch = {\n        ...match,\n        pair1: {\n          ...match.pair1,\n          games_won: stats.pair1GamesWon,\n          sets_won: stats.pair1SetsWon,\n          points: stats.pair1TotalPoints,\n        },\n        pair2: {\n          ...match.pair2,\n          games_won: stats.pair2GamesWon,\n          sets_won: stats.pair2SetsWon,\n          points: stats.pair2TotalPoints,\n        },\n        winner_id: stats.isTie\n          ? undefined\n          : stats.pair1TotalPoints > stats.pair2TotalPoints\n          ? match.pair1_id\n          : match.pair2_id,\n      };\n\n      setSelectedMatchResults(match);\n      setCalculatedMatchResults(calculatedMatch);\n      setShowMatchResults(true);\n    } catch (error) {\n      console.error(\"Error al calcular resultados:\", error);\n      // Fallback al comportamiento original\n      setSelectedMatchResults(match);\n      setShowMatchResults(true);\n    }\n  };\n\n  const hideMatchResultsHandler = () => {\n    setShowMatchResults(false);\n    setSelectedMatchResults(null);\n    setCalculatedMatchResults(null);\n  };\n\n  const handleViewTournamentResults = async (tournament: Tournament) => {\n    try {\n      setSelectedTournament(tournament);\n      await loadTournamentData();\n      alert(\n        `✅ Torneo \"${tournament.name}\" seleccionado\\n\\nAhora puedes ver todos los partidos y resultados en el panel derecho.`\n      );\n    } catch (err) {\n      console.error(\"❌ Error al cargar resultados del torneo:\", err);\n      alert(\"Error al cargar los resultados del torneo. Inténtalo de nuevo.\");\n    }\n  };\n\n  const recalculateMatchWinner = async (matchId: string) => {\n    try {\n      const match = matches.find((m) => m.id === matchId);\n      if (!match) {\n        console.error(\"Match not found:\", matchId);\n        return;\n      }\n\n      const matchGames = await getGames(matchId);\n\n      if (matchGames.length === 0) {\n        console.log(\"No hay juegos para recalcular\");\n        return;\n      }\n\n      let pair1Games = 0;\n      let pair2Games = 0;\n\n      matchGames.forEach((game) => {\n        if (game.is_tie_break) {\n          if (\n            game.tie_break_pair1_points >= 10 &&\n            game.tie_break_pair1_points - game.tie_break_pair2_points >= 2\n          ) {\n            pair1Games++;\n          } else if (\n            game.tie_break_pair2_points >= 10 &&\n            game.tie_break_pair2_points - game.tie_break_pair1_points >= 2\n          ) {\n            pair2Games++;\n          }\n        } else {\n          if (game.pair1_games > game.pair2_games) {\n            pair1Games++;\n          } else if (game.pair2_games > game.pair1_games) {\n            pair2Games++;\n          }\n        }\n      });\n\n      const isTie = pair1Games === pair2Games;\n      const winnerId = isTie\n        ? undefined\n        : pair1Games > pair2Games\n        ? match.pair1_id\n        : match.pair2_id;\n\n      await updateMatch(matchId, {\n        winner_id: winnerId,\n        is_finished: true,\n      });\n\n      console.log(\"✅ Ganador recalculado y actualizado en la base de datos\");\n    } catch (error) {\n      console.error(\"Error recalculating match winner:\", error);\n    }\n  };\n\n  const handleBackToHome = () => {\n    setSelectedTournament(null);\n    setPairs([]);\n    setMatches([]);\n    setGames([]);\n    setSelectedMatchId(null);\n    setError(\"\");\n    setShowWinnerScreen(false);\n    setShowMatchResults(false);\n    setSelectedMatchResults(null);\n    setShowScoreCorrector(false);\n    setSelectedCorrectorMatch(null);\n    setForceRefresh(0);\n    setShowDebugInfo(false);\n    setShowSuccessModal(false);\n    setSuccessModalData({\n      title: \"\",\n      message: \"\",\n      icon: \"✅\",\n    });\n  };\n\n  const openScoreCorrector = async (match: Match) => {\n    try {\n      // Recargar los juegos del partido antes de abrir el editor\n      const matchGames = await getGames(match.id);\n      setGames((prevGames) => {\n        const otherGames = prevGames.filter((g) => g.match_id !== match.id);\n        return [...otherGames, ...matchGames];\n      });\n    } catch (error) {\n      console.error(\"Error al cargar juegos:\", error);\n    }\n    setSelectedCorrectorMatch(match);\n    setShowScoreCorrector(true);\n  };\n\n  const closeScoreCorrector = () => {\n    setShowScoreCorrector(false);\n    setSelectedCorrectorMatch(null);\n  };\n\n  // Función para cuando se corrige un juego (NO incrementa forceRefresh)\n  const handleGameCorrection = async () => {\n    if (selectedTournament) {\n      console.log(\n        \"🔄 Juego corregido - NO actualizando tabla de clasificación\"\n      );\n\n      // NO incrementar forceRefresh cuando se corrige un juego\n      // Solo cerrar el editor\n      console.log(\"✅ Solo se corrigió el juego - NO se actualizó la tabla\");\n    }\n    closeScoreCorrector();\n  };\n\n  // Función para cuando se finaliza un partido (SÍ incrementa forceRefresh)\n  const handleScoreCorrectorUpdate = async () => {\n    if (selectedTournament) {\n      console.log(\n        \"🏆 Actualizando tabla de clasificación después de FINALIZAR partido...\"\n      );\n\n      // SOLO incrementar forceRefresh cuando se FINALIZA un partido\n      setForceRefresh((prev) => {\n        console.log(\n          `🏆 Incrementando forceRefresh de ${prev} a ${\n            prev + 1\n          } (FINALIZACIÓN)`\n        );\n        return prev + 1;\n      });\n\n      console.log(\n        \"✅ Tabla de clasificación actualizada después de finalizar partido\"\n      );\n    }\n    closeScoreCorrector();\n  };\n\n  return (\n    <div className=\"App\">\n      <div className=\"container\">\n        <h1>🏆 Gestión de Torneos Express y Retas</h1>\n\n        {error && (\n          <div className=\"error\">\n            <h4>❌ Error</h4>\n            <p>{error}</p>\n            <div className=\"error-help\">\n              <h5>💡 Ayuda:</h5>\n              <ol>\n                <li>Verifica tu conexión a internet</li>\n                <li>Intenta recargar la página</li>\n                <li>Si el problema persiste, contacta al administrador</li>\n              </ol>\n            </div>\n          </div>\n        )}\n\n        {loading && (\n          <div className=\"loading\">\n            <p>⏳ Cargando...</p>\n          </div>\n        )}\n\n        <div className=\"main-layout\">\n          <div className=\"left-panel\">\n            <TournamentManager\n              selectedTournament={selectedTournament || undefined}\n              onTournamentSelect={setSelectedTournament}\n              onViewResults={handleViewTournamentResults}\n            />\n          </div>\n\n          <div className=\"right-panel\">\n            {selectedTournament ? (\n              <>\n                <div className=\"tournament-details\">\n                  {/* Gestión de Jugadores - MOVIDA AQUÍ */}\n                  <div className=\"player-management-section\">\n                    <div className=\"player-management-header\">\n                      <h3>👥 Gestión de Jugadores</h3>\n                      <button\n                        className=\"toggle-player-manager-btn\"\n                        onClick={() => setShowPlayerManager(!showPlayerManager)}\n                      >\n                        {showPlayerManager\n                          ? \"👥 Ocultar Gestión de Jugadores\"\n                          : \"👥 Mostrar Gestión de Jugadores\"}\n                      </button>\n                    </div>\n\n                    {showPlayerManager && (\n                      <div className=\"player-manager-container\">\n                        <PlayerManager\n                          playersInPairs={pairs.flatMap((pair) => [\n                            pair.player1_id,\n                            pair.player2_id,\n                          ])}\n                          onPlayerSelect={(players) => {\n                            console.log(\"=== SELECCIÓN DE JUGADORES ===\");\n                            console.log(\"Players selected:\", players.length);\n                            players.forEach((player, index) => {\n                              console.log(\n                                `Player ${index + 1}:`,\n                                player.name,\n                                \"(ID:\",\n                                player.id + \")\"\n                              );\n                            });\n\n                            // Validación: Verificar si algún jugador ya está en una pareja\n                            const playersInPairs = players.filter((player) => {\n                              const isInPair = pairs.some(\n                                (pair) =>\n                                  pair.player1_id === player.id ||\n                                  pair.player2_id === player.id\n                              );\n\n                              if (isInPair) {\n                                const existingPair = pairs.find(\n                                  (pair) =>\n                                    pair.player1_id === player.id ||\n                                    pair.player2_id === player.id\n                                );\n                                console.log(\n                                  `🚨 JUGADOR YA EN PAREJA: ${\n                                    player.name\n                                  } está en pareja con ${\n                                    existingPair?.player1?.id === player.id\n                                      ? existingPair?.player2?.name\n                                      : existingPair?.player1?.name\n                                  }`\n                                );\n                              }\n\n                              return isInPair;\n                            });\n\n                            if (playersInPairs.length > 0) {\n                              const playerNames = playersInPairs\n                                .map((p) => p.name)\n                                .join(\", \");\n                              console.log(\n                                \"🚨 ERROR: Jugadores ya están en parejas:\",\n                                playerNames\n                              );\n                              setError(\n                                `Los jugadores ${playerNames} ya están en parejas existentes. Debes eliminar sus parejas actuales antes de poder seleccionarlos nuevamente.`\n                              );\n                              return;\n                            }\n\n                            // Validación: No permitir jugadores con nombres iguales\n                            if (players.length === 2) {\n                              const player1 = players[0];\n                              const player2 = players[1];\n\n                              if (\n                                player1.name.toLowerCase() ===\n                                player2.name.toLowerCase()\n                              ) {\n                                console.log(\n                                  \"🚨 ERROR: Jugadores con nombres iguales detectados\"\n                                );\n                                console.log(\n                                  \"Player 1:\",\n                                  player1.name,\n                                  \"(ID:\",\n                                  player1.id + \")\"\n                                );\n                                console.log(\n                                  \"Player 2:\",\n                                  player2.name,\n                                  \"(ID:\",\n                                  player2.id + \")\"\n                                );\n                                setError(\n                                  \"No puedes seleccionar dos jugadores con el mismo nombre\"\n                                );\n                                return;\n                              }\n\n                              // Validación: Verificar si ya existe una pareja con estos jugadores\n                              const existingPair = pairs.find((pair) => {\n                                const sameIds =\n                                  (pair.player1_id === player1.id &&\n                                    pair.player2_id === player2.id) ||\n                                  (pair.player1_id === player2.id &&\n                                    pair.player2_id === player1.id);\n\n                                const sameNames =\n                                  (pair.player1?.name.toLowerCase() ===\n                                    player1.name.toLowerCase() &&\n                                    pair.player2?.name.toLowerCase() ===\n                                      player2.name.toLowerCase()) ||\n                                  (pair.player1?.name.toLowerCase() ===\n                                    player2.name.toLowerCase() &&\n                                    pair.player2?.name.toLowerCase() ===\n                                      player1.name.toLowerCase());\n\n                                if (sameIds || sameNames) {\n                                  console.log(\n                                    \"🚨 PAREJA DUPLICADA DETECTADA:\",\n                                    player1.name,\n                                    \"+\",\n                                    player2.name\n                                  );\n                                  console.log(\"Existing pair:\", existingPair);\n                                }\n\n                                return sameIds || sameNames;\n                              });\n\n                              if (existingPair) {\n                                console.log(\n                                  \"🚨 ERROR: Pareja ya existe en la base de datos\"\n                                );\n                                setError(\n                                  `La pareja ${player1.name} + ${player2.name} ya existe en el torneo`\n                                );\n                                return;\n                              }\n\n                              // Si llegamos aquí, la pareja es válida\n                              console.log(\n                                \"✅ PAREJA VÁLIDA:\",\n                                player1.name,\n                                \"+\",\n                                player2.name\n                              );\n                              addPair(player1, player2);\n                              setSelectedPlayers([]); // Limpiar selección después de crear la pareja\n                            } else {\n                              setSelectedPlayers(players);\n                            }\n                          }}\n                          selectedPlayers={selectedPlayers}\n                          allowMultipleSelection={true}\n                        />\n                      </div>\n                    )}\n                  </div>\n\n                  {/* Gestión de Parejas - NUEVO COMPONENTE */}\n                  <div className=\"pair-management-section\">\n                    <div className=\"pair-management-header\">\n                      <button\n                        className=\"toggle-pair-manager-btn\"\n                        onClick={() => setShowPairManager(!showPairManager)}\n                      >\n                        {showPairManager\n                          ? \"✏️ Ocultar Gestión de Parejas\"\n                          : \"✏️ Mostrar Gestión de Parejas\"}\n                      </button>\n                    </div>\n\n                    {showPairManager && (\n                      <div className=\"pair-manager-container\">\n                        <PairManager\n                          pairs={pairs}\n                          onPairUpdate={updatePairPlayers}\n                          onPairDelete={deletePair}\n                        />\n                      </div>\n                    )}\n                  </div>\n\n                  {!selectedTournament.is_started ? (\n                    <div className=\"start-tournament-section\">\n                      <h3>🚀 Iniciar Torneo</h3>\n                      <div className=\"tournament-info\">\n                        <p>Tienes {pairs.length} parejas registradas</p>\n                        <p>\n                          Se crearán {(pairs.length * (pairs.length - 1)) / 2}{\" \"}\n                          partidos (round-robin completo - todas las parejas se\n                          enfrentan)\n                        </p>\n                        <p>\n                          Estado del torneo:{\" \"}\n                          {selectedTournament.is_started\n                            ? \"Iniciado\"\n                            : \"Pendiente\"}\n                        </p>\n                      </div>\n                      <button\n                        className=\"start-button\"\n                        onClick={startTournament}\n                        disabled={loading || pairs.length < 2}\n                      >\n                        {loading\n                          ? \"⏳ Iniciando...\"\n                          : selectedTournament.is_started\n                          ? \"🏆 Torneo Ya Iniciado\"\n                          : pairs.length < 2\n                          ? \"❌ Necesitas al menos 2 parejas\"\n                          : \"🚀 ¡Iniciar Torneo!\"}\n                      </button>\n                    </div>\n                  ) : (\n                    <div className=\"tournament-status-section\">\n                      <h3>🏆 Torneo en Progreso</h3>\n                      <div className=\"tournament-info\">\n                        <p>El torneo ya está iniciado y en progreso</p>\n                        <p>Tienes {pairs.length} parejas registradas</p>\n                        <p>Estado del torneo: Iniciado</p>\n                      </div>\n                      <button\n                        className=\"reset-button\"\n                        onClick={async () => {\n                          if (\n                            window.confirm(\n                              \"¿Estás seguro de que quieres resetear el torneo? Esto eliminará todos los partidos existentes.\"\n                            )\n                          ) {\n                            try {\n                              setLoading(true);\n                              await deleteMatchesByTournament(\n                                selectedTournament.id\n                              );\n                              await updateTournament(selectedTournament.id, {\n                                is_started: false,\n                              });\n                              setSelectedTournament((prev) =>\n                                prev ? { ...prev, is_started: false } : null\n                              );\n                              setMatches([]);\n                              await loadTournamentData();\n                              setSuccessModalData({\n                                title: \"¡Torneo Reseteado!\",\n                                message:\n                                  \"El torneo ha sido reseteado y está listo para iniciar nuevamente.\",\n                                icon: \"🔄\",\n                              });\n                              setShowSuccessModal(true);\n                            } catch (error) {\n                              setError(\n                                \"Error al resetear el torneo: \" +\n                                  (error as Error).message\n                              );\n                            } finally {\n                              setLoading(false);\n                            }\n                          }\n                        }}\n                        disabled={loading}\n                      >\n                        {loading ? \"⏳ Reseteando...\" : \"🔄 Resetear Torneo\"}\n                      </button>\n                    </div>\n                  )}\n\n                  {/* Debug info - COLAPSIBLE */}\n                  {selectedTournament && (\n                    <div className=\"debug-section\">\n                      <button\n                        className=\"debug-toggle-btn\"\n                        onClick={() => setShowDebugInfo(!showDebugInfo)}\n                      >\n                        {showDebugInfo ? \"🔽\" : \"🔼\"} Debug Info\n                      </button>\n\n                      {showDebugInfo && (\n                        <div className=\"debug-info\">\n                          <div className=\"debug-header\">\n                            <h4>🔧 Información de Debug</h4>\n                            <div className=\"debug-stats\">\n                              <span>\n                                Estado:{\" \"}\n                                {selectedTournament.is_started\n                                  ? \"✅ Iniciado\"\n                                  : \"⏳ Pendiente\"}\n                              </span>\n                              <span>Parejas: {pairs.length}</span>\n                              <span>Partidos: {matches.length}</span>\n                            </div>\n                          </div>\n\n                          <div className=\"debug-buttons\">\n                            <button\n                              onClick={async () => {\n                                console.log(\"=== PROBAR CONEXIÓN ===\");\n                                const isConnected = await testConnection();\n                                if (isConnected) {\n                                  setError(\"\");\n                                } else {\n                                  setError(\n                                    \"❌ Error de conexión a Supabase. Verifica tu configuración.\"\n                                  );\n                                }\n                              }}\n                              className=\"debug-btn connection-btn\"\n                            >\n                              🔌 Probar Conexión\n                            </button>\n\n                            <button\n                              onClick={() => {\n                                console.log(\n                                  \"=== FORZANDO RECARGA DE DATOS ===\"\n                                );\n                                loadTournamentData();\n                              }}\n                              className=\"debug-btn reload-btn\"\n                            >\n                              🔄 Recargar Datos\n                            </button>\n\n                            <button\n                              onClick={async () => {\n                                console.log(\n                                  \"=== VERIFICANDO ESTADO DEL TORNEO ===\"\n                                );\n                                try {\n                                  console.log(\n                                    \"Estado actual del torneo:\",\n                                    selectedTournament\n                                  );\n                                  console.log(\n                                    \"Parejas en estado:\",\n                                    pairs.length\n                                  );\n                                  console.log(\n                                    \"Partidos en estado:\",\n                                    matches.length\n                                  );\n\n                                  const dbPairs = await getPairs(\n                                    selectedTournament.id\n                                  );\n                                  const dbMatches = await getMatches(\n                                    selectedTournament.id\n                                  );\n\n                                  console.log(\"Parejas en BD:\", dbPairs.length);\n                                  console.log(\n                                    \"Partidos en BD:\",\n                                    dbMatches.length\n                                  );\n\n                                  alert(\n                                    `Estado del torneo:\\n\\nParejas: ${\n                                      pairs.length\n                                    } (estado) / ${\n                                      dbPairs.length\n                                    } (BD)\\nPartidos: ${\n                                      matches.length\n                                    } (estado) / ${\n                                      dbMatches.length\n                                    } (BD)\\n\\nTorneo iniciado: ${\n                                      selectedTournament.is_started\n                                        ? \"Sí\"\n                                        : \"No\"\n                                    }`\n                                  );\n                                } catch (error) {\n                                  console.error(\n                                    \"Error verificando estado:\",\n                                    error\n                                  );\n                                }\n                              }}\n                              className=\"debug-btn status-btn\"\n                            >\n                              🔍 Verificar Estado\n                            </button>\n                          </div>\n                        </div>\n                      )}\n                    </div>\n                  )}\n\n                  {/* Mostrar parejas creadas */}\n                  {pairs.length > 0 && (\n                    <div className=\"pairs-display\">\n                      <h3>👥 Parejas Registradas ({pairs.length})</h3>\n                      <div className=\"pairs-grid\">\n                        {pairs.map((pair, index) => (\n                          <div key={pair.id} className=\"pair-display-card\">\n                            <div className=\"pair-number\">#{index + 1}</div>\n                            <div className=\"pair-names\">\n                              {pair.player1?.name} y {pair.player2?.name}\n                            </div>\n                            <div className=\"pair-stats\">\n                              <span>Sets: {pair.sets_won}</span>\n                              <span>Partidos: {pair.matches_played}</span>\n                              <span>Puntos: {pair.points}</span>\n                            </div>\n                            <button\n                              onClick={() => {\n                                if (\n                                  window.confirm(\n                                    `¿Estás seguro de que quieres eliminar la pareja \"${pair.player1?.name} y ${pair.player2?.name}\"?`\n                                  )\n                                ) {\n                                  deletePair(pair.id);\n                                }\n                              }}\n                              className=\"delete-pair-btn\"\n                              title=\"Eliminar pareja\"\n                            >\n                              🗑️\n                            </button>\n                          </div>\n                        ))}\n                      </div>\n                    </div>\n                  )}\n\n                  {selectedTournament.is_started && (\n                    <div className=\"tournament-content\">\n                      {/* Lista de partidos */}\n                      <div className=\"matches-section\">\n                        <h3>🎾 Partidos ({matches.length} total)</h3>\n                        {matches.length === 0 ? (\n                          <div className=\"no-matches\">\n                            <p>📝 No hay partidos programados aún</p>\n                            <p>\n                              Inicia el torneo para generar los partidos\n                              automáticamente\n                            </p>\n                          </div>\n                        ) : (\n                          Object.entries(matchesByRound).map(\n                            ([round, roundMatches]) => (\n                              <div key={round} className=\"round-section\">\n                                <h4>\n                                  🔄 Ronda {round} ({roundMatches.length}{\" \"}\n                                  partidos)\n                                </h4>\n                                <div className=\"matches-container\">\n                                  {roundMatches.map((match) => (\n                                    <div\n                                      key={match.id}\n                                      className={`match-card ${\n                                        selectedMatchId === match.id\n                                          ? \"selected\"\n                                          : \"\"\n                                      }`}\n                                      onClick={() =>\n                                        handleMatchSelect(match.id)\n                                      }\n                                    >\n                                      <div className=\"match-header\">\n                                        <h5>\n                                          {match.pair1?.player1?.name} y{\" \"}\n                                          {match.pair1?.player2?.name} vs{\" \"}\n                                          {match.pair2?.player1?.name} y{\" \"}\n                                          {match.pair2?.player2?.name}\n                                        </h5>\n                                        <div className=\"match-info\">\n                                          <span className=\"court-badge\">\n                                            🏟️ Cancha {match.court}\n                                          </span>\n                                          <span className=\"round-badge\">\n                                            🔄 Ronda {match.round}\n                                          </span>\n                                        </div>\n                                      </div>\n                                      <div className=\"match-details\">\n                                        <p className=\"match-pairs\">\n                                          <strong>Pareja 1:</strong>{\" \"}\n                                          {match.pair1?.player1?.name} y{\" \"}\n                                          {match.pair1?.player2?.name}\n                                        </p>\n                                        <p className=\"match-pairs\">\n                                          <strong>Pareja 2:</strong>{\" \"}\n                                          {match.pair2?.player1?.name} y{\" \"}\n                                          {match.pair2?.player2?.name}\n                                        </p>\n                                      </div>\n                                      {(() => {\n                                        // Calcular el ganador en tiempo real\n                                        const matchGames = games.filter(\n                                          (g) => g.match_id === match.id\n                                        );\n                                        if (matchGames.length > 0) {\n                                          const stats =\n                                            MatchResultCalculator.calculateMatchStatistics(\n                                              match,\n                                              matchGames\n                                            );\n                                          const isTie = stats.isTie;\n\n                                          if (isTie) {\n                                            return (\n                                              <div className=\"winner\">\n                                                <span className=\"winner-icon\">\n                                                  🤝\n                                                </span>\n                                                Empate ({stats.pair1TotalPoints}\n                                                -{stats.pair2TotalPoints}{\" \"}\n                                                puntos)\n                                              </div>\n                                            );\n                                          } else {\n                                            const winnerId =\n                                              stats.pair1TotalPoints >\n                                              stats.pair2TotalPoints\n                                                ? match.pair1_id\n                                                : match.pair2_id;\n\n                                            return (\n                                              <div className=\"winner\">\n                                                <span className=\"winner-icon\">\n                                                  🏆\n                                                </span>\n                                                Ganador:{\" \"}\n                                                {winnerId === match.pair1_id\n                                                  ? `${match.pair1?.player1?.name} y ${match.pair1?.player2?.name}`\n                                                  : `${match.pair2?.player1?.name} y ${match.pair2?.player2?.name}`}\n                                              </div>\n                                            );\n                                          }\n                                        } else {\n                                          // Fallback a los datos de la base de datos\n                                          if (match.winner_id) {\n                                            return (\n                                              <div className=\"winner\">\n                                                <span className=\"winner-icon\">\n                                                  🏆\n                                                </span>\n                                                Ganador:{\" \"}\n                                                {match.winner_id ===\n                                                match.pair1_id\n                                                  ? `${match.pair1?.player1?.name} y ${match.pair1?.player2?.name}`\n                                                  : `${match.pair2?.player1?.name} y ${match.pair2?.player2?.name}`}\n                                              </div>\n                                            );\n                                          } else if (match.is_finished) {\n                                            return (\n                                              <div className=\"winner\">\n                                                <span className=\"winner-icon\">\n                                                  🤝\n                                                </span>\n                                                Empate\n                                              </div>\n                                            );\n                                          }\n                                        }\n                                        return null;\n                                      })()}\n                                      <div className=\"match-status\">\n                                        {match.is_finished ? (\n                                          <span className=\"status-finished\">\n                                            ✔ Finalizado\n                                          </span>\n                                        ) : (\n                                          <span className=\"status-pending\">\n                                            ⏳ Pendiente\n                                          </span>\n                                        )}\n                                      </div>\n                                      <div className=\"match-actions\">\n                                        <button\n                                          onClick={(e) => {\n                                            e.stopPropagation();\n                                            showMatchResultsHandler(match);\n                                          }}\n                                          className=\"view-results-btn\"\n                                        >\n                                          📊 Ver Resultados\n                                        </button>\n                                        <button\n                                          onClick={(e) => {\n                                            e.stopPropagation();\n                                            openScoreCorrector(match);\n                                          }}\n                                          className=\"correct-result-btn\"\n                                        >\n                                          ✏️ Marcador\n                                        </button>\n                                      </div>\n                                    </div>\n                                  ))}\n                                </div>\n                              </div>\n                            )\n                          )\n                        )}\n                      </div>\n\n                      {/* Tabla de clasificación */}\n                      <StandingsTable\n                        tournamentId={selectedTournament.id}\n                        forceRefresh={forceRefresh}\n                      />\n\n                      {/* Botón para mostrar ganador */}\n                      {isTournamentFinished && winner && (\n                        <div className=\"winner-button-container\">\n                          <button\n                            className=\"show-winner-button\"\n                            onClick={showWinnerScreenHandler}\n                          >\n                            🏆 ¡Ver Ganador!\n                          </button>\n                        </div>\n                      )}\n\n                      {/* Botón para volver al inicio */}\n                      <div className=\"back-home-button-container\">\n                        <button\n                          className=\"back-home-button\"\n                          onClick={handleBackToHome}\n                        >\n                          🏠 Volver al Inicio\n                        </button>\n                      </div>\n                    </div>\n                  )}\n                </div>\n              </>\n            ) : (\n              <div className=\"no-tournament-selected\">\n                <h2>🏆 Bienvenido al Gestor de Torneos</h2>\n                <p>\n                  Selecciona un torneo del panel izquierdo para comenzar a\n                  gestionar partidos y resultados.\n                </p>\n              </div>\n            )}\n          </div>\n        </div>\n\n        {/* Pantalla de ganador */}\n        {showWinnerScreen && winner && (\n          <div className=\"winner-screen\">\n            <div className=\"winner-content\">\n              <div className=\"winner-celebration\">\n                <h1 className=\"winner-title\">🏆 ¡FELICIDADES! 🏆</h1>\n                <div className=\"winner-names\">\n                  {winner.player1?.name} y {winner.player2?.name}\n                </div>\n                <div className=\"winner-subtitle\">\n                  ¡Son los campeones del torneo!\n                </div>\n                <div className=\"winner-stats\">\n                  <div className=\"stat-item\">\n                    <span className=\"stat-number\">\n                      {tournamentWinner\n                        ? tournamentWinner.totalSets\n                        : winner.sets_won}\n                    </span>\n                    <span className=\"stat-label\">Sets Ganados</span>\n                  </div>\n                  <div className=\"stat-item\">\n                    <span className=\"stat-number\">\n                      {tournamentWinner\n                        ? tournamentWinner.matchesPlayed\n                        : winner.games_won}\n                    </span>\n                    <span className=\"stat-label\">Partidos Ganados</span>\n                  </div>\n                  <div className=\"stat-item\">\n                    <span className=\"stat-number\">\n                      {tournamentWinner\n                        ? tournamentWinner.totalPoints\n                        : winner.points}\n                    </span>\n                    <span className=\"stat-label\">Puntos Totales</span>\n                  </div>\n                </div>\n                <button\n                  className=\"back-button\"\n                  onClick={hideWinnerScreenHandler}\n                >\n                  🏠 Volver al Torneo\n                </button>\n              </div>\n            </div>\n          </div>\n        )}\n\n        {/* Modal de resultados de partido */}\n        {showMatchResults && selectedMatchResults && (\n          <div className=\"match-results-modal\">\n            <div className=\"match-results-content\">\n              <div className=\"match-results-header\">\n                <h3>📊 Resultados del Partido</h3>\n                <button onClick={hideMatchResultsHandler} className=\"close-btn\">\n                  ✕\n                </button>\n              </div>\n\n              <div className=\"match-results-info\">\n                <h4>\n                  Partido {selectedMatchResults.court} - Ronda{\" \"}\n                  {selectedMatchResults.round}\n                </h4>\n                <div className=\"pairs-info\">\n                  <div className=\"pair-info\">\n                    <strong>Pareja 1:</strong>{\" \"}\n                    {selectedMatchResults.pair1?.player1?.name} y{\" \"}\n                    {selectedMatchResults.pair1?.player2?.name}\n                  </div>\n                  <div className=\"pair-info\">\n                    <strong>Pareja 2:</strong>{\" \"}\n                    {selectedMatchResults.pair2?.player1?.name} y{\" \"}\n                    {selectedMatchResults.pair2?.player2?.name}\n                  </div>\n                </div>\n              </div>\n\n              <div className=\"match-results-details\">\n                <div className=\"result-summary\">\n                  <div className=\"result-item\">\n                    <span className=\"result-label\">Juegos Ganados:</span>\n                    <span className=\"result-value\">\n                      {calculatedMatchResults?.pair1?.games_won ||\n                        selectedMatchResults.pair1?.games_won ||\n                        0}{\" \"}\n                      -{\" \"}\n                      {calculatedMatchResults?.pair2?.games_won ||\n                        selectedMatchResults.pair2?.games_won ||\n                        0}\n                    </span>\n                  </div>\n                  <div className=\"result-item\">\n                    <span className=\"result-label\">Sets Ganados:</span>\n                    <span className=\"result-value\">\n                      {calculatedMatchResults?.pair1?.sets_won ||\n                        selectedMatchResults.pair1?.sets_won ||\n                        0}{\" \"}\n                      -{\" \"}\n                      {calculatedMatchResults?.pair2?.sets_won ||\n                        selectedMatchResults.pair2?.sets_won ||\n                        0}\n                    </span>\n                  </div>\n                  <div className=\"result-item\">\n                    <span className=\"result-label\">Puntos Totales:</span>\n                    <span className=\"result-value\">\n                      {calculatedMatchResults?.pair1?.points ||\n                        selectedMatchResults.pair1?.points ||\n                        0}{\" \"}\n                      -{\" \"}\n                      {calculatedMatchResults?.pair2?.points ||\n                        selectedMatchResults.pair2?.points ||\n                        0}\n                    </span>\n                  </div>\n                </div>\n\n                <div className=\"match-winner\">\n                  {(() => {\n                    // Verificar si es empate basado en los puntos totales\n                    const pair1Points =\n                      calculatedMatchResults?.pair1?.points ||\n                      selectedMatchResults.pair1?.points ||\n                      0;\n                    const pair2Points =\n                      calculatedMatchResults?.pair2?.points ||\n                      selectedMatchResults.pair2?.points ||\n                      0;\n                    const isTie = pair1Points === pair2Points;\n\n                    if (isTie) {\n                      return (\n                        <div className=\"tie-display\">\n                          <span className=\"tie-icon\">🤝</span>\n                          <span className=\"tie-text\">\n                            Empate ({pair1Points}-{pair2Points} puntos totales)\n                          </span>\n                        </div>\n                      );\n                    } else {\n                      const winnerId =\n                        calculatedMatchResults?.winner_id ||\n                        selectedMatchResults.winner_id;\n                      if (winnerId) {\n                        return (\n                          <div className=\"winner-display\">\n                            <span className=\"winner-icon\">🏆</span>\n                            <span className=\"winner-text\">\n                              Ganador:{\" \"}\n                              {winnerId === selectedMatchResults.pair1?.id\n                                ? `${selectedMatchResults.pair1?.player1?.name} y ${selectedMatchResults.pair1?.player2?.name}`\n                                : `${selectedMatchResults.pair2?.player1?.name} y ${selectedMatchResults.pair2?.player2?.name}`}\n                            </span>\n                          </div>\n                        );\n                      } else {\n                        return (\n                          <div className=\"tie-display\">\n                            <span className=\"tie-icon\">🤝</span>\n                            <span className=\"tie-text\">Empate</span>\n                          </div>\n                        );\n                      }\n                    }\n                  })()}\n                </div>\n              </div>\n\n              <div className=\"match-results-actions\">\n                <button\n                  onClick={hideMatchResultsHandler}\n                  className=\"close-results-btn\"\n                >\n                  Cerrar\n                </button>\n              </div>\n            </div>\n          </div>\n        )}\n\n        {/* Modal de corrección de marcador */}\n        {showScoreCorrector && selectedCorrectorMatch && (\n          <MatchScoreEditor\n            match={selectedCorrectorMatch}\n            onClose={closeScoreCorrector}\n            onMatchFinish={handleScoreCorrectorUpdate}\n          />\n        )}\n\n        {/* Modal de éxito */}\n        {showSuccessModal && (\n          <SuccessModal\n            title={successModalData.title}\n            message={successModalData.message}\n            icon={successModalData.icon}\n            isOpen={showSuccessModal}\n            onClose={() => setShowSuccessModal(false)}\n          />\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}