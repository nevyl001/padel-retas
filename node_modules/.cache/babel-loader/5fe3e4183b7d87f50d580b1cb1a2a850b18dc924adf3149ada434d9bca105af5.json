{"ast":null,"code":"var _jsxFileName = \"/Users/nedev/padel-tournament-app/src/components/MatchScoreEditor.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { getGames, createGame, updateGame, deleteGame, getPairs } from \"../lib/database\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const MatchScoreEditor = ({\n  match,\n  onClose,\n  onMatchFinish\n}) => {\n  _s();\n  const [games, setGames] = useState([]);\n  const [pairs, setPairs] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(\"\");\n\n  // Cargar juegos y parejas al montar el componente\n  useEffect(() => {\n    const loadData = async () => {\n      try {\n        console.log(\"🔄 Cargando datos del editor de marcador...\");\n\n        // Cargar juegos del partido\n        const matchGames = await getGames(match.id);\n        console.log(`📊 Juegos cargados: ${matchGames.length}`);\n        setGames(matchGames);\n\n        // Cargar parejas del torneo\n        const allPairs = await getPairs(match.tournament_id);\n        console.log(`👥 Parejas cargadas: ${allPairs.length}`);\n        setPairs(allPairs);\n      } catch (err) {\n        console.error(\"❌ Error cargando datos:\", err);\n        setError(\"Error al cargar los datos\");\n      }\n    };\n    loadData();\n  }, [match.id, match.tournament_id]);\n\n  // Agregar nuevo juego\n  const addGame = async () => {\n    try {\n      setLoading(true);\n      setError(\"\");\n      console.log(`➕ Agregando juego ${games.length + 1} al partido ${match.id}`);\n      const newGame = await createGame(match.id, games.length + 1);\n      console.log(`✅ Juego creado: ${newGame.id}`);\n      setGames(prevGames => {\n        const updatedGames = [...prevGames, newGame];\n        console.log(`📊 Total de juegos después de agregar: ${updatedGames.length}`);\n        return updatedGames;\n      });\n    } catch (err) {\n      console.error(\"❌ Error agregando juego:\", err);\n      setError(\"Error al agregar juego\");\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // CORREGIR puntuación de un juego específico (NO acumula estadísticas)\n  const correctGameScore = async (gameId, pair1Games, pair2Games, isTieBreak = false) => {\n    try {\n      console.log(`🔄 CORRIGIENDO juego ${gameId}: ${pair1Games}-${pair2Games}`);\n      console.log(`📊 Juegos antes de corregir: ${games.length}`);\n\n      // SOLO actualizar el juego en la base de datos\n      await updateGame(gameId, {\n        pair1_games: pair1Games,\n        pair2_games: pair2Games,\n        is_tie_break: isTieBreak\n      });\n\n      // Actualizar estado local\n      setGames(prevGames => {\n        const updatedGames = prevGames.map(game => game.id === gameId ? {\n          ...game,\n          pair1_games: pair1Games,\n          pair2_games: pair2Games,\n          is_tie_break: isTieBreak\n        } : game);\n        console.log(`📊 Juegos después de corregir: ${updatedGames.length}`);\n        console.log(`✅ Juego ${gameId} corregido correctamente - NO se acumularon estadísticas`);\n        return updatedGames;\n      });\n\n      // CRÍTICO: NO llamar a onMatchFinish() aquí\n      // Solo se llama cuando se finaliza el partido\n      console.log(\"🚫 NO se llama onMatchFinish() al corregir juego\");\n    } catch (err) {\n      console.error(\"❌ Error corrigiendo juego:\", err);\n      setError(\"Error al corregir puntuación\");\n    }\n  };\n\n  // Eliminar juego\n  const removeGame = async gameId => {\n    try {\n      setLoading(true);\n      setError(\"\");\n      console.log(`🗑️ Eliminando juego ${gameId}`);\n      await deleteGame(gameId);\n      setGames(prevGames => {\n        const updatedGames = prevGames.filter(game => game.id !== gameId);\n        console.log(`📊 Juegos después de eliminar: ${updatedGames.length}`);\n        return updatedGames;\n      });\n\n      // CRÍTICO: NO llamar a onMatchFinish() aquí\n      console.log(\"🚫 NO se llama onMatchFinish() al eliminar juego\");\n    } catch (err) {\n      console.error(\"❌ Error eliminando juego:\", err);\n      setError(\"Error al eliminar juego\");\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Cambiar tipo de juego (normal/tie-break)\n  const toggleTieBreak = async gameId => {\n    const game = games.find(g => g.id === gameId);\n    if (game) {\n      await correctGameScore(gameId, game.pair1_games, game.pair2_games, !game.is_tie_break);\n    }\n  };\n\n  // RECALCULAR todas las estadísticas del torneo desde cero (OPTIMIZADO)\n  const recalculateAllTournamentStatistics = async () => {\n    try {\n      console.log(\"🔄 RECALCULANDO todas las estadísticas del torneo...\");\n\n      // Obtener todos los partidos del torneo\n      const {\n        getMatches\n      } = await import(\"../lib/database\");\n      const allMatches = await getMatches(match.tournament_id);\n      const finishedMatches = allMatches.filter(m => m.is_finished);\n      console.log(`📊 Partidos finalizados encontrados: ${finishedMatches.length}`);\n\n      // Crear un mapa de estadísticas para cada pareja\n      const pairStats = new Map();\n\n      // Inicializar estadísticas en cero para todas las parejas\n      for (const pair of pairs) {\n        pairStats.set(pair.id, {\n          games_won: 0,\n          sets_won: 0,\n          points: 0,\n          matches_played: 0\n        });\n      }\n\n      // Recalcular estadísticas de cada partido finalizado\n      for (const finishedMatch of finishedMatches) {\n        const matchGames = await getGames(finishedMatch.id);\n        let pair1TotalPoints = 0;\n        let pair2TotalPoints = 0;\n        let pair1GamesWon = 0;\n        let pair2GamesWon = 0;\n        let pair1SetsWon = 0;\n        let pair2SetsWon = 0;\n\n        // Calcular estadísticas del partido\n        matchGames.forEach(game => {\n          if (game.is_tie_break) {\n            // Tie-break\n            if (game.tie_break_pair1_points > game.tie_break_pair2_points) {\n              pair1GamesWon++;\n            } else if (game.tie_break_pair2_points > game.tie_break_pair1_points) {\n              pair2GamesWon++;\n            }\n            pair1TotalPoints += game.tie_break_pair1_points || 0;\n            pair2TotalPoints += game.tie_break_pair2_points || 0;\n          } else {\n            // Juego normal\n            if (game.pair1_games > game.pair2_games) {\n              pair1GamesWon++;\n            } else if (game.pair2_games > game.pair1_games) {\n              pair2GamesWon++;\n            }\n            pair1TotalPoints += game.pair1_games;\n            pair2TotalPoints += game.pair2_games;\n\n            // Sets (6 puntos = 1 set)\n            if (game.pair1_games >= 6) {\n              pair1SetsWon++;\n            }\n            if (game.pair2_games >= 6) {\n              pair2SetsWon++;\n            }\n          }\n        });\n\n        // Acumular estadísticas en el mapa\n        const pair1Stats = pairStats.get(finishedMatch.pair1_id);\n        const pair2Stats = pairStats.get(finishedMatch.pair2_id);\n        if (pair1Stats) {\n          pair1Stats.games_won += pair1GamesWon;\n          pair1Stats.sets_won += pair1SetsWon;\n          pair1Stats.points += pair1TotalPoints;\n          pair1Stats.matches_played += 1;\n        }\n        if (pair2Stats) {\n          pair2Stats.games_won += pair2GamesWon;\n          pair2Stats.sets_won += pair2SetsWon;\n          pair2Stats.points += pair2TotalPoints;\n          pair2Stats.matches_played += 1;\n        }\n        console.log(`✅ Partido ${finishedMatch.id} procesado`);\n      }\n\n      // Actualizar todas las parejas de una vez\n      const {\n        updatePair\n      } = await import(\"../lib/database\");\n      const updatePromises = Array.from(pairStats.entries()).map(([pairId, stats]) => updatePair(pairId, stats));\n      await Promise.all(updatePromises);\n      console.log(\"✅ Todas las estadísticas del torneo recalculadas correctamente\");\n    } catch (err) {\n      console.error(\"❌ Error recalculando estadísticas:\", err);\n      setError(\"Error al recalcular estadísticas\");\n    }\n  };\n\n  // FINALIZAR partido (recalcula todas las estadísticas)\n  const finishMatch = async () => {\n    try {\n      setLoading(true);\n      setError(\"\");\n      console.log(\"🏆 FINALIZANDO partido...\");\n\n      // Calcular estadísticas del partido actual\n      let pair1TotalPoints = 0;\n      let pair2TotalPoints = 0;\n      let pair1GamesWon = 0;\n      let pair2GamesWon = 0;\n      let pair1SetsWon = 0;\n      let pair2SetsWon = 0;\n      games.forEach((game, index) => {\n        console.log(`📊 Procesando juego ${index + 1}: ${game.pair1_games}-${game.pair2_games}`);\n        if (game.is_tie_break) {\n          // Tie-break\n          if (game.tie_break_pair1_points > game.tie_break_pair2_points) {\n            pair1GamesWon++;\n          } else if (game.tie_break_pair2_points > game.tie_break_pair1_points) {\n            pair2GamesWon++;\n          }\n          pair1TotalPoints += game.tie_break_pair1_points || 0;\n          pair2TotalPoints += game.tie_break_pair2_points || 0;\n        } else {\n          // Juego normal\n          if (game.pair1_games > game.pair2_games) {\n            pair1GamesWon++;\n          } else if (game.pair2_games > game.pair1_games) {\n            pair2GamesWon++;\n          }\n          pair1TotalPoints += game.pair1_games;\n          pair2TotalPoints += game.pair2_games;\n\n          // Sets (6 puntos = 1 set)\n          if (game.pair1_games >= 6) {\n            pair1SetsWon++;\n          }\n          if (game.pair2_games >= 6) {\n            pair2SetsWon++;\n          }\n        }\n      });\n      console.log(\"📊 Estadísticas finales del partido:\");\n      console.log(`📊 Pareja 1: ${pair1GamesWon} juegos, ${pair1SetsWon} sets, ${pair1TotalPoints} puntos`);\n      console.log(`📊 Pareja 2: ${pair2GamesWon} juegos, ${pair2SetsWon} sets, ${pair2TotalPoints} puntos`);\n\n      // Determinar ganador\n      let winnerId;\n      const isTie = pair1TotalPoints === pair2TotalPoints;\n      if (isTie) {\n        winnerId = undefined;\n        console.log(\"🤝 Partido terminó en EMPATE\");\n      } else if (pair1TotalPoints > pair2TotalPoints) {\n        winnerId = match.pair1_id;\n        console.log(\"🏆 Pareja 1 gana por puntos totales\");\n      } else {\n        winnerId = match.pair2_id;\n        console.log(\"🏆 Pareja 2 gana por puntos totales\");\n      }\n\n      // Marcar partido como finalizado\n      const {\n        updateMatch\n      } = await import(\"../lib/database\");\n      await updateMatch(match.id, {\n        winner_id: winnerId,\n        is_finished: true\n      });\n      console.log(\"✅ Partido finalizado correctamente\");\n\n      // RECALCULAR todas las estadísticas del torneo\n      await recalculateAllTournamentStatistics();\n\n      // Llamar onMatchFinish() para actualizar tabla\n      console.log(\"🏆 Llamando onMatchFinish() para actualizar tabla de clasificación\");\n      onMatchFinish();\n      onClose();\n    } catch (err) {\n      console.error(\"❌ Error finalizando partido:\", err);\n      setError(\"Error al finalizar partido\");\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Obtener nombres de pareja\n  const getPairNames = pairId => {\n    const pair = pairs.find(p => p.id === pairId);\n    if (pair) {\n      var _pair$player, _pair$player2;\n      return `${((_pair$player = pair.player1) === null || _pair$player === void 0 ? void 0 : _pair$player.name) || \"Jugador 1\"} y ${((_pair$player2 = pair.player2) === null || _pair$player2 === void 0 ? void 0 : _pair$player2.name) || \"Jugador 2\"}`;\n    }\n    return \"Pareja desconocida\";\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"match-score-editor-overlay\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"match-score-editor-modal\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"match-score-editor-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"match-score-editor-title\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"match-score-editor-icon\",\n            children: \"\\uD83C\\uDFBE\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 405,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Editor de Marcador\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 406,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 404,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"match-score-editor-close-btn\",\n          onClick: onClose,\n          children: \"\\u2715\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 408,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 403,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"match-score-editor-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"match-score-editor-info\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: [\"Partido \", match.court, \" - Ronda \", match.round]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 417,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"match-score-editor-pairs\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"match-score-editor-pair\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"match-score-editor-pair-label\",\n                children: \"\\uD83C\\uDFC6 Pareja 1:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 422,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"match-score-editor-pair-names\",\n                children: getPairNames(match.pair1_id)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 425,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 421,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"match-score-editor-pair\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"match-score-editor-pair-label\",\n                children: \"\\uD83C\\uDFC6 Pareja 2:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 430,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"match-score-editor-pair-names\",\n                children: getPairNames(match.pair2_id)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 433,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 429,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 420,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 416,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"match-score-editor-rules\",\n          children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n            children: \"\\uD83D\\uDCCB Reglas del Juego:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 442,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: [/*#__PURE__*/_jsxDEV(\"li\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Juegos:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 445,\n                columnNumber: 17\n              }, this), \" La pareja que haga m\\xE1s puntos gana el juego\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 444,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Sets:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 449,\n                columnNumber: 17\n              }, this), \" La pareja que llegue a 6 puntos gana 1 set\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 448,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Empates:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 453,\n                columnNumber: 17\n              }, this), \" Si ambas parejas tienen los mismos puntos, es empate\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 452,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Tie-Breaks:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 457,\n                columnNumber: 17\n              }, this), \" Se pueden activar para desempates especiales\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 456,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 443,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 441,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"match-score-editor-games-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"match-score-editor-games-header\",\n            children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n              children: [\"\\uD83C\\uDFBE Juegos (\", games.length, \")\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 466,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"match-score-editor-add-game-btn\",\n              onClick: addGame,\n              disabled: loading,\n              children: \"+ Agregar Juego\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 467,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 465,\n            columnNumber: 13\n          }, this), games.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"match-score-editor-no-games\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"No hay juegos registrados. Haz clic en \\\"Agregar Juego\\\" para comenzar.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 478,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 477,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"match-score-editor-games-list\",\n            children: games.map((game, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"match-score-editor-game-card\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"match-score-editor-game-header\",\n                children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n                  children: [\"Juego \", index + 1]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 488,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"match-score-editor-game-actions\",\n                  children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                    className: \"match-score-editor-tie-break-btn\",\n                    onClick: () => toggleTieBreak(game.id),\n                    children: game.is_tie_break ? \"🔗 Tie-Break\" : \"🔗 Normal\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 490,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    className: \"match-score-editor-remove-game-btn\",\n                    onClick: () => removeGame(game.id),\n                    children: \"\\uD83D\\uDDD1\\uFE0F Eliminar\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 496,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 489,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 487,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"match-score-editor-game-scores\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"match-score-editor-score-input\",\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    className: \"match-score-editor-pair-name-label\",\n                    children: getPairNames(match.pair1_id)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 507,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"number\",\n                    min: \"0\",\n                    value: game.pair1_games,\n                    onChange: e => correctGameScore(game.id, parseInt(e.target.value) || 0, game.pair2_games, game.is_tie_break)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 510,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 506,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"match-score-editor-score-separator\",\n                  children: \"-\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 525,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"match-score-editor-score-input\",\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    className: \"match-score-editor-pair-name-label\",\n                    children: getPairNames(match.pair2_id)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 530,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"number\",\n                    min: \"0\",\n                    value: game.pair2_games,\n                    onChange: e => correctGameScore(game.id, game.pair1_games, parseInt(e.target.value) || 0, game.is_tie_break)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 533,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 529,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 505,\n                columnNumber: 21\n              }, this)]\n            }, game.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 486,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 484,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 464,\n          columnNumber: 11\n        }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"match-score-editor-error\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"\\u274C \", error]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 557,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 556,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"match-score-editor-actions\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"match-score-editor-finish-btn\",\n            onClick: finishMatch,\n            disabled: loading || games.length === 0,\n            children: loading ? \"⏳ Finalizando...\" : \"🏆 Finalizar Partido\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 563,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"match-score-editor-cancel-btn\",\n            onClick: onClose,\n            children: \"\\u274C Cancelar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 570,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 562,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 414,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 401,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 400,\n    columnNumber: 5\n  }, this);\n};\n_s(MatchScoreEditor, \"T/WGt/pyk5KUYnDwvXF4z4NtAhc=\");\n_c = MatchScoreEditor;\nvar _c;\n$RefreshReg$(_c, \"MatchScoreEditor\");","map":{"version":3,"names":["React","useState","useEffect","getGames","createGame","updateGame","deleteGame","getPairs","jsxDEV","_jsxDEV","MatchScoreEditor","match","onClose","onMatchFinish","_s","games","setGames","pairs","setPairs","loading","setLoading","error","setError","loadData","console","log","matchGames","id","length","allPairs","tournament_id","err","addGame","newGame","prevGames","updatedGames","correctGameScore","gameId","pair1Games","pair2Games","isTieBreak","pair1_games","pair2_games","is_tie_break","map","game","removeGame","filter","toggleTieBreak","find","g","recalculateAllTournamentStatistics","getMatches","allMatches","finishedMatches","m","is_finished","pairStats","Map","pair","set","games_won","sets_won","points","matches_played","finishedMatch","pair1TotalPoints","pair2TotalPoints","pair1GamesWon","pair2GamesWon","pair1SetsWon","pair2SetsWon","forEach","tie_break_pair1_points","tie_break_pair2_points","pair1Stats","get","pair1_id","pair2Stats","pair2_id","updatePair","updatePromises","Array","from","entries","pairId","stats","Promise","all","finishMatch","index","winnerId","isTie","undefined","updateMatch","winner_id","getPairNames","p","_pair$player","_pair$player2","player1","name","player2","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","court","round","disabled","type","min","value","onChange","e","parseInt","target","_c","$RefreshReg$"],"sources":["/Users/nedev/padel-tournament-app/src/components/MatchScoreEditor.tsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Match, Game, Pair } from \"../lib/database\";\nimport {\n  getGames,\n  createGame,\n  updateGame,\n  deleteGame,\n  getPairs,\n} from \"../lib/database\";\n\ninterface MatchScoreEditorProps {\n  match: Match;\n  onClose: () => void;\n  onMatchFinish: () => void;\n}\n\nexport const MatchScoreEditor: React.FC<MatchScoreEditorProps> = ({\n  match,\n  onClose,\n  onMatchFinish,\n}) => {\n  const [games, setGames] = useState<Game[]>([]);\n  const [pairs, setPairs] = useState<Pair[]>([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState<string>(\"\");\n\n  // Cargar juegos y parejas al montar el componente\n  useEffect(() => {\n    const loadData = async () => {\n      try {\n        console.log(\"🔄 Cargando datos del editor de marcador...\");\n\n        // Cargar juegos del partido\n        const matchGames = await getGames(match.id);\n        console.log(`📊 Juegos cargados: ${matchGames.length}`);\n        setGames(matchGames);\n\n        // Cargar parejas del torneo\n        const allPairs = await getPairs(match.tournament_id);\n        console.log(`👥 Parejas cargadas: ${allPairs.length}`);\n        setPairs(allPairs);\n      } catch (err) {\n        console.error(\"❌ Error cargando datos:\", err);\n        setError(\"Error al cargar los datos\");\n      }\n    };\n\n    loadData();\n  }, [match.id, match.tournament_id]);\n\n  // Agregar nuevo juego\n  const addGame = async () => {\n    try {\n      setLoading(true);\n      setError(\"\");\n\n      console.log(\n        `➕ Agregando juego ${games.length + 1} al partido ${match.id}`\n      );\n\n      const newGame = await createGame(match.id, games.length + 1);\n      console.log(`✅ Juego creado: ${newGame.id}`);\n\n      setGames((prevGames) => {\n        const updatedGames = [...prevGames, newGame];\n        console.log(\n          `📊 Total de juegos después de agregar: ${updatedGames.length}`\n        );\n        return updatedGames;\n      });\n    } catch (err) {\n      console.error(\"❌ Error agregando juego:\", err);\n      setError(\"Error al agregar juego\");\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // CORREGIR puntuación de un juego específico (NO acumula estadísticas)\n  const correctGameScore = async (\n    gameId: string,\n    pair1Games: number,\n    pair2Games: number,\n    isTieBreak: boolean = false\n  ) => {\n    try {\n      console.log(\n        `🔄 CORRIGIENDO juego ${gameId}: ${pair1Games}-${pair2Games}`\n      );\n      console.log(`📊 Juegos antes de corregir: ${games.length}`);\n\n      // SOLO actualizar el juego en la base de datos\n      await updateGame(gameId, {\n        pair1_games: pair1Games,\n        pair2_games: pair2Games,\n        is_tie_break: isTieBreak,\n      });\n\n      // Actualizar estado local\n      setGames((prevGames) => {\n        const updatedGames = prevGames.map((game) =>\n          game.id === gameId\n            ? {\n                ...game,\n                pair1_games: pair1Games,\n                pair2_games: pair2Games,\n                is_tie_break: isTieBreak,\n              }\n            : game\n        );\n\n        console.log(`📊 Juegos después de corregir: ${updatedGames.length}`);\n        console.log(\n          `✅ Juego ${gameId} corregido correctamente - NO se acumularon estadísticas`\n        );\n\n        return updatedGames;\n      });\n\n      // CRÍTICO: NO llamar a onMatchFinish() aquí\n      // Solo se llama cuando se finaliza el partido\n      console.log(\"🚫 NO se llama onMatchFinish() al corregir juego\");\n    } catch (err) {\n      console.error(\"❌ Error corrigiendo juego:\", err);\n      setError(\"Error al corregir puntuación\");\n    }\n  };\n\n  // Eliminar juego\n  const removeGame = async (gameId: string) => {\n    try {\n      setLoading(true);\n      setError(\"\");\n\n      console.log(`🗑️ Eliminando juego ${gameId}`);\n\n      await deleteGame(gameId);\n\n      setGames((prevGames) => {\n        const updatedGames = prevGames.filter((game) => game.id !== gameId);\n        console.log(`📊 Juegos después de eliminar: ${updatedGames.length}`);\n        return updatedGames;\n      });\n\n      // CRÍTICO: NO llamar a onMatchFinish() aquí\n      console.log(\"🚫 NO se llama onMatchFinish() al eliminar juego\");\n    } catch (err) {\n      console.error(\"❌ Error eliminando juego:\", err);\n      setError(\"Error al eliminar juego\");\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Cambiar tipo de juego (normal/tie-break)\n  const toggleTieBreak = async (gameId: string) => {\n    const game = games.find((g) => g.id === gameId);\n    if (game) {\n      await correctGameScore(\n        gameId,\n        game.pair1_games,\n        game.pair2_games,\n        !game.is_tie_break\n      );\n    }\n  };\n\n  // RECALCULAR todas las estadísticas del torneo desde cero (OPTIMIZADO)\n  const recalculateAllTournamentStatistics = async () => {\n    try {\n      console.log(\"🔄 RECALCULANDO todas las estadísticas del torneo...\");\n\n      // Obtener todos los partidos del torneo\n      const { getMatches } = await import(\"../lib/database\");\n      const allMatches = await getMatches(match.tournament_id);\n      const finishedMatches = allMatches.filter((m) => m.is_finished);\n\n      console.log(\n        `📊 Partidos finalizados encontrados: ${finishedMatches.length}`\n      );\n\n      // Crear un mapa de estadísticas para cada pareja\n      const pairStats = new Map<\n        string,\n        {\n          games_won: number;\n          sets_won: number;\n          points: number;\n          matches_played: number;\n        }\n      >();\n\n      // Inicializar estadísticas en cero para todas las parejas\n      for (const pair of pairs) {\n        pairStats.set(pair.id, {\n          games_won: 0,\n          sets_won: 0,\n          points: 0,\n          matches_played: 0,\n        });\n      }\n\n      // Recalcular estadísticas de cada partido finalizado\n      for (const finishedMatch of finishedMatches) {\n        const matchGames = await getGames(finishedMatch.id);\n\n        let pair1TotalPoints = 0;\n        let pair2TotalPoints = 0;\n        let pair1GamesWon = 0;\n        let pair2GamesWon = 0;\n        let pair1SetsWon = 0;\n        let pair2SetsWon = 0;\n\n        // Calcular estadísticas del partido\n        matchGames.forEach((game) => {\n          if (game.is_tie_break) {\n            // Tie-break\n            if (game.tie_break_pair1_points > game.tie_break_pair2_points) {\n              pair1GamesWon++;\n            } else if (\n              game.tie_break_pair2_points > game.tie_break_pair1_points\n            ) {\n              pair2GamesWon++;\n            }\n            pair1TotalPoints += game.tie_break_pair1_points || 0;\n            pair2TotalPoints += game.tie_break_pair2_points || 0;\n          } else {\n            // Juego normal\n            if (game.pair1_games > game.pair2_games) {\n              pair1GamesWon++;\n            } else if (game.pair2_games > game.pair1_games) {\n              pair2GamesWon++;\n            }\n            pair1TotalPoints += game.pair1_games;\n            pair2TotalPoints += game.pair2_games;\n\n            // Sets (6 puntos = 1 set)\n            if (game.pair1_games >= 6) {\n              pair1SetsWon++;\n            }\n            if (game.pair2_games >= 6) {\n              pair2SetsWon++;\n            }\n          }\n        });\n\n        // Acumular estadísticas en el mapa\n        const pair1Stats = pairStats.get(finishedMatch.pair1_id);\n        const pair2Stats = pairStats.get(finishedMatch.pair2_id);\n\n        if (pair1Stats) {\n          pair1Stats.games_won += pair1GamesWon;\n          pair1Stats.sets_won += pair1SetsWon;\n          pair1Stats.points += pair1TotalPoints;\n          pair1Stats.matches_played += 1;\n        }\n\n        if (pair2Stats) {\n          pair2Stats.games_won += pair2GamesWon;\n          pair2Stats.sets_won += pair2SetsWon;\n          pair2Stats.points += pair2TotalPoints;\n          pair2Stats.matches_played += 1;\n        }\n\n        console.log(`✅ Partido ${finishedMatch.id} procesado`);\n      }\n\n      // Actualizar todas las parejas de una vez\n      const { updatePair } = await import(\"../lib/database\");\n      const updatePromises = Array.from(pairStats.entries()).map(\n        ([pairId, stats]) => updatePair(pairId, stats)\n      );\n\n      await Promise.all(updatePromises);\n\n      console.log(\n        \"✅ Todas las estadísticas del torneo recalculadas correctamente\"\n      );\n    } catch (err) {\n      console.error(\"❌ Error recalculando estadísticas:\", err);\n      setError(\"Error al recalcular estadísticas\");\n    }\n  };\n\n  // FINALIZAR partido (recalcula todas las estadísticas)\n  const finishMatch = async () => {\n    try {\n      setLoading(true);\n      setError(\"\");\n\n      console.log(\"🏆 FINALIZANDO partido...\");\n\n      // Calcular estadísticas del partido actual\n      let pair1TotalPoints = 0;\n      let pair2TotalPoints = 0;\n      let pair1GamesWon = 0;\n      let pair2GamesWon = 0;\n      let pair1SetsWon = 0;\n      let pair2SetsWon = 0;\n\n      games.forEach((game, index) => {\n        console.log(\n          `📊 Procesando juego ${index + 1}: ${game.pair1_games}-${\n            game.pair2_games\n          }`\n        );\n\n        if (game.is_tie_break) {\n          // Tie-break\n          if (game.tie_break_pair1_points > game.tie_break_pair2_points) {\n            pair1GamesWon++;\n          } else if (\n            game.tie_break_pair2_points > game.tie_break_pair1_points\n          ) {\n            pair2GamesWon++;\n          }\n          pair1TotalPoints += game.tie_break_pair1_points || 0;\n          pair2TotalPoints += game.tie_break_pair2_points || 0;\n        } else {\n          // Juego normal\n          if (game.pair1_games > game.pair2_games) {\n            pair1GamesWon++;\n          } else if (game.pair2_games > game.pair1_games) {\n            pair2GamesWon++;\n          }\n          pair1TotalPoints += game.pair1_games;\n          pair2TotalPoints += game.pair2_games;\n\n          // Sets (6 puntos = 1 set)\n          if (game.pair1_games >= 6) {\n            pair1SetsWon++;\n          }\n          if (game.pair2_games >= 6) {\n            pair2SetsWon++;\n          }\n        }\n      });\n\n      console.log(\"📊 Estadísticas finales del partido:\");\n      console.log(\n        `📊 Pareja 1: ${pair1GamesWon} juegos, ${pair1SetsWon} sets, ${pair1TotalPoints} puntos`\n      );\n      console.log(\n        `📊 Pareja 2: ${pair2GamesWon} juegos, ${pair2SetsWon} sets, ${pair2TotalPoints} puntos`\n      );\n\n      // Determinar ganador\n      let winnerId: string | undefined;\n      const isTie = pair1TotalPoints === pair2TotalPoints;\n\n      if (isTie) {\n        winnerId = undefined;\n        console.log(\"🤝 Partido terminó en EMPATE\");\n      } else if (pair1TotalPoints > pair2TotalPoints) {\n        winnerId = match.pair1_id;\n        console.log(\"🏆 Pareja 1 gana por puntos totales\");\n      } else {\n        winnerId = match.pair2_id;\n        console.log(\"🏆 Pareja 2 gana por puntos totales\");\n      }\n\n      // Marcar partido como finalizado\n      const { updateMatch } = await import(\"../lib/database\");\n      await updateMatch(match.id, {\n        winner_id: winnerId,\n        is_finished: true,\n      });\n\n      console.log(\"✅ Partido finalizado correctamente\");\n\n      // RECALCULAR todas las estadísticas del torneo\n      await recalculateAllTournamentStatistics();\n\n      // Llamar onMatchFinish() para actualizar tabla\n      console.log(\n        \"🏆 Llamando onMatchFinish() para actualizar tabla de clasificación\"\n      );\n      onMatchFinish();\n      onClose();\n    } catch (err) {\n      console.error(\"❌ Error finalizando partido:\", err);\n      setError(\"Error al finalizar partido\");\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Obtener nombres de pareja\n  const getPairNames = (pairId: string) => {\n    const pair = pairs.find((p) => p.id === pairId);\n    if (pair) {\n      return `${pair.player1?.name || \"Jugador 1\"} y ${\n        pair.player2?.name || \"Jugador 2\"\n      }`;\n    }\n    return \"Pareja desconocida\";\n  };\n\n  return (\n    <div className=\"match-score-editor-overlay\">\n      <div className=\"match-score-editor-modal\">\n        {/* Header */}\n        <div className=\"match-score-editor-header\">\n          <div className=\"match-score-editor-title\">\n            <span className=\"match-score-editor-icon\">🎾</span>\n            <h3>Editor de Marcador</h3>\n          </div>\n          <button className=\"match-score-editor-close-btn\" onClick={onClose}>\n            ✕\n          </button>\n        </div>\n\n        {/* Contenido */}\n        <div className=\"match-score-editor-content\">\n          {/* Información del partido */}\n          <div className=\"match-score-editor-info\">\n            <h4>\n              Partido {match.court} - Ronda {match.round}\n            </h4>\n            <div className=\"match-score-editor-pairs\">\n              <div className=\"match-score-editor-pair\">\n                <span className=\"match-score-editor-pair-label\">\n                  🏆 Pareja 1:\n                </span>\n                <span className=\"match-score-editor-pair-names\">\n                  {getPairNames(match.pair1_id)}\n                </span>\n              </div>\n              <div className=\"match-score-editor-pair\">\n                <span className=\"match-score-editor-pair-label\">\n                  🏆 Pareja 2:\n                </span>\n                <span className=\"match-score-editor-pair-names\">\n                  {getPairNames(match.pair2_id)}\n                </span>\n              </div>\n            </div>\n          </div>\n\n          {/* Reglas */}\n          <div className=\"match-score-editor-rules\">\n            <h5>📋 Reglas del Juego:</h5>\n            <ul>\n              <li>\n                <strong>Juegos:</strong> La pareja que haga más puntos gana el\n                juego\n              </li>\n              <li>\n                <strong>Sets:</strong> La pareja que llegue a 6 puntos gana 1\n                set\n              </li>\n              <li>\n                <strong>Empates:</strong> Si ambas parejas tienen los mismos\n                puntos, es empate\n              </li>\n              <li>\n                <strong>Tie-Breaks:</strong> Se pueden activar para desempates\n                especiales\n              </li>\n            </ul>\n          </div>\n\n          {/* Sección de juegos */}\n          <div className=\"match-score-editor-games-section\">\n            <div className=\"match-score-editor-games-header\">\n              <h5>🎾 Juegos ({games.length})</h5>\n              <button\n                className=\"match-score-editor-add-game-btn\"\n                onClick={addGame}\n                disabled={loading}\n              >\n                + Agregar Juego\n              </button>\n            </div>\n\n            {games.length === 0 ? (\n              <div className=\"match-score-editor-no-games\">\n                <p>\n                  No hay juegos registrados. Haz clic en \"Agregar Juego\" para\n                  comenzar.\n                </p>\n              </div>\n            ) : (\n              <div className=\"match-score-editor-games-list\">\n                {games.map((game, index) => (\n                  <div key={game.id} className=\"match-score-editor-game-card\">\n                    <div className=\"match-score-editor-game-header\">\n                      <h6>Juego {index + 1}</h6>\n                      <div className=\"match-score-editor-game-actions\">\n                        <button\n                          className=\"match-score-editor-tie-break-btn\"\n                          onClick={() => toggleTieBreak(game.id)}\n                        >\n                          {game.is_tie_break ? \"🔗 Tie-Break\" : \"🔗 Normal\"}\n                        </button>\n                        <button\n                          className=\"match-score-editor-remove-game-btn\"\n                          onClick={() => removeGame(game.id)}\n                        >\n                          🗑️ Eliminar\n                        </button>\n                      </div>\n                    </div>\n\n                    <div className=\"match-score-editor-game-scores\">\n                      <div className=\"match-score-editor-score-input\">\n                        <label className=\"match-score-editor-pair-name-label\">\n                          {getPairNames(match.pair1_id)}\n                        </label>\n                        <input\n                          type=\"number\"\n                          min=\"0\"\n                          value={game.pair1_games}\n                          onChange={(e) =>\n                            correctGameScore(\n                              game.id,\n                              parseInt(e.target.value) || 0,\n                              game.pair2_games,\n                              game.is_tie_break\n                            )\n                          }\n                        />\n                      </div>\n\n                      <div className=\"match-score-editor-score-separator\">\n                        -\n                      </div>\n\n                      <div className=\"match-score-editor-score-input\">\n                        <label className=\"match-score-editor-pair-name-label\">\n                          {getPairNames(match.pair2_id)}\n                        </label>\n                        <input\n                          type=\"number\"\n                          min=\"0\"\n                          value={game.pair2_games}\n                          onChange={(e) =>\n                            correctGameScore(\n                              game.id,\n                              game.pair1_games,\n                              parseInt(e.target.value) || 0,\n                              game.is_tie_break\n                            )\n                          }\n                        />\n                      </div>\n                    </div>\n                  </div>\n                ))}\n              </div>\n            )}\n          </div>\n\n          {/* Mensaje de error */}\n          {error && (\n            <div className=\"match-score-editor-error\">\n              <p>❌ {error}</p>\n            </div>\n          )}\n\n          {/* Botones de acción */}\n          <div className=\"match-score-editor-actions\">\n            <button\n              className=\"match-score-editor-finish-btn\"\n              onClick={finishMatch}\n              disabled={loading || games.length === 0}\n            >\n              {loading ? \"⏳ Finalizando...\" : \"🏆 Finalizar Partido\"}\n            </button>\n            <button className=\"match-score-editor-cancel-btn\" onClick={onClose}>\n              ❌ Cancelar\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}