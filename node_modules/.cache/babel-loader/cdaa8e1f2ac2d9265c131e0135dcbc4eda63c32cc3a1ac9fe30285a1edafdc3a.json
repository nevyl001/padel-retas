{"ast":null,"code":"var _jsxFileName = \"/Users/nedev/padel-tournament-app/src/components/ScoreCorrector.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { createGame, getGames, updateGame, deleteGame, updateMatch, getMatches, getPairs, updatePair } from \"../lib/database\";\nimport { FlexibleMatchFinisher } from \"./FlexibleMatchFinisher\";\n\n// Usar los tipos de la base de datos\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ScoreCorrector = ({\n  match,\n  onClose,\n  onUpdate\n}) => {\n  _s();\n  var _match$pair, _match$pair$player, _match$pair2, _match$pair2$player, _match$pair3, _match$pair3$player, _match$pair4, _match$pair4$player;\n  const [games, setGames] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(\"\");\n  const [editingGames, setEditingGames] = useState({});\n  const [editingTieBreaks, setEditingTieBreaks] = useState({});\n\n  // Cargar juegos del partido\n  useEffect(() => {\n    loadGames();\n  }, [match.id]);\n  const loadGames = async () => {\n    try {\n      setLoading(true);\n      const matchGames = await getGames(match.id);\n      setGames(matchGames);\n      console.log(\"Juegos cargados:\", matchGames);\n    } catch (error) {\n      console.error(\"Error cargando juegos:\", error);\n      setError(\"Error al cargar los juegos\");\n    } finally {\n      setLoading(false);\n    }\n  };\n  const addGame = async () => {\n    try {\n      setLoading(true);\n      const gameNumber = games.length + 1;\n      const newGame = await createGame(match.id, gameNumber);\n      setGames([...games, newGame]);\n      console.log(\"Nuevo juego creado:\", newGame);\n    } catch (error) {\n      console.error(\"Error creando juego:\", error);\n      setError(\"Error al crear el juego\");\n    } finally {\n      setLoading(false);\n    }\n  };\n  const updateGameScore = async (gameId, pair1Games, pair2Games) => {\n    try {\n      setLoading(true);\n      await updateGame(gameId, {\n        pair1_games: pair1Games,\n        pair2_games: pair2Games\n      });\n\n      // Actualizar estado local\n      setGames(prevGames => prevGames.map(game => game.id === gameId ? {\n        ...game,\n        pair1_games: pair1Games,\n        pair2_games: pair2Games\n      } : game));\n      console.log(`Marcador actualizado: ${pair1Games}-${pair2Games}`);\n    } catch (error) {\n      console.error(\"Error actualizando marcador:\", error);\n      setError(\"Error al actualizar el marcador\");\n    } finally {\n      setLoading(false);\n    }\n  };\n  const updateTieBreakScore = async (gameId, pair1Points, pair2Points) => {\n    try {\n      setLoading(true);\n      await updateGame(gameId, {\n        tie_break_pair1_points: pair1Points,\n        tie_break_pair2_points: pair2Points,\n        is_tie_break: true\n      });\n\n      // Actualizar estado local\n      setGames(prevGames => prevGames.map(game => game.id === gameId ? {\n        ...game,\n        tie_break_pair1_points: pair1Points,\n        tie_break_pair2_points: pair2Points,\n        is_tie_break: true\n      } : game));\n      console.log(`Tie-break actualizado: ${pair1Points}-${pair2Points}`);\n    } catch (error) {\n      console.error(\"Error actualizando tie-break:\", error);\n      setError(\"Error al actualizar el tie-break\");\n    } finally {\n      setLoading(false);\n    }\n  };\n  const removeGame = async gameId => {\n    try {\n      setLoading(true);\n      await deleteGame(gameId);\n      setGames(prevGames => prevGames.filter(game => game.id !== gameId));\n      console.log(\"Juego eliminado:\", gameId);\n    } catch (error) {\n      console.error(\"Error eliminando juego:\", error);\n      setError(\"Error al eliminar el juego\");\n    } finally {\n      setLoading(false);\n    }\n  };\n  const recalculateMatchWinner = async () => {\n    console.log(\"=== RECALCULANDO GANADOR DEL PARTIDO ===\");\n    try {\n      setLoading(true);\n\n      // Obtener todos los juegos del partido\n      const matchGames = await getGames(match.id);\n      console.log(\"Games for recalculation:\", matchGames.length);\n      if (matchGames.length === 0) {\n        console.log(\"No hay juegos para recalcular\");\n        return;\n      }\n\n      // Calcular estadísticas actuales\n      let pair1Games = 0;\n      let pair2Games = 0;\n      matchGames.forEach(game => {\n        if (game.is_tie_break) {\n          if (game.tie_break_pair1_points >= 10 && game.tie_break_pair1_points - game.tie_break_pair2_points >= 2) {\n            pair1Games++;\n          } else if (game.tie_break_pair2_points >= 10 && game.tie_break_pair2_points - game.tie_break_pair1_points >= 2) {\n            pair2Games++;\n          }\n        } else {\n          if (game.pair1_games > game.pair2_games) {\n            pair1Games++;\n          } else if (game.pair2_games > game.pair1_games) {\n            pair2Games++;\n          }\n        }\n      });\n\n      // Detectar empate y ganador\n      const isTie = pair1Games === pair2Games;\n      const winnerId = isTie ? undefined : pair1Games > pair2Games ? match.pair1_id : match.pair2_id;\n      console.log(\"Recalculated statistics:\");\n      console.log(\"Pair 1 games:\", pair1Games);\n      console.log(\"Pair 2 games:\", pair2Games);\n      console.log(\"Is tie:\", isTie);\n      console.log(\"Winner ID:\", winnerId);\n\n      // Actualizar el partido con el nuevo ganador\n      await updateMatch(match.id, {\n        winner_id: winnerId,\n        is_finished: true\n      });\n      console.log(\"✅ Ganador recalculado y actualizado en la base de datos\");\n    } catch (error) {\n      console.error(\"Error recalculating match winner:\", error);\n      setError(\"Error al recalcular ganador\");\n    } finally {\n      setLoading(false);\n    }\n  };\n  const recalculatePairStatistics = async () => {\n    try {\n      console.log(\"🔄 Recalculando estadísticas de parejas...\");\n\n      // Obtener todas las parejas del torneo\n      const pairs = await getPairs(match.tournament_id);\n\n      // Obtener todos los partidos del torneo\n      const allMatches = await getMatches(match.tournament_id);\n\n      // Para cada pareja, recalcular estadísticas\n      for (const pair of pairs) {\n        let setsWon = 0;\n        let gamesWon = 0;\n        let points = 0;\n        let matchesPlayed = 0;\n\n        // Buscar partidos donde participa esta pareja\n        const pairMatches = allMatches.filter(m => m.pair1_id === pair.id || m.pair2_id === pair.id);\n        for (const pairMatch of pairMatches) {\n          if (pairMatch.is_finished) {\n            matchesPlayed++;\n\n            // Obtener juegos del partido\n            const matchGames = await getGames(pairMatch.id);\n            let pairGamesWon = 0;\n            let pairGamesLost = 0;\n            for (const game of matchGames) {\n              const isPair1 = pairMatch.pair1_id === pair.id;\n              const pairScore = isPair1 ? game.pair1_games : game.pair2_games;\n              const opponentScore = isPair1 ? game.pair2_games : game.pair1_games;\n              if (pairScore > opponentScore) {\n                pairGamesWon++;\n                gamesWon++;\n              } else if (pairScore < opponentScore) {\n                pairGamesLost++;\n              }\n\n              // Sumar puntos del juego\n              points += pairScore;\n            }\n\n            // Determinar si ganó el set\n            if (pairGamesWon > pairGamesLost) {\n              setsWon++;\n            } else if (pairGamesWon === pairGamesLost && pairGamesWon > 0) {\n              // Empate en el set (solo si hay juegos jugados)\n              setsWon += 0.5;\n            }\n          }\n        }\n\n        // Actualizar estadísticas de la pareja\n        await updatePair(pair.id, {\n          sets_won: setsWon,\n          games_won: gamesWon,\n          points: points,\n          matches_played: matchesPlayed\n        });\n        console.log(`✅ Pareja ${pair.id} actualizada:`, {\n          setsWon,\n          gamesWon,\n          points,\n          matchesPlayed\n        });\n      }\n      console.log(\"✅ Estadísticas recalculadas exitosamente\");\n    } catch (error) {\n      console.error(\"❌ Error recalculando estadísticas:\", error);\n    }\n  };\n  const finishMatch = async () => {\n    try {\n      setLoading(true);\n\n      // Validar que se puede finalizar el partido\n      if (!FlexibleMatchFinisher.canFinishMatch(games)) {\n        setError(\"No se puede finalizar el partido. Verifica que todos los juegos tengan marcadores válidos.\");\n        return;\n      }\n\n      // Obtener parejas para el cálculo\n      const allPairs = await getPairs(match.tournament_id);\n\n      // Usar el nuevo FlexibleMatchFinisher\n      const result = await FlexibleMatchFinisher.finishMatch(match, games, allPairs, async () => {\n        // Recalcular estadísticas de todas las parejas\n        await recalculatePairStatistics();\n        onUpdate(); // Notificar al componente padre\n      });\n      if (result.success) {\n        console.log(\"✅ Partido finalizado exitosamente:\", result);\n        alert(result.message);\n        onClose(); // Cerrar el corrector\n      } else {\n        setError(result.message);\n      }\n    } catch (error) {\n      console.error(\"Error finalizando partido:\", error);\n      setError(\"Error al finalizar el partido\");\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleGameScoreChange = (gameId, pair, value) => {\n    setEditingGames(prev => ({\n      ...prev,\n      [gameId]: {\n        ...prev[gameId],\n        [pair]: value\n      }\n    }));\n  };\n  const handleGameScoreBlur = async gameId => {\n    const editing = editingGames[gameId];\n    if (editing) {\n      await updateGameScore(gameId, editing.pair1, editing.pair2);\n      setEditingGames(prev => {\n        const newState = {\n          ...prev\n        };\n        delete newState[gameId];\n        return newState;\n      });\n\n      // Recalcular estadísticas después de cambiar un marcador\n      await recalculatePairStatistics();\n    }\n  };\n  const handleTieBreakScoreChange = (gameId, pair, value) => {\n    setEditingTieBreaks(prev => ({\n      ...prev,\n      [gameId]: {\n        ...prev[gameId],\n        [pair]: value\n      }\n    }));\n  };\n  const handleTieBreakScoreBlur = async gameId => {\n    const editing = editingTieBreaks[gameId];\n    if (editing) {\n      await updateTieBreakScore(gameId, editing.pair1, editing.pair2);\n      setEditingTieBreaks(prev => {\n        const newState = {\n          ...prev\n        };\n        delete newState[gameId];\n        return newState;\n      });\n\n      // Recalcular estadísticas después de cambiar tie-break\n      await recalculatePairStatistics();\n    }\n  };\n  const toggleTieBreak = async gameId => {\n    try {\n      setLoading(true);\n      const game = games.find(g => g.id === gameId);\n      if (game) {\n        // Simplemente alternar el estado local por ahora\n        setGames(prevGames => prevGames.map(game => game.id === gameId ? {\n          ...game,\n          is_tie_break: !game.is_tie_break\n        } : game));\n      }\n    } catch (error) {\n      console.error(\"Error alternando tie-break:\", error);\n      setError(\"Error al alternar tie-break\");\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"score-corrector-overlay\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"score-corrector-modal\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"score-corrector-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"\\uD83D\\uDD27 Corrector de Resultados\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 435,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: onClose,\n          className: \"close-btn\",\n          children: \"\\u2715\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 436,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 434,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"score-corrector-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"match-info\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: [\"\\uD83D\\uDCCA \", (_match$pair = match.pair1) === null || _match$pair === void 0 ? void 0 : (_match$pair$player = _match$pair.player1) === null || _match$pair$player === void 0 ? void 0 : _match$pair$player.name, \" y \", (_match$pair2 = match.pair1) === null || _match$pair2 === void 0 ? void 0 : (_match$pair2$player = _match$pair2.player2) === null || _match$pair2$player === void 0 ? void 0 : _match$pair2$player.name, \" vs\", \" \", (_match$pair3 = match.pair2) === null || _match$pair3 === void 0 ? void 0 : (_match$pair3$player = _match$pair3.player1) === null || _match$pair3$player === void 0 ? void 0 : _match$pair3$player.name, \" y \", (_match$pair4 = match.pair2) === null || _match$pair4 === void 0 ? void 0 : (_match$pair4$player = _match$pair4.player2) === null || _match$pair4$player === void 0 ? void 0 : _match$pair4$player.name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 443,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"\\uD83C\\uDFDF\\uFE0F Cancha \", match.court, \" - Ronda \", match.round]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 447,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 442,\n          columnNumber: 11\n        }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"error-message\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 452,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"games-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"games-header\",\n            children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n              children: \"\\uD83C\\uDFBE Juegos\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 456,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: addGame,\n              disabled: loading,\n              className: \"add-game-btn\",\n              children: \"\\u2795 Agregar Juego\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 457,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 455,\n            columnNumber: 13\n          }, this), games.map(game => {\n            var _editingGames$game$id, _editingGames$game$id2, _editingTieBreaks$gam, _editingTieBreaks$gam2;\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"game-card\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"game-header\",\n                children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n                  children: [\"Juego \", game.game_number]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 469,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"game-actions\",\n                  children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                    onClick: () => toggleTieBreak(game.id),\n                    disabled: loading,\n                    className: \"tie-break-btn\",\n                    children: [game.is_tie_break ? \"🔗\" : \"🔓\", \" Tie-Break\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 471,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    onClick: () => removeGame(game.id),\n                    disabled: loading,\n                    className: \"remove-game-btn\",\n                    children: \"\\uD83D\\uDDD1\\uFE0F Eliminar\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 478,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 470,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 468,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"game-scores\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"score-input\",\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    children: \"Pareja 1:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 490,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"number\",\n                    min: \"0\",\n                    max: \"20\",\n                    value: ((_editingGames$game$id = editingGames[game.id]) === null || _editingGames$game$id === void 0 ? void 0 : _editingGames$game$id.pair1) !== undefined ? editingGames[game.id].pair1 : game.pair1_games,\n                    onChange: e => handleGameScoreChange(game.id, \"pair1\", parseInt(e.target.value) || 0),\n                    onBlur: () => handleGameScoreBlur(game.id),\n                    placeholder: \"0\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 491,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 489,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"score-input\",\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    children: \"Pareja 2:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 513,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"number\",\n                    min: \"0\",\n                    max: \"20\",\n                    value: ((_editingGames$game$id2 = editingGames[game.id]) === null || _editingGames$game$id2 === void 0 ? void 0 : _editingGames$game$id2.pair2) !== undefined ? editingGames[game.id].pair2 : game.pair2_games,\n                    onChange: e => handleGameScoreChange(game.id, \"pair2\", parseInt(e.target.value) || 0),\n                    onBlur: () => handleGameScoreBlur(game.id),\n                    placeholder: \"0\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 514,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 512,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 488,\n                columnNumber: 17\n              }, this), game.is_tie_break && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"tie-break-scores\",\n                children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n                  children: \"\\uD83D\\uDD17 Tie-Break\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 538,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"score-input\",\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    children: \"Pareja 1:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 540,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"number\",\n                    min: \"0\",\n                    max: \"20\",\n                    value: ((_editingTieBreaks$gam = editingTieBreaks[game.id]) === null || _editingTieBreaks$gam === void 0 ? void 0 : _editingTieBreaks$gam.pair1) !== undefined ? editingTieBreaks[game.id].pair1 : game.tie_break_pair1_points,\n                    onChange: e => handleTieBreakScoreChange(game.id, \"pair1\", parseInt(e.target.value) || 0),\n                    onBlur: () => handleTieBreakScoreBlur(game.id),\n                    placeholder: \"0\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 541,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 539,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"score-input\",\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    children: \"Pareja 2:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 563,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"number\",\n                    min: \"0\",\n                    max: \"20\",\n                    value: ((_editingTieBreaks$gam2 = editingTieBreaks[game.id]) === null || _editingTieBreaks$gam2 === void 0 ? void 0 : _editingTieBreaks$gam2.pair2) !== undefined ? editingTieBreaks[game.id].pair2 : game.tie_break_pair2_points,\n                    onChange: e => handleTieBreakScoreChange(game.id, \"pair2\", parseInt(e.target.value) || 0),\n                    onBlur: () => handleTieBreakScoreBlur(game.id),\n                    placeholder: \"0\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 564,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 562,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 537,\n                columnNumber: 19\n              }, this)]\n            }, game.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 467,\n              columnNumber: 15\n            }, this);\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 454,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"corrector-actions\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: recalculateMatchWinner,\n            disabled: loading,\n            className: \"recalculate-winner-btn\",\n            children: loading ? \"⏳ Procesando...\" : \"🔄 Recalcular Ganador\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 591,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: finishMatch,\n            disabled: loading || games.length === 0,\n            className: \"finish-match-btn\",\n            children: loading ? \"⏳ Procesando...\" : \"🏆 Finalizar Partido\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 598,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: onClose,\n            className: \"cancel-btn\",\n            children: \"\\u274C Cancelar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 605,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 590,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 441,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 433,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 432,\n    columnNumber: 5\n  }, this);\n};\n_s(ScoreCorrector, \"qdkvkv6flmXqk55AMCIcCYrwPVU=\");\n_c = ScoreCorrector;\nexport default ScoreCorrector;\nvar _c;\n$RefreshReg$(_c, \"ScoreCorrector\");","map":{"version":3,"names":["React","useState","useEffect","createGame","getGames","updateGame","deleteGame","updateMatch","getMatches","getPairs","updatePair","FlexibleMatchFinisher","jsxDEV","_jsxDEV","ScoreCorrector","match","onClose","onUpdate","_s","_match$pair","_match$pair$player","_match$pair2","_match$pair2$player","_match$pair3","_match$pair3$player","_match$pair4","_match$pair4$player","games","setGames","loading","setLoading","error","setError","editingGames","setEditingGames","editingTieBreaks","setEditingTieBreaks","loadGames","id","matchGames","console","log","addGame","gameNumber","length","newGame","updateGameScore","gameId","pair1Games","pair2Games","pair1_games","pair2_games","prevGames","map","game","updateTieBreakScore","pair1Points","pair2Points","tie_break_pair1_points","tie_break_pair2_points","is_tie_break","removeGame","filter","recalculateMatchWinner","forEach","isTie","winnerId","undefined","pair1_id","pair2_id","winner_id","is_finished","recalculatePairStatistics","pairs","tournament_id","allMatches","pair","setsWon","gamesWon","points","matchesPlayed","pairMatches","m","pairMatch","pairGamesWon","pairGamesLost","isPair1","pairScore","opponentScore","sets_won","games_won","matches_played","finishMatch","canFinishMatch","allPairs","result","success","alert","message","handleGameScoreChange","value","prev","handleGameScoreBlur","editing","pair1","pair2","newState","handleTieBreakScoreChange","handleTieBreakScoreBlur","toggleTieBreak","find","g","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","player1","name","player2","court","round","disabled","_editingGames$game$id","_editingGames$game$id2","_editingTieBreaks$gam","_editingTieBreaks$gam2","game_number","type","min","max","onChange","e","parseInt","target","onBlur","placeholder","_c","$RefreshReg$"],"sources":["/Users/nedev/padel-tournament-app/src/components/ScoreCorrector.tsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport {\n  createGame,\n  getGames,\n  updateGame,\n  deleteGame,\n  updateMatch,\n  getMatches,\n  getPairs,\n  updatePair,\n  Game as DatabaseGame,\n  Match as DatabaseMatch,\n  Pair,\n} from \"../lib/database\";\nimport { MatchResultCalculator } from \"./MatchResultCalculator\";\nimport { MatchFinisher } from \"./MatchFinisher\";\nimport { FlexibleMatchFinisher } from \"./FlexibleMatchFinisher\";\n\n// Usar los tipos de la base de datos\ntype Game = DatabaseGame;\ntype Match = DatabaseMatch;\n\ninterface ScoreCorrectorProps {\n  match: Match;\n  onClose: () => void;\n  onUpdate: () => void;\n}\n\nconst ScoreCorrector: React.FC<ScoreCorrectorProps> = ({\n  match,\n  onClose,\n  onUpdate,\n}) => {\n  const [games, setGames] = useState<Game[]>([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(\"\");\n  const [editingGames, setEditingGames] = useState<{\n    [key: string]: { pair1: number; pair2: number };\n  }>({});\n  const [editingTieBreaks, setEditingTieBreaks] = useState<{\n    [key: string]: { pair1: number; pair2: number };\n  }>({});\n\n  // Cargar juegos del partido\n  useEffect(() => {\n    loadGames();\n  }, [match.id]);\n\n  const loadGames = async () => {\n    try {\n      setLoading(true);\n      const matchGames = await getGames(match.id);\n      setGames(matchGames);\n      console.log(\"Juegos cargados:\", matchGames);\n    } catch (error) {\n      console.error(\"Error cargando juegos:\", error);\n      setError(\"Error al cargar los juegos\");\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const addGame = async () => {\n    try {\n      setLoading(true);\n      const gameNumber = games.length + 1;\n      const newGame = await createGame(match.id, gameNumber);\n      setGames([...games, newGame]);\n      console.log(\"Nuevo juego creado:\", newGame);\n    } catch (error) {\n      console.error(\"Error creando juego:\", error);\n      setError(\"Error al crear el juego\");\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const updateGameScore = async (\n    gameId: string,\n    pair1Games: number,\n    pair2Games: number\n  ) => {\n    try {\n      setLoading(true);\n      await updateGame(gameId, {\n        pair1_games: pair1Games,\n        pair2_games: pair2Games,\n      });\n\n      // Actualizar estado local\n      setGames((prevGames) =>\n        prevGames.map((game) =>\n          game.id === gameId\n            ? { ...game, pair1_games: pair1Games, pair2_games: pair2Games }\n            : game\n        )\n      );\n\n      console.log(`Marcador actualizado: ${pair1Games}-${pair2Games}`);\n    } catch (error) {\n      console.error(\"Error actualizando marcador:\", error);\n      setError(\"Error al actualizar el marcador\");\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const updateTieBreakScore = async (\n    gameId: string,\n    pair1Points: number,\n    pair2Points: number\n  ) => {\n    try {\n      setLoading(true);\n      await updateGame(gameId, {\n        tie_break_pair1_points: pair1Points,\n        tie_break_pair2_points: pair2Points,\n        is_tie_break: true,\n      });\n\n      // Actualizar estado local\n      setGames((prevGames) =>\n        prevGames.map((game) =>\n          game.id === gameId\n            ? {\n                ...game,\n                tie_break_pair1_points: pair1Points,\n                tie_break_pair2_points: pair2Points,\n                is_tie_break: true,\n              }\n            : game\n        )\n      );\n\n      console.log(`Tie-break actualizado: ${pair1Points}-${pair2Points}`);\n    } catch (error) {\n      console.error(\"Error actualizando tie-break:\", error);\n      setError(\"Error al actualizar el tie-break\");\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const removeGame = async (gameId: string) => {\n    try {\n      setLoading(true);\n      await deleteGame(gameId);\n      setGames((prevGames) => prevGames.filter((game) => game.id !== gameId));\n      console.log(\"Juego eliminado:\", gameId);\n    } catch (error) {\n      console.error(\"Error eliminando juego:\", error);\n      setError(\"Error al eliminar el juego\");\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const recalculateMatchWinner = async () => {\n    console.log(\"=== RECALCULANDO GANADOR DEL PARTIDO ===\");\n    try {\n      setLoading(true);\n\n      // Obtener todos los juegos del partido\n      const matchGames = await getGames(match.id);\n      console.log(\"Games for recalculation:\", matchGames.length);\n\n      if (matchGames.length === 0) {\n        console.log(\"No hay juegos para recalcular\");\n        return;\n      }\n\n      // Calcular estadísticas actuales\n      let pair1Games = 0;\n      let pair2Games = 0;\n\n      matchGames.forEach((game) => {\n        if (game.is_tie_break) {\n          if (\n            game.tie_break_pair1_points >= 10 &&\n            game.tie_break_pair1_points - game.tie_break_pair2_points >= 2\n          ) {\n            pair1Games++;\n          } else if (\n            game.tie_break_pair2_points >= 10 &&\n            game.tie_break_pair2_points - game.tie_break_pair1_points >= 2\n          ) {\n            pair2Games++;\n          }\n        } else {\n          if (game.pair1_games > game.pair2_games) {\n            pair1Games++;\n          } else if (game.pair2_games > game.pair1_games) {\n            pair2Games++;\n          }\n        }\n      });\n\n      // Detectar empate y ganador\n      const isTie = pair1Games === pair2Games;\n      const winnerId = isTie\n        ? undefined\n        : pair1Games > pair2Games\n        ? match.pair1_id\n        : match.pair2_id;\n\n      console.log(\"Recalculated statistics:\");\n      console.log(\"Pair 1 games:\", pair1Games);\n      console.log(\"Pair 2 games:\", pair2Games);\n      console.log(\"Is tie:\", isTie);\n      console.log(\"Winner ID:\", winnerId);\n\n      // Actualizar el partido con el nuevo ganador\n      await updateMatch(match.id, {\n        winner_id: winnerId,\n        is_finished: true,\n      });\n\n      console.log(\"✅ Ganador recalculado y actualizado en la base de datos\");\n    } catch (error) {\n      console.error(\"Error recalculating match winner:\", error);\n      setError(\"Error al recalcular ganador\");\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const recalculatePairStatistics = async () => {\n    try {\n      console.log(\"🔄 Recalculando estadísticas de parejas...\");\n\n      // Obtener todas las parejas del torneo\n      const pairs = await getPairs(match.tournament_id);\n\n      // Obtener todos los partidos del torneo\n      const allMatches = await getMatches(match.tournament_id);\n\n      // Para cada pareja, recalcular estadísticas\n      for (const pair of pairs) {\n        let setsWon = 0;\n        let gamesWon = 0;\n        let points = 0;\n        let matchesPlayed = 0;\n\n        // Buscar partidos donde participa esta pareja\n        const pairMatches = allMatches.filter(\n          (m) => m.pair1_id === pair.id || m.pair2_id === pair.id\n        );\n\n        for (const pairMatch of pairMatches) {\n          if (pairMatch.is_finished) {\n            matchesPlayed++;\n\n            // Obtener juegos del partido\n            const matchGames = await getGames(pairMatch.id);\n\n            let pairGamesWon = 0;\n            let pairGamesLost = 0;\n\n            for (const game of matchGames) {\n              const isPair1 = pairMatch.pair1_id === pair.id;\n              const pairScore = isPair1 ? game.pair1_games : game.pair2_games;\n              const opponentScore = isPair1\n                ? game.pair2_games\n                : game.pair1_games;\n\n              if (pairScore > opponentScore) {\n                pairGamesWon++;\n                gamesWon++;\n              } else if (pairScore < opponentScore) {\n                pairGamesLost++;\n              }\n\n              // Sumar puntos del juego\n              points += pairScore;\n            }\n\n            // Determinar si ganó el set\n            if (pairGamesWon > pairGamesLost) {\n              setsWon++;\n            } else if (pairGamesWon === pairGamesLost && pairGamesWon > 0) {\n              // Empate en el set (solo si hay juegos jugados)\n              setsWon += 0.5;\n            }\n          }\n        }\n\n        // Actualizar estadísticas de la pareja\n        await updatePair(pair.id, {\n          sets_won: setsWon,\n          games_won: gamesWon,\n          points: points,\n          matches_played: matchesPlayed,\n        });\n\n        console.log(`✅ Pareja ${pair.id} actualizada:`, {\n          setsWon,\n          gamesWon,\n          points,\n          matchesPlayed,\n        });\n      }\n\n      console.log(\"✅ Estadísticas recalculadas exitosamente\");\n    } catch (error) {\n      console.error(\"❌ Error recalculando estadísticas:\", error);\n    }\n  };\n\n  const finishMatch = async () => {\n    try {\n      setLoading(true);\n\n      // Validar que se puede finalizar el partido\n      if (!FlexibleMatchFinisher.canFinishMatch(games)) {\n        setError(\n          \"No se puede finalizar el partido. Verifica que todos los juegos tengan marcadores válidos.\"\n        );\n        return;\n      }\n\n      // Obtener parejas para el cálculo\n      const allPairs = await getPairs(match.tournament_id);\n\n      // Usar el nuevo FlexibleMatchFinisher\n      const result = await FlexibleMatchFinisher.finishMatch(\n        match,\n        games,\n        allPairs,\n        async () => {\n          // Recalcular estadísticas de todas las parejas\n          await recalculatePairStatistics();\n          onUpdate(); // Notificar al componente padre\n        }\n      );\n\n      if (result.success) {\n        console.log(\"✅ Partido finalizado exitosamente:\", result);\n        alert(result.message);\n        onClose(); // Cerrar el corrector\n      } else {\n        setError(result.message);\n      }\n    } catch (error) {\n      console.error(\"Error finalizando partido:\", error);\n      setError(\"Error al finalizar el partido\");\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleGameScoreChange = (\n    gameId: string,\n    pair: \"pair1\" | \"pair2\",\n    value: number\n  ) => {\n    setEditingGames((prev) => ({\n      ...prev,\n      [gameId]: {\n        ...prev[gameId],\n        [pair]: value,\n      },\n    }));\n  };\n\n  const handleGameScoreBlur = async (gameId: string) => {\n    const editing = editingGames[gameId];\n    if (editing) {\n      await updateGameScore(gameId, editing.pair1, editing.pair2);\n      setEditingGames((prev) => {\n        const newState = { ...prev };\n        delete newState[gameId];\n        return newState;\n      });\n\n      // Recalcular estadísticas después de cambiar un marcador\n      await recalculatePairStatistics();\n    }\n  };\n\n  const handleTieBreakScoreChange = (\n    gameId: string,\n    pair: \"pair1\" | \"pair2\",\n    value: number\n  ) => {\n    setEditingTieBreaks((prev) => ({\n      ...prev,\n      [gameId]: {\n        ...prev[gameId],\n        [pair]: value,\n      },\n    }));\n  };\n\n  const handleTieBreakScoreBlur = async (gameId: string) => {\n    const editing = editingTieBreaks[gameId];\n    if (editing) {\n      await updateTieBreakScore(gameId, editing.pair1, editing.pair2);\n      setEditingTieBreaks((prev) => {\n        const newState = { ...prev };\n        delete newState[gameId];\n        return newState;\n      });\n\n      // Recalcular estadísticas después de cambiar tie-break\n      await recalculatePairStatistics();\n    }\n  };\n\n  const toggleTieBreak = async (gameId: string) => {\n    try {\n      setLoading(true);\n      const game = games.find((g) => g.id === gameId);\n      if (game) {\n        // Simplemente alternar el estado local por ahora\n        setGames((prevGames) =>\n          prevGames.map((game) =>\n            game.id === gameId\n              ? { ...game, is_tie_break: !game.is_tie_break }\n              : game\n          )\n        );\n      }\n    } catch (error) {\n      console.error(\"Error alternando tie-break:\", error);\n      setError(\"Error al alternar tie-break\");\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <div className=\"score-corrector-overlay\">\n      <div className=\"score-corrector-modal\">\n        <div className=\"score-corrector-header\">\n          <h3>🔧 Corrector de Resultados</h3>\n          <button onClick={onClose} className=\"close-btn\">\n            ✕\n          </button>\n        </div>\n\n        <div className=\"score-corrector-content\">\n          <div className=\"match-info\">\n            <h4>\n              📊 {match.pair1?.player1?.name} y {match.pair1?.player2?.name} vs{\" \"}\n              {match.pair2?.player1?.name} y {match.pair2?.player2?.name}\n            </h4>\n            <p>\n              🏟️ Cancha {match.court} - Ronda {match.round}\n            </p>\n          </div>\n\n          {error && <div className=\"error-message\">{error}</div>}\n\n          <div className=\"games-section\">\n            <div className=\"games-header\">\n              <h5>🎾 Juegos</h5>\n              <button\n                onClick={addGame}\n                disabled={loading}\n                className=\"add-game-btn\"\n              >\n                ➕ Agregar Juego\n              </button>\n            </div>\n\n            {games.map((game) => (\n              <div key={game.id} className=\"game-card\">\n                <div className=\"game-header\">\n                  <h6>Juego {game.game_number}</h6>\n                  <div className=\"game-actions\">\n                    <button\n                      onClick={() => toggleTieBreak(game.id)}\n                      disabled={loading}\n                      className=\"tie-break-btn\"\n                    >\n                      {game.is_tie_break ? \"🔗\" : \"🔓\"} Tie-Break\n                    </button>\n                    <button\n                      onClick={() => removeGame(game.id)}\n                      disabled={loading}\n                      className=\"remove-game-btn\"\n                    >\n                      🗑️ Eliminar\n                    </button>\n                  </div>\n                </div>\n\n                <div className=\"game-scores\">\n                  <div className=\"score-input\">\n                    <label>Pareja 1:</label>\n                    <input\n                      type=\"number\"\n                      min=\"0\"\n                      max=\"20\"\n                      value={\n                        editingGames[game.id]?.pair1 !== undefined\n                          ? editingGames[game.id].pair1\n                          : game.pair1_games\n                      }\n                      onChange={(e) =>\n                        handleGameScoreChange(\n                          game.id,\n                          \"pair1\",\n                          parseInt(e.target.value) || 0\n                        )\n                      }\n                      onBlur={() => handleGameScoreBlur(game.id)}\n                      placeholder=\"0\"\n                    />\n                  </div>\n\n                  <div className=\"score-input\">\n                    <label>Pareja 2:</label>\n                    <input\n                      type=\"number\"\n                      min=\"0\"\n                      max=\"20\"\n                      value={\n                        editingGames[game.id]?.pair2 !== undefined\n                          ? editingGames[game.id].pair2\n                          : game.pair2_games\n                      }\n                      onChange={(e) =>\n                        handleGameScoreChange(\n                          game.id,\n                          \"pair2\",\n                          parseInt(e.target.value) || 0\n                        )\n                      }\n                      onBlur={() => handleGameScoreBlur(game.id)}\n                      placeholder=\"0\"\n                    />\n                  </div>\n                </div>\n\n                {game.is_tie_break && (\n                  <div className=\"tie-break-scores\">\n                    <h6>🔗 Tie-Break</h6>\n                    <div className=\"score-input\">\n                      <label>Pareja 1:</label>\n                      <input\n                        type=\"number\"\n                        min=\"0\"\n                        max=\"20\"\n                        value={\n                          editingTieBreaks[game.id]?.pair1 !== undefined\n                            ? editingTieBreaks[game.id].pair1\n                            : game.tie_break_pair1_points\n                        }\n                        onChange={(e) =>\n                          handleTieBreakScoreChange(\n                            game.id,\n                            \"pair1\",\n                            parseInt(e.target.value) || 0\n                          )\n                        }\n                        onBlur={() => handleTieBreakScoreBlur(game.id)}\n                        placeholder=\"0\"\n                      />\n                    </div>\n\n                    <div className=\"score-input\">\n                      <label>Pareja 2:</label>\n                      <input\n                        type=\"number\"\n                        min=\"0\"\n                        max=\"20\"\n                        value={\n                          editingTieBreaks[game.id]?.pair2 !== undefined\n                            ? editingTieBreaks[game.id].pair2\n                            : game.tie_break_pair2_points\n                        }\n                        onChange={(e) =>\n                          handleTieBreakScoreChange(\n                            game.id,\n                            \"pair2\",\n                            parseInt(e.target.value) || 0\n                          )\n                        }\n                        onBlur={() => handleTieBreakScoreBlur(game.id)}\n                        placeholder=\"0\"\n                      />\n                    </div>\n                  </div>\n                )}\n              </div>\n            ))}\n          </div>\n\n          <div className=\"corrector-actions\">\n            <button\n              onClick={recalculateMatchWinner}\n              disabled={loading}\n              className=\"recalculate-winner-btn\"\n            >\n              {loading ? \"⏳ Procesando...\" : \"🔄 Recalcular Ganador\"}\n            </button>\n            <button\n              onClick={finishMatch}\n              disabled={loading || games.length === 0}\n              className=\"finish-match-btn\"\n            >\n              {loading ? \"⏳ Procesando...\" : \"🏆 Finalizar Partido\"}\n            </button>\n            <button onClick={onClose} className=\"cancel-btn\">\n              ❌ Cancelar\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ScoreCorrector;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}