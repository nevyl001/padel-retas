{"ast":null,"code":"import React,{useState,useEffect}from\"react\";import{createGame,getGames,updateGame,deleteGame}from\"../lib/database\";import{MatchResultCalculator}from\"./MatchResultCalculator\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const ScoreCorrector=_ref=>{let{match,onClose,onUpdate}=_ref;const[games,setGames]=useState([]);const[loading,setLoading]=useState(false);const[error,setError]=useState(\"\");const[editingGames,setEditingGames]=useState({});const[editingTieBreaks,setEditingTieBreaks]=useState({});useEffect(()=>{loadGames();},[match.id]);const loadGames=async()=>{try{setLoading(true);const gamesData=await getGames(match.id);setGames(gamesData);}catch(err){setError(\"Error al cargar los juegos\");console.error(err);}finally{setLoading(false);}};const addGame=async()=>{try{setError(\"\");setLoading(true);const newGameNumber=games.length+1;const newGame=await createGame(match.id,newGameNumber);setGames([...games,newGame]);console.log(\"✅ Juego agregado:\",newGame);}catch(err){setError(\"Error al agregar el juego\");console.error(err);}finally{setLoading(false);}};const updateGameScore=async(gameId,pair1Games,pair2Games)=>{try{setError(\"\");await updateGame(gameId,{pair1_games:pair1Games,pair2_games:pair2Games});setGames(prevGames=>prevGames.map(g=>g.id===gameId?{...g,pair1_games:pair1Games,pair2_games:pair2Games}:g));}catch(err){setError(\"Error al actualizar el marcador\");console.error(err);}};const updateTieBreakScore=async(gameId,pair1Points,pair2Points)=>{try{setError(\"\");await updateGame(gameId,{tie_break_pair1_points:pair1Points,tie_break_pair2_points:pair2Points});setGames(prevGames=>prevGames.map(g=>g.id===gameId?{...g,tie_break_pair1_points:pair1Points,tie_break_pair2_points:pair2Points}:g));}catch(err){setError(\"Error al actualizar el tie break\");console.error(err);}};const removeGame=async gameId=>{try{setError(\"\");await deleteGame(gameId);setGames(games.filter(g=>g.id!==gameId));}catch(err){setError(\"Error al eliminar el juego\");console.error(err);}};const toggleTieBreak=async gameId=>{try{setError(\"\");const game=games.find(g=>g.id===gameId);if(!game)return;const newIsTieBreak=!game.is_tie_break;await updateGame(gameId,{is_tie_break:newIsTieBreak});setGames(prevGames=>prevGames.map(g=>g.id===gameId?{...g,is_tie_break:newIsTieBreak}:g));}catch(err){setError(\"Error al cambiar el tipo de juego\");console.error(err);}};const finishMatch=async()=>{try{setError(\"\");setLoading(true);// Obtener las parejas del torneo\nconst pairs=await import(\"../lib/database\").then(m=>m.getPairs(match.tournament_id));const result=await MatchResultCalculator.updateMatchStatistics(match,games,pairs);// Importar updateMatch\nconst{updateMatch}=await import(\"../lib/database\");// Actualizar el partido como finalizado\nawait updateMatch(match.id,{winner_id:result.winnerId,is_finished:true});if(result.success){alert(result.message);onUpdate();onClose();}else{setError(result.message);}}catch(err){setError(\"Error al finalizar el partido\");console.error(err);}finally{setLoading(false);}};const handleGameScoreChange=(gameId,pair,value)=>{setEditingGames(prev=>({...prev,[gameId]:{...prev[gameId],[pair]:value}}));};const handleGameScoreBlur=async gameId=>{const editingGame=editingGames[gameId];if(editingGame){await updateGameScore(gameId,editingGame.pair1,editingGame.pair2);setEditingGames(prev=>{const newState={...prev};delete newState[gameId];return newState;});}};const handleTieBreakScoreChange=(gameId,pair,value)=>{setEditingTieBreaks(prev=>({...prev,[gameId]:{...prev[gameId],[pair]:value}}));};const handleTieBreakScoreBlur=async gameId=>{const editingTieBreak=editingTieBreaks[gameId];if(editingTieBreak){await updateTieBreakScore(gameId,editingTieBreak.pair1,editingTieBreak.pair2);setEditingTieBreaks(prev=>{const newState={...prev};delete newState[gameId];return newState;});}};if(loading){return/*#__PURE__*/_jsx(\"div\",{className:\"score-corrector-overlay\",children:/*#__PURE__*/_jsx(\"div\",{className:\"score-corrector-modal\",children:/*#__PURE__*/_jsx(\"div\",{className:\"loading\",children:\"Cargando...\"})})});}return/*#__PURE__*/_jsx(\"div\",{className:\"score-corrector-overlay\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"score-corrector-modal\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"score-corrector-header\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"\\uD83C\\uDFBE Editor de Marcador\"}),/*#__PURE__*/_jsx(\"button\",{onClick:onClose,className:\"close-btn\",children:\"\\u2715\"})]}),/*#__PURE__*/_jsx(\"div\",{className:\"match-info\",children:/*#__PURE__*/_jsxs(\"h4\",{children:[\"Partido \",match.court,\" - Ronda \",match.round]})}),/*#__PURE__*/_jsxs(\"div\",{className:\"rules-section\",children:[/*#__PURE__*/_jsx(\"h5\",{children:\"\\uD83D\\uDCCB Reglas del Juego:\"}),/*#__PURE__*/_jsxs(\"ul\",{children:[/*#__PURE__*/_jsxs(\"li\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Juegos:\"}),\" La pareja que haga m\\xE1s puntos gana el juego\"]}),/*#__PURE__*/_jsxs(\"li\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Sets:\"}),\" La pareja que llegue a 6 puntos gana 1 set\"]}),/*#__PURE__*/_jsxs(\"li\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Empates:\"}),\" Si ambas parejas tienen los mismos puntos, es empate\"]}),/*#__PURE__*/_jsxs(\"li\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Tie-Breaks:\"}),\" Se pueden activar para desempates especiales\"]})]})]}),error&&/*#__PURE__*/_jsx(\"div\",{className:\"error-message\",children:error}),/*#__PURE__*/_jsxs(\"div\",{className:\"games-section\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"games-header\",children:[/*#__PURE__*/_jsx(\"h5\",{children:\"\\uD83C\\uDFBE Juegos\"}),/*#__PURE__*/_jsx(\"button\",{onClick:addGame,disabled:loading,className:\"add-game-btn\",children:\"\\u2795 Agregar Juego\"})]}),games.map(game=>{var _editingGames$game$id,_editingGames$game$id2,_editingTieBreaks$gam,_editingTieBreaks$gam2;return/*#__PURE__*/_jsxs(\"div\",{className:\"game-card\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"game-header\",children:[/*#__PURE__*/_jsxs(\"h6\",{children:[\"Juego \",game.game_number]}),/*#__PURE__*/_jsxs(\"div\",{className:\"game-actions\",children:[/*#__PURE__*/_jsxs(\"button\",{onClick:()=>toggleTieBreak(game.id),disabled:loading,className:\"tie-break-btn\",children:[game.is_tie_break?\"🔗\":\"🔓\",\" Tie-Break\"]}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>removeGame(game.id),disabled:loading,className:\"remove-game-btn\",children:\"\\uD83D\\uDDD1\\uFE0F Eliminar\"})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"game-scores\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"score-input\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Pareja 1:\"}),/*#__PURE__*/_jsx(\"input\",{type:\"number\",min:\"0\",max:\"20\",value:((_editingGames$game$id=editingGames[game.id])===null||_editingGames$game$id===void 0?void 0:_editingGames$game$id.pair1)!==undefined?editingGames[game.id].pair1:game.pair1_games,onChange:e=>handleGameScoreChange(game.id,\"pair1\",parseInt(e.target.value)||0),onBlur:()=>handleGameScoreBlur(game.id),placeholder:\"0\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"score-input\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Pareja 2:\"}),/*#__PURE__*/_jsx(\"input\",{type:\"number\",min:\"0\",max:\"20\",value:((_editingGames$game$id2=editingGames[game.id])===null||_editingGames$game$id2===void 0?void 0:_editingGames$game$id2.pair2)!==undefined?editingGames[game.id].pair2:game.pair2_games,onChange:e=>handleGameScoreChange(game.id,\"pair2\",parseInt(e.target.value)||0),onBlur:()=>handleGameScoreBlur(game.id),placeholder:\"0\"})]})]}),game.is_tie_break&&/*#__PURE__*/_jsxs(\"div\",{className:\"tie-break-scores\",children:[/*#__PURE__*/_jsx(\"h6\",{children:\"\\uD83D\\uDD17 Tie-Break\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"score-input\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Pareja 1:\"}),/*#__PURE__*/_jsx(\"input\",{type:\"number\",min:\"0\",max:\"20\",value:((_editingTieBreaks$gam=editingTieBreaks[game.id])===null||_editingTieBreaks$gam===void 0?void 0:_editingTieBreaks$gam.pair1)!==undefined?editingTieBreaks[game.id].pair1:game.tie_break_pair1_points,onChange:e=>handleTieBreakScoreChange(game.id,\"pair1\",parseInt(e.target.value)||0),onBlur:()=>handleTieBreakScoreBlur(game.id),placeholder:\"0\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"score-input\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Pareja 2:\"}),/*#__PURE__*/_jsx(\"input\",{type:\"number\",min:\"0\",max:\"20\",value:((_editingTieBreaks$gam2=editingTieBreaks[game.id])===null||_editingTieBreaks$gam2===void 0?void 0:_editingTieBreaks$gam2.pair2)!==undefined?editingTieBreaks[game.id].pair2:game.tie_break_pair2_points,onChange:e=>handleTieBreakScoreChange(game.id,\"pair2\",parseInt(e.target.value)||0),onBlur:()=>handleTieBreakScoreBlur(game.id),placeholder:\"0\"})]})]})]},game.id);})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"score-corrector-actions\",children:[/*#__PURE__*/_jsx(\"button\",{onClick:finishMatch,disabled:loading||games.length===0,className:\"finish-match-btn\",children:\"\\uD83C\\uDFC6 Finalizar Partido\"}),/*#__PURE__*/_jsx(\"button\",{onClick:onClose,className:\"cancel-btn\",children:\"\\u274C Cancelar\"})]})]})});};export default ScoreCorrector;","map":{"version":3,"names":["React","useState","useEffect","createGame","getGames","updateGame","deleteGame","MatchResultCalculator","jsx","_jsx","jsxs","_jsxs","ScoreCorrector","_ref","match","onClose","onUpdate","games","setGames","loading","setLoading","error","setError","editingGames","setEditingGames","editingTieBreaks","setEditingTieBreaks","loadGames","id","gamesData","err","console","addGame","newGameNumber","length","newGame","log","updateGameScore","gameId","pair1Games","pair2Games","pair1_games","pair2_games","prevGames","map","g","updateTieBreakScore","pair1Points","pair2Points","tie_break_pair1_points","tie_break_pair2_points","removeGame","filter","toggleTieBreak","game","find","newIsTieBreak","is_tie_break","finishMatch","pairs","then","m","getPairs","tournament_id","result","updateMatchStatistics","updateMatch","winner_id","winnerId","is_finished","success","alert","message","handleGameScoreChange","pair","value","prev","handleGameScoreBlur","editingGame","pair1","pair2","newState","handleTieBreakScoreChange","handleTieBreakScoreBlur","editingTieBreak","className","children","onClick","court","round","disabled","_editingGames$game$id","_editingGames$game$id2","_editingTieBreaks$gam","_editingTieBreaks$gam2","game_number","type","min","max","undefined","onChange","e","parseInt","target","onBlur","placeholder"],"sources":["/Users/nedev/padel-tournament-app/src/components/ScoreCorrector.tsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Game, Match } from \"../lib/database\";\nimport { createGame, getGames, updateGame, deleteGame } from \"../lib/database\";\nimport { MatchResultCalculator } from \"./MatchResultCalculator\";\n\ninterface ScoreCorrectorProps {\n  match: Match;\n  onClose: () => void;\n  onUpdate: () => void;\n}\n\nconst ScoreCorrector: React.FC<ScoreCorrectorProps> = ({\n  match,\n  onClose,\n  onUpdate,\n}) => {\n  const [games, setGames] = useState<Game[]>([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState<string>(\"\");\n  const [editingGames, setEditingGames] = useState<{\n    [key: string]: { pair1: number; pair2: number };\n  }>({});\n  const [editingTieBreaks, setEditingTieBreaks] = useState<{\n    [key: string]: { pair1: number; pair2: number };\n  }>({});\n\n  useEffect(() => {\n    loadGames();\n  }, [match.id]);\n\n  const loadGames = async () => {\n    try {\n      setLoading(true);\n      const gamesData = await getGames(match.id);\n      setGames(gamesData);\n    } catch (err) {\n      setError(\"Error al cargar los juegos\");\n      console.error(err);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const addGame = async () => {\n    try {\n      setError(\"\");\n      setLoading(true);\n\n      const newGameNumber = games.length + 1;\n      const newGame = await createGame(match.id, newGameNumber);\n\n      setGames([...games, newGame]);\n      console.log(\"✅ Juego agregado:\", newGame);\n    } catch (err) {\n      setError(\"Error al agregar el juego\");\n      console.error(err);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const updateGameScore = async (\n    gameId: string,\n    pair1Games: number,\n    pair2Games: number\n  ) => {\n    try {\n      setError(\"\");\n      await updateGame(gameId, {\n        pair1_games: pair1Games,\n        pair2_games: pair2Games,\n      });\n\n      setGames((prevGames) =>\n        prevGames.map((g) =>\n          g.id === gameId\n            ? { ...g, pair1_games: pair1Games, pair2_games: pair2Games }\n            : g\n        )\n      );\n    } catch (err) {\n      setError(\"Error al actualizar el marcador\");\n      console.error(err);\n    }\n  };\n\n  const updateTieBreakScore = async (\n    gameId: string,\n    pair1Points: number,\n    pair2Points: number\n  ) => {\n    try {\n      setError(\"\");\n      await updateGame(gameId, {\n        tie_break_pair1_points: pair1Points,\n        tie_break_pair2_points: pair2Points,\n      });\n\n      setGames((prevGames) =>\n        prevGames.map((g) =>\n          g.id === gameId\n            ? {\n                ...g,\n                tie_break_pair1_points: pair1Points,\n                tie_break_pair2_points: pair2Points,\n              }\n            : g\n        )\n      );\n    } catch (err) {\n      setError(\"Error al actualizar el tie break\");\n      console.error(err);\n    }\n  };\n\n  const removeGame = async (gameId: string) => {\n    try {\n      setError(\"\");\n      await deleteGame(gameId);\n      setGames(games.filter((g) => g.id !== gameId));\n    } catch (err) {\n      setError(\"Error al eliminar el juego\");\n      console.error(err);\n    }\n  };\n\n  const toggleTieBreak = async (gameId: string) => {\n    try {\n      setError(\"\");\n      const game = games.find((g) => g.id === gameId);\n      if (!game) return;\n\n      const newIsTieBreak = !game.is_tie_break;\n      await updateGame(gameId, { is_tie_break: newIsTieBreak });\n\n      setGames((prevGames) =>\n        prevGames.map((g) =>\n          g.id === gameId ? { ...g, is_tie_break: newIsTieBreak } : g\n        )\n      );\n    } catch (err) {\n      setError(\"Error al cambiar el tipo de juego\");\n      console.error(err);\n    }\n  };\n\n  const finishMatch = async () => {\n    try {\n      setError(\"\");\n      setLoading(true);\n\n      // Obtener las parejas del torneo\n      const pairs = await import(\"../lib/database\").then((m) =>\n        m.getPairs(match.tournament_id)\n      );\n\n      const result = await MatchResultCalculator.updateMatchStatistics(\n        match,\n        games,\n        pairs\n      );\n\n      // Importar updateMatch\n      const { updateMatch } = await import(\"../lib/database\");\n\n      // Actualizar el partido como finalizado\n      await updateMatch(match.id, {\n        winner_id: result.winnerId,\n        is_finished: true,\n      });\n\n      if (result.success) {\n        alert(result.message);\n        onUpdate();\n        onClose();\n      } else {\n        setError(result.message);\n      }\n    } catch (err) {\n      setError(\"Error al finalizar el partido\");\n      console.error(err);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleGameScoreChange = (\n    gameId: string,\n    pair: \"pair1\" | \"pair2\",\n    value: number\n  ) => {\n    setEditingGames((prev) => ({\n      ...prev,\n      [gameId]: {\n        ...prev[gameId],\n        [pair]: value,\n      },\n    }));\n  };\n\n  const handleGameScoreBlur = async (gameId: string) => {\n    const editingGame = editingGames[gameId];\n    if (editingGame) {\n      await updateGameScore(gameId, editingGame.pair1, editingGame.pair2);\n      setEditingGames((prev) => {\n        const newState = { ...prev };\n        delete newState[gameId];\n        return newState;\n      });\n    }\n  };\n\n  const handleTieBreakScoreChange = (\n    gameId: string,\n    pair: \"pair1\" | \"pair2\",\n    value: number\n  ) => {\n    setEditingTieBreaks((prev) => ({\n      ...prev,\n      [gameId]: {\n        ...prev[gameId],\n        [pair]: value,\n      },\n    }));\n  };\n\n  const handleTieBreakScoreBlur = async (gameId: string) => {\n    const editingTieBreak = editingTieBreaks[gameId];\n    if (editingTieBreak) {\n      await updateTieBreakScore(\n        gameId,\n        editingTieBreak.pair1,\n        editingTieBreak.pair2\n      );\n      setEditingTieBreaks((prev) => {\n        const newState = { ...prev };\n        delete newState[gameId];\n        return newState;\n      });\n    }\n  };\n\n  if (loading) {\n    return (\n      <div className=\"score-corrector-overlay\">\n        <div className=\"score-corrector-modal\">\n          <div className=\"loading\">Cargando...</div>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"score-corrector-overlay\">\n      <div className=\"score-corrector-modal\">\n        <div className=\"score-corrector-header\">\n          <h3>🎾 Editor de Marcador</h3>\n          <button onClick={onClose} className=\"close-btn\">\n            ✕\n          </button>\n        </div>\n\n        <div className=\"match-info\">\n          <h4>\n            Partido {match.court} - Ronda {match.round}\n          </h4>\n        </div>\n\n        <div className=\"rules-section\">\n          <h5>📋 Reglas del Juego:</h5>\n          <ul>\n            <li>\n              <strong>Juegos:</strong> La pareja que haga más puntos gana el\n              juego\n            </li>\n            <li>\n              <strong>Sets:</strong> La pareja que llegue a 6 puntos gana 1 set\n            </li>\n            <li>\n              <strong>Empates:</strong> Si ambas parejas tienen los mismos\n              puntos, es empate\n            </li>\n            <li>\n              <strong>Tie-Breaks:</strong> Se pueden activar para desempates\n              especiales\n            </li>\n          </ul>\n        </div>\n\n        {error && <div className=\"error-message\">{error}</div>}\n\n        <div className=\"games-section\">\n          <div className=\"games-header\">\n            <h5>🎾 Juegos</h5>\n            <button\n              onClick={addGame}\n              disabled={loading}\n              className=\"add-game-btn\"\n            >\n              ➕ Agregar Juego\n            </button>\n          </div>\n\n          {games.map((game) => (\n            <div key={game.id} className=\"game-card\">\n              <div className=\"game-header\">\n                <h6>Juego {game.game_number}</h6>\n                <div className=\"game-actions\">\n                  <button\n                    onClick={() => toggleTieBreak(game.id)}\n                    disabled={loading}\n                    className=\"tie-break-btn\"\n                  >\n                    {game.is_tie_break ? \"🔗\" : \"🔓\"} Tie-Break\n                  </button>\n                  <button\n                    onClick={() => removeGame(game.id)}\n                    disabled={loading}\n                    className=\"remove-game-btn\"\n                  >\n                    🗑️ Eliminar\n                  </button>\n                </div>\n              </div>\n\n              <div className=\"game-scores\">\n                <div className=\"score-input\">\n                  <label>Pareja 1:</label>\n                  <input\n                    type=\"number\"\n                    min=\"0\"\n                    max=\"20\"\n                    value={\n                      editingGames[game.id]?.pair1 !== undefined\n                        ? editingGames[game.id].pair1\n                        : game.pair1_games\n                    }\n                    onChange={(e) =>\n                      handleGameScoreChange(\n                        game.id,\n                        \"pair1\",\n                        parseInt(e.target.value) || 0\n                      )\n                    }\n                    onBlur={() => handleGameScoreBlur(game.id)}\n                    placeholder=\"0\"\n                  />\n                </div>\n\n                <div className=\"score-input\">\n                  <label>Pareja 2:</label>\n                  <input\n                    type=\"number\"\n                    min=\"0\"\n                    max=\"20\"\n                    value={\n                      editingGames[game.id]?.pair2 !== undefined\n                        ? editingGames[game.id].pair2\n                        : game.pair2_games\n                    }\n                    onChange={(e) =>\n                      handleGameScoreChange(\n                        game.id,\n                        \"pair2\",\n                        parseInt(e.target.value) || 0\n                      )\n                    }\n                    onBlur={() => handleGameScoreBlur(game.id)}\n                    placeholder=\"0\"\n                  />\n                </div>\n              </div>\n\n              {game.is_tie_break && (\n                <div className=\"tie-break-scores\">\n                  <h6>🔗 Tie-Break</h6>\n                  <div className=\"score-input\">\n                    <label>Pareja 1:</label>\n                    <input\n                      type=\"number\"\n                      min=\"0\"\n                      max=\"20\"\n                      value={\n                        editingTieBreaks[game.id]?.pair1 !== undefined\n                          ? editingTieBreaks[game.id].pair1\n                          : game.tie_break_pair1_points\n                      }\n                      onChange={(e) =>\n                        handleTieBreakScoreChange(\n                          game.id,\n                          \"pair1\",\n                          parseInt(e.target.value) || 0\n                        )\n                      }\n                      onBlur={() => handleTieBreakScoreBlur(game.id)}\n                      placeholder=\"0\"\n                    />\n                  </div>\n\n                  <div className=\"score-input\">\n                    <label>Pareja 2:</label>\n                    <input\n                      type=\"number\"\n                      min=\"0\"\n                      max=\"20\"\n                      value={\n                        editingTieBreaks[game.id]?.pair2 !== undefined\n                          ? editingTieBreaks[game.id].pair2\n                          : game.tie_break_pair2_points\n                      }\n                      onChange={(e) =>\n                        handleTieBreakScoreChange(\n                          game.id,\n                          \"pair2\",\n                          parseInt(e.target.value) || 0\n                        )\n                      }\n                      onBlur={() => handleTieBreakScoreBlur(game.id)}\n                      placeholder=\"0\"\n                    />\n                  </div>\n                </div>\n              )}\n            </div>\n          ))}\n        </div>\n\n        <div className=\"score-corrector-actions\">\n          <button\n            onClick={finishMatch}\n            disabled={loading || games.length === 0}\n            className=\"finish-match-btn\"\n          >\n            🏆 Finalizar Partido\n          </button>\n          <button onClick={onClose} className=\"cancel-btn\">\n            ❌ Cancelar\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ScoreCorrector;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}