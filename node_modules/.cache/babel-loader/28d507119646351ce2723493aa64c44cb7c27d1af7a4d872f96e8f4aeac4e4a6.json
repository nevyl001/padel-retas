{"ast":null,"code":"import React,{useState,useEffect}from\"react\";import{createGame,getGames,updateGame,deleteGame,updateMatch,getMatches,getPairs,updatePair}from\"../lib/database\";import{FlexibleMatchFinisher}from\"./FlexibleMatchFinisher\";// Usar los tipos de la base de datos\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const ScoreCorrector=_ref=>{var _match$pair,_match$pair$player,_match$pair2,_match$pair2$player,_match$pair3,_match$pair3$player,_match$pair4,_match$pair4$player;let{match,onClose,onUpdate}=_ref;const[games,setGames]=useState([]);const[loading,setLoading]=useState(false);const[error,setError]=useState(\"\");const[editingGames,setEditingGames]=useState({});const[editingTieBreaks,setEditingTieBreaks]=useState({});// Cargar juegos del partido\nuseEffect(()=>{loadGames();},[match.id]);const loadGames=async()=>{try{setLoading(true);const matchGames=await getGames(match.id);setGames(matchGames);console.log(\"Juegos cargados:\",matchGames);}catch(error){console.error(\"Error cargando juegos:\",error);setError(\"Error al cargar los juegos\");}finally{setLoading(false);}};const addGame=async()=>{try{setLoading(true);const gameNumber=games.length+1;const newGame=await createGame(match.id,gameNumber);setGames([...games,newGame]);console.log(\"Nuevo juego creado:\",newGame);}catch(error){console.error(\"Error creando juego:\",error);setError(\"Error al crear el juego\");}finally{setLoading(false);}};const updateGameScore=async(gameId,pair1Games,pair2Games)=>{try{setLoading(true);await updateGame(gameId,{pair1_games:pair1Games,pair2_games:pair2Games});// Actualizar estado local\nsetGames(prevGames=>prevGames.map(game=>game.id===gameId?{...game,pair1_games:pair1Games,pair2_games:pair2Games}:game));console.log(`Marcador actualizado: ${pair1Games}-${pair2Games}`);}catch(error){console.error(\"Error actualizando marcador:\",error);setError(\"Error al actualizar el marcador\");}finally{setLoading(false);}};const updateTieBreakScore=async(gameId,pair1Points,pair2Points)=>{try{setLoading(true);await updateGame(gameId,{tie_break_pair1_points:pair1Points,tie_break_pair2_points:pair2Points,is_tie_break:true});// Actualizar estado local\nsetGames(prevGames=>prevGames.map(game=>game.id===gameId?{...game,tie_break_pair1_points:pair1Points,tie_break_pair2_points:pair2Points,is_tie_break:true}:game));console.log(`Tie-break actualizado: ${pair1Points}-${pair2Points}`);}catch(error){console.error(\"Error actualizando tie-break:\",error);setError(\"Error al actualizar el tie-break\");}finally{setLoading(false);}};const removeGame=async gameId=>{try{setLoading(true);await deleteGame(gameId);setGames(prevGames=>prevGames.filter(game=>game.id!==gameId));console.log(\"Juego eliminado:\",gameId);}catch(error){console.error(\"Error eliminando juego:\",error);setError(\"Error al eliminar el juego\");}finally{setLoading(false);}};const recalculateMatchWinner=async()=>{console.log(\"=== RECALCULANDO GANADOR DEL PARTIDO ===\");try{setLoading(true);// Obtener todos los juegos del partido\nconst matchGames=await getGames(match.id);console.log(\"Games for recalculation:\",matchGames.length);if(matchGames.length===0){console.log(\"No hay juegos para recalcular\");return;}// Calcular estadísticas actuales\nlet pair1Games=0;let pair2Games=0;matchGames.forEach(game=>{if(game.is_tie_break){if(game.tie_break_pair1_points>=10&&game.tie_break_pair1_points-game.tie_break_pair2_points>=2){pair1Games++;}else if(game.tie_break_pair2_points>=10&&game.tie_break_pair2_points-game.tie_break_pair1_points>=2){pair2Games++;}}else{if(game.pair1_games>game.pair2_games){pair1Games++;}else if(game.pair2_games>game.pair1_games){pair2Games++;}}});// Detectar empate y ganador\nconst isTie=pair1Games===pair2Games;const winnerId=isTie?undefined:pair1Games>pair2Games?match.pair1_id:match.pair2_id;console.log(\"Recalculated statistics:\");console.log(\"Pair 1 games:\",pair1Games);console.log(\"Pair 2 games:\",pair2Games);console.log(\"Is tie:\",isTie);console.log(\"Winner ID:\",winnerId);// Actualizar el partido con el nuevo ganador\nawait updateMatch(match.id,{winner_id:winnerId,is_finished:true});console.log(\"✅ Ganador recalculado y actualizado en la base de datos\");}catch(error){console.error(\"Error recalculating match winner:\",error);setError(\"Error al recalcular ganador\");}finally{setLoading(false);}};const recalculatePairStatistics=async()=>{try{console.log(\"🔄 Recalculando estadísticas de parejas...\");// Obtener todas las parejas del torneo\nconst pairs=await getPairs(match.tournament_id);// Obtener todos los partidos del torneo\nconst allMatches=await getMatches(match.tournament_id);// Para cada pareja, recalcular estadísticas\nfor(const pair of pairs){let setsWon=0;let gamesWon=0;let points=0;let matchesPlayed=0;// Buscar partidos donde participa esta pareja\nconst pairMatches=allMatches.filter(m=>m.pair1_id===pair.id||m.pair2_id===pair.id);for(const pairMatch of pairMatches){if(pairMatch.is_finished){matchesPlayed++;// Obtener juegos del partido\nconst matchGames=await getGames(pairMatch.id);let pairGamesWon=0;let pairGamesLost=0;for(const game of matchGames){const isPair1=pairMatch.pair1_id===pair.id;const pairScore=isPair1?game.pair1_games:game.pair2_games;const opponentScore=isPair1?game.pair2_games:game.pair1_games;if(pairScore>opponentScore){pairGamesWon++;gamesWon++;}else if(pairScore<opponentScore){pairGamesLost++;}// Sumar puntos del juego\npoints+=pairScore;}// Determinar si ganó el set\nif(pairGamesWon>pairGamesLost){setsWon++;}else if(pairGamesWon===pairGamesLost&&pairGamesWon>0){// Empate en el set (solo si hay juegos jugados)\nsetsWon+=0.5;}}}// Actualizar estadísticas de la pareja\nawait updatePair(pair.id,{sets_won:setsWon,games_won:gamesWon,points:points,matches_played:matchesPlayed});console.log(`✅ Pareja ${pair.id} actualizada:`,{setsWon,gamesWon,points,matchesPlayed});}console.log(\"✅ Estadísticas recalculadas exitosamente\");}catch(error){console.error(\"❌ Error recalculando estadísticas:\",error);}};const finishMatch=async()=>{try{setLoading(true);// Validar que se puede finalizar el partido\nif(!FlexibleMatchFinisher.canFinishMatch(games)){setError(\"No se puede finalizar el partido. Verifica que todos los juegos tengan marcadores válidos.\");return;}// Obtener parejas para el cálculo\nconst allPairs=await getPairs(match.tournament_id);// Usar el nuevo FlexibleMatchFinisher\nconst result=await FlexibleMatchFinisher.finishMatch(match,games,allPairs,async()=>{// Recalcular estadísticas de todas las parejas\nawait recalculatePairStatistics();onUpdate();// Notificar al componente padre\n});if(result.success){console.log(\"✅ Partido finalizado exitosamente:\",result);alert(result.message);onClose();// Cerrar el corrector\n}else{setError(result.message);}}catch(error){console.error(\"Error finalizando partido:\",error);setError(\"Error al finalizar el partido\");}finally{setLoading(false);}};const handleGameScoreChange=(gameId,pair,value)=>{setEditingGames(prev=>({...prev,[gameId]:{...prev[gameId],[pair]:value}}));};const handleGameScoreBlur=async gameId=>{const editing=editingGames[gameId];if(editing){await updateGameScore(gameId,editing.pair1,editing.pair2);setEditingGames(prev=>{const newState={...prev};delete newState[gameId];return newState;});// Recalcular estadísticas después de cambiar un marcador\nawait recalculatePairStatistics();}};const handleTieBreakScoreChange=(gameId,pair,value)=>{setEditingTieBreaks(prev=>({...prev,[gameId]:{...prev[gameId],[pair]:value}}));};const handleTieBreakScoreBlur=async gameId=>{const editing=editingTieBreaks[gameId];if(editing){await updateTieBreakScore(gameId,editing.pair1,editing.pair2);setEditingTieBreaks(prev=>{const newState={...prev};delete newState[gameId];return newState;});// Recalcular estadísticas después de cambiar tie-break\nawait recalculatePairStatistics();}};const toggleTieBreak=async gameId=>{try{setLoading(true);const game=games.find(g=>g.id===gameId);if(game){// Simplemente alternar el estado local por ahora\nsetGames(prevGames=>prevGames.map(game=>game.id===gameId?{...game,is_tie_break:!game.is_tie_break}:game));}}catch(error){console.error(\"Error alternando tie-break:\",error);setError(\"Error al alternar tie-break\");}finally{setLoading(false);}};return/*#__PURE__*/_jsx(\"div\",{className:\"score-corrector-overlay\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"score-corrector-modal\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"score-corrector-header\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"\\uD83D\\uDD27 Corrector de Resultados\"}),/*#__PURE__*/_jsx(\"button\",{onClick:onClose,className:\"close-btn\",children:\"\\u2715\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"score-corrector-content\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"match-info\",children:[/*#__PURE__*/_jsxs(\"h4\",{children:[\"\\uD83D\\uDCCA \",(_match$pair=match.pair1)===null||_match$pair===void 0?void 0:(_match$pair$player=_match$pair.player1)===null||_match$pair$player===void 0?void 0:_match$pair$player.name,\" y \",(_match$pair2=match.pair1)===null||_match$pair2===void 0?void 0:(_match$pair2$player=_match$pair2.player2)===null||_match$pair2$player===void 0?void 0:_match$pair2$player.name,\" vs\",\" \",(_match$pair3=match.pair2)===null||_match$pair3===void 0?void 0:(_match$pair3$player=_match$pair3.player1)===null||_match$pair3$player===void 0?void 0:_match$pair3$player.name,\" y \",(_match$pair4=match.pair2)===null||_match$pair4===void 0?void 0:(_match$pair4$player=_match$pair4.player2)===null||_match$pair4$player===void 0?void 0:_match$pair4$player.name]}),/*#__PURE__*/_jsxs(\"p\",{children:[\"\\uD83C\\uDFDF\\uFE0F Cancha \",match.court,\" - Ronda \",match.round]})]}),error&&/*#__PURE__*/_jsx(\"div\",{className:\"error-message\",children:error}),/*#__PURE__*/_jsxs(\"div\",{className:\"games-section\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"games-header\",children:[/*#__PURE__*/_jsx(\"h5\",{children:\"\\uD83C\\uDFBE Juegos\"}),/*#__PURE__*/_jsx(\"button\",{onClick:addGame,disabled:loading,className:\"add-game-btn\",children:\"\\u2795 Agregar Juego\"})]}),games.map(game=>{var _editingGames$game$id,_editingGames$game$id2,_editingTieBreaks$gam,_editingTieBreaks$gam2;return/*#__PURE__*/_jsxs(\"div\",{className:\"game-card\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"game-header\",children:[/*#__PURE__*/_jsxs(\"h6\",{children:[\"Juego \",game.game_number]}),/*#__PURE__*/_jsxs(\"div\",{className:\"game-actions\",children:[/*#__PURE__*/_jsxs(\"button\",{onClick:()=>toggleTieBreak(game.id),disabled:loading,className:\"tie-break-btn\",children:[game.is_tie_break?\"🔗\":\"🔓\",\" Tie-Break\"]}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>removeGame(game.id),disabled:loading,className:\"remove-game-btn\",children:\"\\uD83D\\uDDD1\\uFE0F Eliminar\"})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"game-scores\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"score-input\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Pareja 1:\"}),/*#__PURE__*/_jsx(\"input\",{type:\"number\",min:\"0\",max:\"20\",value:((_editingGames$game$id=editingGames[game.id])===null||_editingGames$game$id===void 0?void 0:_editingGames$game$id.pair1)!==undefined?editingGames[game.id].pair1:game.pair1_games,onChange:e=>handleGameScoreChange(game.id,\"pair1\",parseInt(e.target.value)||0),onBlur:()=>handleGameScoreBlur(game.id),placeholder:\"0\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"score-input\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Pareja 2:\"}),/*#__PURE__*/_jsx(\"input\",{type:\"number\",min:\"0\",max:\"20\",value:((_editingGames$game$id2=editingGames[game.id])===null||_editingGames$game$id2===void 0?void 0:_editingGames$game$id2.pair2)!==undefined?editingGames[game.id].pair2:game.pair2_games,onChange:e=>handleGameScoreChange(game.id,\"pair2\",parseInt(e.target.value)||0),onBlur:()=>handleGameScoreBlur(game.id),placeholder:\"0\"})]})]}),game.is_tie_break&&/*#__PURE__*/_jsxs(\"div\",{className:\"tie-break-scores\",children:[/*#__PURE__*/_jsx(\"h6\",{children:\"\\uD83D\\uDD17 Tie-Break\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"score-input\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Pareja 1:\"}),/*#__PURE__*/_jsx(\"input\",{type:\"number\",min:\"0\",max:\"20\",value:((_editingTieBreaks$gam=editingTieBreaks[game.id])===null||_editingTieBreaks$gam===void 0?void 0:_editingTieBreaks$gam.pair1)!==undefined?editingTieBreaks[game.id].pair1:game.tie_break_pair1_points,onChange:e=>handleTieBreakScoreChange(game.id,\"pair1\",parseInt(e.target.value)||0),onBlur:()=>handleTieBreakScoreBlur(game.id),placeholder:\"0\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"score-input\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Pareja 2:\"}),/*#__PURE__*/_jsx(\"input\",{type:\"number\",min:\"0\",max:\"20\",value:((_editingTieBreaks$gam2=editingTieBreaks[game.id])===null||_editingTieBreaks$gam2===void 0?void 0:_editingTieBreaks$gam2.pair2)!==undefined?editingTieBreaks[game.id].pair2:game.tie_break_pair2_points,onChange:e=>handleTieBreakScoreChange(game.id,\"pair2\",parseInt(e.target.value)||0),onBlur:()=>handleTieBreakScoreBlur(game.id),placeholder:\"0\"})]})]})]},game.id);})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"corrector-actions\",children:[/*#__PURE__*/_jsx(\"button\",{onClick:recalculateMatchWinner,disabled:loading,className:\"recalculate-winner-btn\",children:loading?\"⏳ Procesando...\":\"🔄 Recalcular Ganador\"}),/*#__PURE__*/_jsx(\"button\",{onClick:finishMatch,disabled:loading||games.length===0,className:\"finish-match-btn\",children:loading?\"⏳ Procesando...\":\"🏆 Finalizar Partido\"}),/*#__PURE__*/_jsx(\"button\",{onClick:onClose,className:\"cancel-btn\",children:\"\\u274C Cancelar\"})]})]})]})});};export default ScoreCorrector;","map":{"version":3,"names":["React","useState","useEffect","createGame","getGames","updateGame","deleteGame","updateMatch","getMatches","getPairs","updatePair","FlexibleMatchFinisher","jsx","_jsx","jsxs","_jsxs","ScoreCorrector","_ref","_match$pair","_match$pair$player","_match$pair2","_match$pair2$player","_match$pair3","_match$pair3$player","_match$pair4","_match$pair4$player","match","onClose","onUpdate","games","setGames","loading","setLoading","error","setError","editingGames","setEditingGames","editingTieBreaks","setEditingTieBreaks","loadGames","id","matchGames","console","log","addGame","gameNumber","length","newGame","updateGameScore","gameId","pair1Games","pair2Games","pair1_games","pair2_games","prevGames","map","game","updateTieBreakScore","pair1Points","pair2Points","tie_break_pair1_points","tie_break_pair2_points","is_tie_break","removeGame","filter","recalculateMatchWinner","forEach","isTie","winnerId","undefined","pair1_id","pair2_id","winner_id","is_finished","recalculatePairStatistics","pairs","tournament_id","allMatches","pair","setsWon","gamesWon","points","matchesPlayed","pairMatches","m","pairMatch","pairGamesWon","pairGamesLost","isPair1","pairScore","opponentScore","sets_won","games_won","matches_played","finishMatch","canFinishMatch","allPairs","result","success","alert","message","handleGameScoreChange","value","prev","handleGameScoreBlur","editing","pair1","pair2","newState","handleTieBreakScoreChange","handleTieBreakScoreBlur","toggleTieBreak","find","g","className","children","onClick","player1","name","player2","court","round","disabled","_editingGames$game$id","_editingGames$game$id2","_editingTieBreaks$gam","_editingTieBreaks$gam2","game_number","type","min","max","onChange","e","parseInt","target","onBlur","placeholder"],"sources":["/Users/nedev/padel-tournament-app/src/components/ScoreCorrector.tsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport {\n  createGame,\n  getGames,\n  updateGame,\n  deleteGame,\n  updateMatch,\n  getMatches,\n  getPairs,\n  updatePair,\n  Game as DatabaseGame,\n  Match as DatabaseMatch,\n  Pair,\n} from \"../lib/database\";\nimport { MatchResultCalculator } from \"./MatchResultCalculator\";\nimport { MatchFinisher } from \"./MatchFinisher\";\nimport { FlexibleMatchFinisher } from \"./FlexibleMatchFinisher\";\n\n// Usar los tipos de la base de datos\ntype Game = DatabaseGame;\ntype Match = DatabaseMatch;\n\ninterface ScoreCorrectorProps {\n  match: Match;\n  onClose: () => void;\n  onUpdate: () => void;\n}\n\nconst ScoreCorrector: React.FC<ScoreCorrectorProps> = ({\n  match,\n  onClose,\n  onUpdate,\n}) => {\n  const [games, setGames] = useState<Game[]>([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(\"\");\n  const [editingGames, setEditingGames] = useState<{\n    [key: string]: { pair1: number; pair2: number };\n  }>({});\n  const [editingTieBreaks, setEditingTieBreaks] = useState<{\n    [key: string]: { pair1: number; pair2: number };\n  }>({});\n\n  // Cargar juegos del partido\n  useEffect(() => {\n    loadGames();\n  }, [match.id]);\n\n  const loadGames = async () => {\n    try {\n      setLoading(true);\n      const matchGames = await getGames(match.id);\n      setGames(matchGames);\n      console.log(\"Juegos cargados:\", matchGames);\n    } catch (error) {\n      console.error(\"Error cargando juegos:\", error);\n      setError(\"Error al cargar los juegos\");\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const addGame = async () => {\n    try {\n      setLoading(true);\n      const gameNumber = games.length + 1;\n      const newGame = await createGame(match.id, gameNumber);\n      setGames([...games, newGame]);\n      console.log(\"Nuevo juego creado:\", newGame);\n    } catch (error) {\n      console.error(\"Error creando juego:\", error);\n      setError(\"Error al crear el juego\");\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const updateGameScore = async (\n    gameId: string,\n    pair1Games: number,\n    pair2Games: number\n  ) => {\n    try {\n      setLoading(true);\n      await updateGame(gameId, {\n        pair1_games: pair1Games,\n        pair2_games: pair2Games,\n      });\n\n      // Actualizar estado local\n      setGames((prevGames) =>\n        prevGames.map((game) =>\n          game.id === gameId\n            ? { ...game, pair1_games: pair1Games, pair2_games: pair2Games }\n            : game\n        )\n      );\n\n      console.log(`Marcador actualizado: ${pair1Games}-${pair2Games}`);\n    } catch (error) {\n      console.error(\"Error actualizando marcador:\", error);\n      setError(\"Error al actualizar el marcador\");\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const updateTieBreakScore = async (\n    gameId: string,\n    pair1Points: number,\n    pair2Points: number\n  ) => {\n    try {\n      setLoading(true);\n      await updateGame(gameId, {\n        tie_break_pair1_points: pair1Points,\n        tie_break_pair2_points: pair2Points,\n        is_tie_break: true,\n      });\n\n      // Actualizar estado local\n      setGames((prevGames) =>\n        prevGames.map((game) =>\n          game.id === gameId\n            ? {\n                ...game,\n                tie_break_pair1_points: pair1Points,\n                tie_break_pair2_points: pair2Points,\n                is_tie_break: true,\n              }\n            : game\n        )\n      );\n\n      console.log(`Tie-break actualizado: ${pair1Points}-${pair2Points}`);\n    } catch (error) {\n      console.error(\"Error actualizando tie-break:\", error);\n      setError(\"Error al actualizar el tie-break\");\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const removeGame = async (gameId: string) => {\n    try {\n      setLoading(true);\n      await deleteGame(gameId);\n      setGames((prevGames) => prevGames.filter((game) => game.id !== gameId));\n      console.log(\"Juego eliminado:\", gameId);\n    } catch (error) {\n      console.error(\"Error eliminando juego:\", error);\n      setError(\"Error al eliminar el juego\");\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const recalculateMatchWinner = async () => {\n    console.log(\"=== RECALCULANDO GANADOR DEL PARTIDO ===\");\n    try {\n      setLoading(true);\n\n      // Obtener todos los juegos del partido\n      const matchGames = await getGames(match.id);\n      console.log(\"Games for recalculation:\", matchGames.length);\n\n      if (matchGames.length === 0) {\n        console.log(\"No hay juegos para recalcular\");\n        return;\n      }\n\n      // Calcular estadísticas actuales\n      let pair1Games = 0;\n      let pair2Games = 0;\n\n      matchGames.forEach((game) => {\n        if (game.is_tie_break) {\n          if (\n            game.tie_break_pair1_points >= 10 &&\n            game.tie_break_pair1_points - game.tie_break_pair2_points >= 2\n          ) {\n            pair1Games++;\n          } else if (\n            game.tie_break_pair2_points >= 10 &&\n            game.tie_break_pair2_points - game.tie_break_pair1_points >= 2\n          ) {\n            pair2Games++;\n          }\n        } else {\n          if (game.pair1_games > game.pair2_games) {\n            pair1Games++;\n          } else if (game.pair2_games > game.pair1_games) {\n            pair2Games++;\n          }\n        }\n      });\n\n      // Detectar empate y ganador\n      const isTie = pair1Games === pair2Games;\n      const winnerId = isTie\n        ? undefined\n        : pair1Games > pair2Games\n        ? match.pair1_id\n        : match.pair2_id;\n\n      console.log(\"Recalculated statistics:\");\n      console.log(\"Pair 1 games:\", pair1Games);\n      console.log(\"Pair 2 games:\", pair2Games);\n      console.log(\"Is tie:\", isTie);\n      console.log(\"Winner ID:\", winnerId);\n\n      // Actualizar el partido con el nuevo ganador\n      await updateMatch(match.id, {\n        winner_id: winnerId,\n        is_finished: true,\n      });\n\n      console.log(\"✅ Ganador recalculado y actualizado en la base de datos\");\n    } catch (error) {\n      console.error(\"Error recalculating match winner:\", error);\n      setError(\"Error al recalcular ganador\");\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const recalculatePairStatistics = async () => {\n    try {\n      console.log(\"🔄 Recalculando estadísticas de parejas...\");\n\n      // Obtener todas las parejas del torneo\n      const pairs = await getPairs(match.tournament_id);\n\n      // Obtener todos los partidos del torneo\n      const allMatches = await getMatches(match.tournament_id);\n\n      // Para cada pareja, recalcular estadísticas\n      for (const pair of pairs) {\n        let setsWon = 0;\n        let gamesWon = 0;\n        let points = 0;\n        let matchesPlayed = 0;\n\n        // Buscar partidos donde participa esta pareja\n        const pairMatches = allMatches.filter(\n          (m) => m.pair1_id === pair.id || m.pair2_id === pair.id\n        );\n\n        for (const pairMatch of pairMatches) {\n          if (pairMatch.is_finished) {\n            matchesPlayed++;\n\n            // Obtener juegos del partido\n            const matchGames = await getGames(pairMatch.id);\n\n            let pairGamesWon = 0;\n            let pairGamesLost = 0;\n\n            for (const game of matchGames) {\n              const isPair1 = pairMatch.pair1_id === pair.id;\n              const pairScore = isPair1 ? game.pair1_games : game.pair2_games;\n              const opponentScore = isPair1\n                ? game.pair2_games\n                : game.pair1_games;\n\n              if (pairScore > opponentScore) {\n                pairGamesWon++;\n                gamesWon++;\n              } else if (pairScore < opponentScore) {\n                pairGamesLost++;\n              }\n\n              // Sumar puntos del juego\n              points += pairScore;\n            }\n\n            // Determinar si ganó el set\n            if (pairGamesWon > pairGamesLost) {\n              setsWon++;\n            } else if (pairGamesWon === pairGamesLost && pairGamesWon > 0) {\n              // Empate en el set (solo si hay juegos jugados)\n              setsWon += 0.5;\n            }\n          }\n        }\n\n        // Actualizar estadísticas de la pareja\n        await updatePair(pair.id, {\n          sets_won: setsWon,\n          games_won: gamesWon,\n          points: points,\n          matches_played: matchesPlayed,\n        });\n\n        console.log(`✅ Pareja ${pair.id} actualizada:`, {\n          setsWon,\n          gamesWon,\n          points,\n          matchesPlayed,\n        });\n      }\n\n      console.log(\"✅ Estadísticas recalculadas exitosamente\");\n    } catch (error) {\n      console.error(\"❌ Error recalculando estadísticas:\", error);\n    }\n  };\n\n  const finishMatch = async () => {\n    try {\n      setLoading(true);\n\n      // Validar que se puede finalizar el partido\n      if (!FlexibleMatchFinisher.canFinishMatch(games)) {\n        setError(\n          \"No se puede finalizar el partido. Verifica que todos los juegos tengan marcadores válidos.\"\n        );\n        return;\n      }\n\n      // Obtener parejas para el cálculo\n      const allPairs = await getPairs(match.tournament_id);\n\n      // Usar el nuevo FlexibleMatchFinisher\n      const result = await FlexibleMatchFinisher.finishMatch(\n        match,\n        games,\n        allPairs,\n        async () => {\n          // Recalcular estadísticas de todas las parejas\n          await recalculatePairStatistics();\n          onUpdate(); // Notificar al componente padre\n        }\n      );\n\n      if (result.success) {\n        console.log(\"✅ Partido finalizado exitosamente:\", result);\n        alert(result.message);\n        onClose(); // Cerrar el corrector\n      } else {\n        setError(result.message);\n      }\n    } catch (error) {\n      console.error(\"Error finalizando partido:\", error);\n      setError(\"Error al finalizar el partido\");\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleGameScoreChange = (\n    gameId: string,\n    pair: \"pair1\" | \"pair2\",\n    value: number\n  ) => {\n    setEditingGames((prev) => ({\n      ...prev,\n      [gameId]: {\n        ...prev[gameId],\n        [pair]: value,\n      },\n    }));\n  };\n\n  const handleGameScoreBlur = async (gameId: string) => {\n    const editing = editingGames[gameId];\n    if (editing) {\n      await updateGameScore(gameId, editing.pair1, editing.pair2);\n      setEditingGames((prev) => {\n        const newState = { ...prev };\n        delete newState[gameId];\n        return newState;\n      });\n\n      // Recalcular estadísticas después de cambiar un marcador\n      await recalculatePairStatistics();\n    }\n  };\n\n  const handleTieBreakScoreChange = (\n    gameId: string,\n    pair: \"pair1\" | \"pair2\",\n    value: number\n  ) => {\n    setEditingTieBreaks((prev) => ({\n      ...prev,\n      [gameId]: {\n        ...prev[gameId],\n        [pair]: value,\n      },\n    }));\n  };\n\n  const handleTieBreakScoreBlur = async (gameId: string) => {\n    const editing = editingTieBreaks[gameId];\n    if (editing) {\n      await updateTieBreakScore(gameId, editing.pair1, editing.pair2);\n      setEditingTieBreaks((prev) => {\n        const newState = { ...prev };\n        delete newState[gameId];\n        return newState;\n      });\n\n      // Recalcular estadísticas después de cambiar tie-break\n      await recalculatePairStatistics();\n    }\n  };\n\n  const toggleTieBreak = async (gameId: string) => {\n    try {\n      setLoading(true);\n      const game = games.find((g) => g.id === gameId);\n      if (game) {\n        // Simplemente alternar el estado local por ahora\n        setGames((prevGames) =>\n          prevGames.map((game) =>\n            game.id === gameId\n              ? { ...game, is_tie_break: !game.is_tie_break }\n              : game\n          )\n        );\n      }\n    } catch (error) {\n      console.error(\"Error alternando tie-break:\", error);\n      setError(\"Error al alternar tie-break\");\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <div className=\"score-corrector-overlay\">\n      <div className=\"score-corrector-modal\">\n        <div className=\"score-corrector-header\">\n          <h3>🔧 Corrector de Resultados</h3>\n          <button onClick={onClose} className=\"close-btn\">\n            ✕\n          </button>\n        </div>\n\n        <div className=\"score-corrector-content\">\n          <div className=\"match-info\">\n            <h4>\n              📊 {match.pair1?.player1?.name} y {match.pair1?.player2?.name} vs{\" \"}\n              {match.pair2?.player1?.name} y {match.pair2?.player2?.name}\n            </h4>\n            <p>\n              🏟️ Cancha {match.court} - Ronda {match.round}\n            </p>\n          </div>\n\n          {error && <div className=\"error-message\">{error}</div>}\n\n          <div className=\"games-section\">\n            <div className=\"games-header\">\n              <h5>🎾 Juegos</h5>\n              <button\n                onClick={addGame}\n                disabled={loading}\n                className=\"add-game-btn\"\n              >\n                ➕ Agregar Juego\n              </button>\n            </div>\n\n            {games.map((game) => (\n              <div key={game.id} className=\"game-card\">\n                <div className=\"game-header\">\n                  <h6>Juego {game.game_number}</h6>\n                  <div className=\"game-actions\">\n                    <button\n                      onClick={() => toggleTieBreak(game.id)}\n                      disabled={loading}\n                      className=\"tie-break-btn\"\n                    >\n                      {game.is_tie_break ? \"🔗\" : \"🔓\"} Tie-Break\n                    </button>\n                    <button\n                      onClick={() => removeGame(game.id)}\n                      disabled={loading}\n                      className=\"remove-game-btn\"\n                    >\n                      🗑️ Eliminar\n                    </button>\n                  </div>\n                </div>\n\n                <div className=\"game-scores\">\n                  <div className=\"score-input\">\n                    <label>Pareja 1:</label>\n                    <input\n                      type=\"number\"\n                      min=\"0\"\n                      max=\"20\"\n                      value={\n                        editingGames[game.id]?.pair1 !== undefined\n                          ? editingGames[game.id].pair1\n                          : game.pair1_games\n                      }\n                      onChange={(e) =>\n                        handleGameScoreChange(\n                          game.id,\n                          \"pair1\",\n                          parseInt(e.target.value) || 0\n                        )\n                      }\n                      onBlur={() => handleGameScoreBlur(game.id)}\n                      placeholder=\"0\"\n                    />\n                  </div>\n\n                  <div className=\"score-input\">\n                    <label>Pareja 2:</label>\n                    <input\n                      type=\"number\"\n                      min=\"0\"\n                      max=\"20\"\n                      value={\n                        editingGames[game.id]?.pair2 !== undefined\n                          ? editingGames[game.id].pair2\n                          : game.pair2_games\n                      }\n                      onChange={(e) =>\n                        handleGameScoreChange(\n                          game.id,\n                          \"pair2\",\n                          parseInt(e.target.value) || 0\n                        )\n                      }\n                      onBlur={() => handleGameScoreBlur(game.id)}\n                      placeholder=\"0\"\n                    />\n                  </div>\n                </div>\n\n                {game.is_tie_break && (\n                  <div className=\"tie-break-scores\">\n                    <h6>🔗 Tie-Break</h6>\n                    <div className=\"score-input\">\n                      <label>Pareja 1:</label>\n                      <input\n                        type=\"number\"\n                        min=\"0\"\n                        max=\"20\"\n                        value={\n                          editingTieBreaks[game.id]?.pair1 !== undefined\n                            ? editingTieBreaks[game.id].pair1\n                            : game.tie_break_pair1_points\n                        }\n                        onChange={(e) =>\n                          handleTieBreakScoreChange(\n                            game.id,\n                            \"pair1\",\n                            parseInt(e.target.value) || 0\n                          )\n                        }\n                        onBlur={() => handleTieBreakScoreBlur(game.id)}\n                        placeholder=\"0\"\n                      />\n                    </div>\n\n                    <div className=\"score-input\">\n                      <label>Pareja 2:</label>\n                      <input\n                        type=\"number\"\n                        min=\"0\"\n                        max=\"20\"\n                        value={\n                          editingTieBreaks[game.id]?.pair2 !== undefined\n                            ? editingTieBreaks[game.id].pair2\n                            : game.tie_break_pair2_points\n                        }\n                        onChange={(e) =>\n                          handleTieBreakScoreChange(\n                            game.id,\n                            \"pair2\",\n                            parseInt(e.target.value) || 0\n                          )\n                        }\n                        onBlur={() => handleTieBreakScoreBlur(game.id)}\n                        placeholder=\"0\"\n                      />\n                    </div>\n                  </div>\n                )}\n              </div>\n            ))}\n          </div>\n\n          <div className=\"corrector-actions\">\n            <button\n              onClick={recalculateMatchWinner}\n              disabled={loading}\n              className=\"recalculate-winner-btn\"\n            >\n              {loading ? \"⏳ Procesando...\" : \"🔄 Recalcular Ganador\"}\n            </button>\n            <button\n              onClick={finishMatch}\n              disabled={loading || games.length === 0}\n              className=\"finish-match-btn\"\n            >\n              {loading ? \"⏳ Procesando...\" : \"🏆 Finalizar Partido\"}\n            </button>\n            <button onClick={onClose} className=\"cancel-btn\">\n              ❌ Cancelar\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ScoreCorrector;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}