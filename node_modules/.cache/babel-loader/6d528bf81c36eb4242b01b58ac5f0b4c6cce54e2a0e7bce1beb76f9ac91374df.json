{"ast":null,"code":"import React,{useState,useEffect,useCallback,useMemo}from\"react\";import\"./App.css\";import{TournamentManager}from\"./components/TournamentManager\";import{PlayerManager}from\"./components/PlayerManager\";import ScoreCorrector from\"./components/ScoreCorrector\";import StandingsTable from\"./components/StandingsTable\";import{SuccessModal}from\"./components/SuccessModal\";import MatchResults from\"./components/MatchResults\";import{createPair,getPairs,deletePair as deletePairFromDB,createMatch,getMatches,updateMatch,deleteMatchesByTournament,createGame,getGames,updateGame,deleteGame,updateTournament}from\"./lib/database\";import{testConnection}from\"./lib/supabaseClient\";import{FlexibleMatchFinisher}from\"./components/FlexibleMatchFinisher\";import MatchStatusDisplay from\"./components/MatchStatusDisplay\";import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";function App(){var _winner$player,_winner$player2;const[selectedTournament,setSelectedTournament]=useState(null);const[pairs,setPairs]=useState([]);const[matches,setMatches]=useState([]);const[games,setGames]=useState([]);const[selectedMatchId,setSelectedMatchId]=useState(null);const[error,setError]=useState(\"\");const[loading,setLoading]=useState(false);const[showPlayerManager,setShowPlayerManager]=useState(false);const[selectedPlayers,setSelectedPlayers]=useState([]);const[showWinnerScreen,setShowWinnerScreen]=useState(false);const[showMatchResults,setShowMatchResults]=useState(false);const[selectedMatchResults,setSelectedMatchResults]=useState(null);const[showScoreCorrector,setShowScoreCorrector]=useState(false);const[selectedCorrectorMatch,setSelectedCorrectorMatch]=useState(null);const[forceRefresh,setForceRefresh]=useState(0);const[showDebugInfo,setShowDebugInfo]=useState(false);const[editingGames,setEditingGames]=useState({});const[editingTieBreaks,setEditingTieBreaks]=useState({});const[showSuccessModal,setShowSuccessModal]=useState(false);const[successModalData,setSuccessModalData]=useState({title:\"\",message:\"\",icon:\"✅\"});// Cargar datos cuando se selecciona un torneo\nuseEffect(()=>{if(selectedTournament){loadTournamentData();}},[selectedTournament===null||selectedTournament===void 0?void 0:selectedTournament.id]);const loadTournamentData=useCallback(async()=>{if(!selectedTournament)return;try{setLoading(true);setError(\"\");console.log(\"Loading tournament data for:\",selectedTournament.name);const[pairsData,matchesData]=await Promise.all([getPairs(selectedTournament.id),getMatches(selectedTournament.id)]);console.log(\"Pairs loaded:\",pairsData.length,\"pairs\");setPairs(pairsData);console.log(\"Matches loaded from database:\",matchesData.length,\"matches\");setMatches(matchesData);}catch(err){console.error(\"Error loading tournament data:\",err);setError(\"Error al cargar los datos del torneo: \"+err.message);}finally{setLoading(false);}},[selectedTournament]);const deletePair=async pairId=>{try{setError(\"\");console.log(\"Eliminando pareja:\",pairId);await deletePairFromDB(pairId);setPairs(pairs.filter(p=>p.id!==pairId));console.log(\"Pareja eliminada exitosamente\");}catch(err){console.error(\"Error eliminando pareja:\",err);setError(\"Error al eliminar la pareja: \"+err.message);}};const addPair=async(player1,player2)=>{if(!selectedTournament){setError(\"No hay torneo seleccionado\");return;}try{setError(\"\");// Verificar duplicados en estado local\nconst existingPairLocal=pairs.find(pair=>{var _pair$player,_pair$player2,_pair$player3,_pair$player4;const sameIds=pair.player1_id===player1.id&&pair.player2_id===player2.id||pair.player1_id===player2.id&&pair.player2_id===player1.id;const sameNames=((_pair$player=pair.player1)===null||_pair$player===void 0?void 0:_pair$player.name.toLowerCase())===player1.name.toLowerCase()&&((_pair$player2=pair.player2)===null||_pair$player2===void 0?void 0:_pair$player2.name.toLowerCase())===player2.name.toLowerCase()||((_pair$player3=pair.player1)===null||_pair$player3===void 0?void 0:_pair$player3.name.toLowerCase())===player2.name.toLowerCase()&&((_pair$player4=pair.player2)===null||_pair$player4===void 0?void 0:_pair$player4.name.toLowerCase())===player1.name.toLowerCase();return sameIds||sameNames;});if(existingPairLocal){setError(`La pareja ${player1.name} y ${player2.name} ya está registrada`);return;}const newPair=await createPair(selectedTournament.id,player1.id,player2.id);setPairs([...pairs,newPair]);setSelectedPlayers([]);console.log(\"Pair added successfully\");}catch(err){console.error(\"Error creating pair:\",err);setError(\"Error al crear la pareja: \"+err.message);}};const startTournament=async()=>{if(!selectedTournament||pairs.length<2){setError(\"Se necesitan al menos 2 parejas para iniciar el torneo\");return;}try{setLoading(true);setError(\"\");console.log(\"🚀 Iniciando torneo:\",selectedTournament.name);// Limpiar partidos existentes\nif(matches.length>0){await deleteMatchesByTournament(selectedTournament.id);setMatches([]);}const allPairs=[...pairs];const allCombinations=[];for(let i=0;i<allPairs.length;i++){for(let j=i+1;j<allPairs.length;j++){allCombinations.push({pair1:allPairs[i],pair2:allPairs[j]});}}const finalMatches=[];const remainingCombinations=[...allCombinations];let round=1;while(remainingCombinations.length>0){const roundMatches=[];const usedPairs=new Set();const courtOrder=[];for(let i=0;i<selectedTournament.courts;i++){const rotatedCourt=(round-1+i)%selectedTournament.courts+1;courtOrder.push(rotatedCourt);}for(let courtIndex=0;courtIndex<courtOrder.length;courtIndex++){const court=courtOrder[courtIndex];let bestIndex=-1;let bestScore=-1;for(let i=0;i<remainingCombinations.length;i++){const combo=remainingCombinations[i];if(!usedPairs.has(combo.pair1.id)&&!usedPairs.has(combo.pair2.id)){let score=0;for(let j=0;j<remainingCombinations.length;j++){if(i!==j){const futureCombo=remainingCombinations[j];if(!usedPairs.has(futureCombo.pair1.id)&&!usedPairs.has(futureCombo.pair2.id)&&futureCombo.pair1.id!==combo.pair1.id&&futureCombo.pair1.id!==combo.pair2.id&&futureCombo.pair2.id!==combo.pair1.id&&futureCombo.pair2.id!==combo.pair2.id){score++;}}}if(score>bestScore){bestScore=score;bestIndex=i;}}}if(bestIndex!==-1){const combo=remainingCombinations[bestIndex];const match={pair1:combo.pair1,pair2:combo.pair2,round,court};roundMatches.push(match);usedPairs.add(combo.pair1.id);usedPairs.add(combo.pair2.id);remainingCombinations.splice(bestIndex,1);}else{break;}}if(roundMatches.length>0){finalMatches.push(...roundMatches);}round++;}const createdMatches=[];for(const match of finalMatches){try{const createdMatch=await createMatch(selectedTournament.id,match.pair1.id,match.pair2.id,match.court,match.round);createdMatches.push(createdMatch);}catch(error){console.error(\"Error creating match:\",error);}}await updateTournament(selectedTournament.id,{is_started:true});setSelectedTournament(prev=>prev?{...prev,is_started:true}:null);await loadTournamentData();setSuccessModalData({title:\"¡Torneo Iniciado!\",message:`Se han creado ${createdMatches.length} partidos exitosamente usando ${selectedTournament.courts} canchas. El torneo está listo para comenzar.`,icon:\"🏆\"});setShowSuccessModal(true);}catch(error){console.error(\"Error starting tournament:\",error);setError(\"Error al iniciar el torneo: \"+error.message);}finally{setLoading(false);}};const addGame=async matchId=>{try{setError(\"\");const gameNumber=games.filter(g=>g.match_id===matchId).length+1;const newGame=await createGame(matchId,gameNumber);setGames([...games,newGame]);}catch(err){console.error(\"❌ Error al agregar el juego:\",err);setError(\"Error al agregar el juego\");}};const updateGameScore=useCallback(async(gameId,pair1Games,pair2Games)=>{try{setError(\"\");setGames(prevGames=>prevGames.map(g=>g.id===gameId?{...g,pair1_games:pair1Games,pair2_games:pair2Games}:g));await updateGame(gameId,{pair1_games:pair1Games,pair2_games:pair2Games});}catch(err){console.error(\"❌ Error al actualizar el marcador:\",err);setError(\"Error al actualizar el marcador: \"+err.message);}},[games,selectedTournament]);const handleGameScoreChange=useCallback((gameId,pair1Games,pair2Games)=>{setEditingGames(prev=>({...prev,[gameId]:{pair1:pair1Games,pair2:pair2Games}}));},[]);const handleTieBreakScoreChange=useCallback((gameId,pair1Points,pair2Points)=>{setEditingTieBreaks(prev=>({...prev,[gameId]:{pair1:pair1Points,pair2:pair2Points}}));},[]);const handleGameScoreBlur=useCallback(async gameId=>{const editingGame=editingGames[gameId];if(editingGame){await updateGameScore(gameId,editingGame.pair1,editingGame.pair2);setEditingGames(prev=>{const newState={...prev};delete newState[gameId];return newState;});}},[editingGames]);const handleTieBreakScoreBlur=useCallback(async gameId=>{const editingTieBreak=editingTieBreaks[gameId];if(editingTieBreak){await updateTieBreakScore(gameId,editingTieBreak.pair1,editingTieBreak.pair2);setEditingTieBreaks(prev=>{const newState={...prev};delete newState[gameId];return newState;});}},[editingTieBreaks]);const updateTieBreakScore=async(gameId,pair1Points,pair2Points)=>{try{setError(\"\");setGames(prevGames=>prevGames.map(g=>g.id===gameId?{...g,tie_break_pair1_points:pair1Points,tie_break_pair2_points:pair2Points}:g));await updateGame(gameId,{tie_break_pair1_points:pair1Points,tie_break_pair2_points:pair2Points});}catch(err){console.error(\"❌ Error al actualizar el tie break:\",err);setError(\"Error al actualizar el tie break: \"+err.message);}};const toggleTieBreak=async gameId=>{try{setError(\"\");const game=games.find(g=>g.id===gameId);if(!game)return;const newIsTieBreak=!game.is_tie_break;setGames(prevGames=>prevGames.map(g=>g.id===gameId?{...g,is_tie_break:newIsTieBreak,tie_break_pair1_points:0,tie_break_pair2_points:0}:g));await updateGame(gameId,{is_tie_break:newIsTieBreak,tie_break_pair1_points:0,tie_break_pair2_points:0});}catch(err){setError(\"Error al cambiar el tipo de juego\");console.error(err);}};const removeGame=async gameId=>{try{setError(\"\");await deleteGame(gameId);setGames(games.filter(g=>g.id!==gameId));}catch(err){console.error(\"❌ Error al eliminar el juego:\",err);setError(\"Error al eliminar el juego: \"+err.message);}};const correctGameScore=useCallback(async function(gameId,pair1Games,pair2Games){let pair1TieBreakPoints=arguments.length>3&&arguments[3]!==undefined?arguments[3]:0;let pair2TieBreakPoints=arguments.length>4&&arguments[4]!==undefined?arguments[4]:0;let isTieBreak=arguments.length>5&&arguments[5]!==undefined?arguments[5]:false;try{setError(\"\");setGames(prevGames=>prevGames.map(g=>g.id===gameId?{...g,pair1_games:pair1Games,pair2_games:pair2Games,tie_break_pair1_points:pair1TieBreakPoints,tie_break_pair2_points:pair2TieBreakPoints,is_tie_break:isTieBreak,updated_at:new Date().toISOString()}:g));await updateGame(gameId,{pair1_games:pair1Games,pair2_games:pair2Games,tie_break_pair1_points:pair1TieBreakPoints,tie_break_pair2_points:pair2TieBreakPoints,is_tie_break:isTieBreak});}catch(err){console.error(\"❌ Error al corregir el marcador:\",err);setError(\"Error al corregir el marcador: \"+err.message);}},[]);const finishMatch=async matchId=>{try{setError(\"\");const match=matches.find(m=>m.id===matchId);if(!match){console.error(\"Match not found:\",matchId);return;}const matchGames=games.filter(g=>g.match_id===matchId);if(!FlexibleMatchFinisher.canFinishMatch(matchGames)){setError(\"No se puede finalizar el partido. Verifica que todos los juegos tengan marcadores válidos.\");return;}const result=await FlexibleMatchFinisher.finishMatch(match,matchGames,pairs,async()=>{if(selectedTournament){const pairsData=await getPairs(selectedTournament.id);setPairs(pairsData);setForceRefresh(prev=>prev+1);const matchesData=await getMatches(selectedTournament.id);setMatches(matchesData);}});if(result.success){setMatches(matches.map(m=>m.id===matchId?{...m,winner_id:result.winnerId,is_finished:true}:m));if(selectedTournament){const updatedPairsData=await getPairs(selectedTournament.id);setPairs(updatedPairsData);setForceRefresh(prev=>prev+1);}alert(result.message);}else{setError(result.message);}}catch(err){setError(\"Error al finalizar el partido\");console.error(err);}};const handleMatchSelect=matchId=>{setSelectedMatchId(matchId);loadMatchGames(matchId);};const loadMatchGames=async matchId=>{try{const gamesData=await getGames(matchId);setGames(gamesData);}catch(err){console.error(\"❌ Error al cargar juegos:\",err);}};const selectedMatch=matches.find(match=>match.id===selectedMatchId);const matchesByRound=matches.reduce((acc,match)=>{if(!acc[match.round]){acc[match.round]=[];}acc[match.round].push(match);return acc;},{});const sortedPairs=useMemo(()=>{return[...pairs].sort((a,b)=>{if(a.sets_won!==b.sets_won){return b.sets_won-a.sets_won;}if(a.games_won!==b.games_won){return b.games_won-a.games_won;}return b.points-a.points;});},[pairs,forceRefresh]);const isTournamentFinished=useMemo(()=>{return matches.length>0&&matches.every(match=>match.is_finished);},[matches]);const winner=useMemo(()=>{return sortedPairs.length>0?sortedPairs[0]:null;},[sortedPairs]);const showWinnerScreenHandler=()=>{setShowWinnerScreen(true);};const hideWinnerScreenHandler=()=>{setShowWinnerScreen(false);};const showMatchResultsHandler=match=>{setSelectedMatchResults(match);setShowMatchResults(true);};const hideMatchResultsHandler=()=>{setShowMatchResults(false);setSelectedMatchResults(null);};const handleViewTournamentResults=async tournament=>{try{setSelectedTournament(tournament);await loadTournamentData();alert(`✅ Torneo \"${tournament.name}\" seleccionado\\n\\nAhora puedes ver todos los partidos y resultados en el panel derecho.`);}catch(err){console.error(\"❌ Error al cargar resultados del torneo:\",err);alert(\"Error al cargar los resultados del torneo. Inténtalo de nuevo.\");}};const recalculateMatchWinner=async matchId=>{try{const match=matches.find(m=>m.id===matchId);if(!match){console.error(\"Match not found:\",matchId);return;}const matchGames=await getGames(matchId);if(matchGames.length===0){console.log(\"No hay juegos para recalcular\");return;}let pair1Games=0;let pair2Games=0;matchGames.forEach(game=>{if(game.is_tie_break){if(game.tie_break_pair1_points>=10&&game.tie_break_pair1_points-game.tie_break_pair2_points>=2){pair1Games++;}else if(game.tie_break_pair2_points>=10&&game.tie_break_pair2_points-game.tie_break_pair1_points>=2){pair2Games++;}}else{if(game.pair1_games>game.pair2_games){pair1Games++;}else if(game.pair2_games>game.pair1_games){pair2Games++;}}});const isTie=pair1Games===pair2Games;const winnerId=isTie?undefined:pair1Games>pair2Games?match.pair1_id:match.pair2_id;await updateMatch(matchId,{winner_id:winnerId,is_finished:true});console.log(\"✅ Ganador recalculado y actualizado en la base de datos\");}catch(error){console.error(\"Error recalculating match winner:\",error);}};const handleBackToHome=()=>{setSelectedTournament(null);setPairs([]);setMatches([]);setGames([]);setSelectedMatchId(null);setError(\"\");setShowWinnerScreen(false);setShowMatchResults(false);setSelectedMatchResults(null);setShowScoreCorrector(false);setSelectedCorrectorMatch(null);setForceRefresh(0);setShowDebugInfo(false);setEditingGames({});setEditingTieBreaks({});setShowSuccessModal(false);setSuccessModalData({title:\"\",message:\"\",icon:\"✅\"});};const openScoreCorrector=match=>{setSelectedCorrectorMatch(match);setShowScoreCorrector(true);};const closeScoreCorrector=()=>{setShowScoreCorrector(false);setSelectedCorrectorMatch(null);};const handleScoreCorrectorUpdate=async()=>{if(selectedTournament){await loadTournamentData();}closeScoreCorrector();};return/*#__PURE__*/_jsx(\"div\",{className:\"App\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"container\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"\\uD83C\\uDFC6 Gesti\\xF3n de Torneos Express y Retas\"}),error&&/*#__PURE__*/_jsxs(\"div\",{className:\"error\",children:[/*#__PURE__*/_jsx(\"h4\",{children:\"\\u274C Error\"}),/*#__PURE__*/_jsx(\"p\",{children:error}),/*#__PURE__*/_jsxs(\"div\",{className:\"error-help\",children:[/*#__PURE__*/_jsx(\"h5\",{children:\"\\uD83D\\uDCA1 Ayuda:\"}),/*#__PURE__*/_jsxs(\"ol\",{children:[/*#__PURE__*/_jsx(\"li\",{children:\"Verifica tu conexi\\xF3n a internet\"}),/*#__PURE__*/_jsx(\"li\",{children:\"Intenta recargar la p\\xE1gina\"}),/*#__PURE__*/_jsx(\"li\",{children:\"Si el problema persiste, contacta al administrador\"})]})]})]}),loading&&/*#__PURE__*/_jsx(\"div\",{className:\"loading\",children:/*#__PURE__*/_jsx(\"p\",{children:\"\\u23F3 Cargando...\"})}),/*#__PURE__*/_jsxs(\"div\",{className:\"main-layout\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"left-panel\",children:/*#__PURE__*/_jsx(TournamentManager,{selectedTournament:selectedTournament||undefined,onTournamentSelect:setSelectedTournament,onViewResults:handleViewTournamentResults})}),/*#__PURE__*/_jsx(\"div\",{className:\"right-panel\",children:selectedTournament?/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsxs(\"div\",{className:\"tournament-details\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"tournament-header\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"tournament-header-content\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"tournament-title-section\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"tournament-icon\",children:\"\\uD83C\\uDFC6\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"tournament-info\",children:[/*#__PURE__*/_jsx(\"h2\",{children:selectedTournament.name}),selectedTournament.description&&/*#__PURE__*/_jsx(\"div\",{className:\"tournament-description\",children:selectedTournament.description})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"tournament-stats-section\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"stats-row\",children:[/*#__PURE__*/_jsxs(\"span\",{className:\"stat-badge\",children:[selectedTournament.courts,\" canchas\"]}),/*#__PURE__*/_jsxs(\"span\",{className:\"stat-badge\",children:[pairs.length,\" parejas\"]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"stats-row\",children:[/*#__PURE__*/_jsxs(\"span\",{className:\"stat-badge\",children:[matches.length,\" partidos\"]}),/*#__PURE__*/_jsx(\"span\",{className:`status-badge ${selectedTournament.is_started?\"started\":\"pending\"}`,children:selectedTournament.is_started?\"En Progreso\":\"Pendiente\"})]})]})]})}),/*#__PURE__*/_jsxs(\"div\",{className:\"player-management-section\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"player-management-header\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"\\uD83D\\uDC65 Gesti\\xF3n de Jugadores\"}),/*#__PURE__*/_jsx(\"button\",{className:\"toggle-player-manager-btn\",onClick:()=>setShowPlayerManager(!showPlayerManager),children:showPlayerManager?\"👥 Ocultar Gestión de Jugadores\":\"👥 Mostrar Gestión de Jugadores\"})]}),showPlayerManager&&/*#__PURE__*/_jsx(\"div\",{className:\"player-manager-container\",children:/*#__PURE__*/_jsx(PlayerManager,{playersInPairs:pairs.flatMap(pair=>[pair.player1_id,pair.player2_id]),onPlayerSelect:players=>{console.log(\"=== SELECCIÓN DE JUGADORES ===\");console.log(\"Players selected:\",players.length);players.forEach((player,index)=>{console.log(`Player ${index+1}:`,player.name,\"(ID:\",player.id+\")\");});// Validación: Verificar si algún jugador ya está en una pareja\nconst playersInPairs=players.filter(player=>{const isInPair=pairs.some(pair=>pair.player1_id===player.id||pair.player2_id===player.id);if(isInPair){var _existingPair$player,_existingPair$player2,_existingPair$player3;const existingPair=pairs.find(pair=>pair.player1_id===player.id||pair.player2_id===player.id);console.log(`🚨 JUGADOR YA EN PAREJA: ${player.name} está en pareja con ${(existingPair===null||existingPair===void 0?void 0:(_existingPair$player=existingPair.player1)===null||_existingPair$player===void 0?void 0:_existingPair$player.id)===player.id?existingPair===null||existingPair===void 0?void 0:(_existingPair$player2=existingPair.player2)===null||_existingPair$player2===void 0?void 0:_existingPair$player2.name:existingPair===null||existingPair===void 0?void 0:(_existingPair$player3=existingPair.player1)===null||_existingPair$player3===void 0?void 0:_existingPair$player3.name}`);}return isInPair;});if(playersInPairs.length>0){const playerNames=playersInPairs.map(p=>p.name).join(\", \");console.log(\"🚨 ERROR: Jugadores ya están en parejas:\",playerNames);setError(`Los jugadores ${playerNames} ya están en parejas existentes. Debes eliminar sus parejas actuales antes de poder seleccionarlos nuevamente.`);return;}// Validación: No permitir jugadores con nombres iguales\nif(players.length===2){const player1=players[0];const player2=players[1];if(player1.name.toLowerCase()===player2.name.toLowerCase()){console.log(\"🚨 ERROR: Jugadores con nombres iguales detectados\");console.log(\"Player 1:\",player1.name,\"(ID:\",player1.id+\")\");console.log(\"Player 2:\",player2.name,\"(ID:\",player2.id+\")\");setError(\"No puedes seleccionar dos jugadores con el mismo nombre\");return;}// Validación: Verificar si ya existe una pareja con estos jugadores\nconst existingPair=pairs.find(pair=>{var _pair$player5,_pair$player6,_pair$player7,_pair$player8;const sameIds=pair.player1_id===player1.id&&pair.player2_id===player2.id||pair.player1_id===player2.id&&pair.player2_id===player1.id;const sameNames=((_pair$player5=pair.player1)===null||_pair$player5===void 0?void 0:_pair$player5.name.toLowerCase())===player1.name.toLowerCase()&&((_pair$player6=pair.player2)===null||_pair$player6===void 0?void 0:_pair$player6.name.toLowerCase())===player2.name.toLowerCase()||((_pair$player7=pair.player1)===null||_pair$player7===void 0?void 0:_pair$player7.name.toLowerCase())===player2.name.toLowerCase()&&((_pair$player8=pair.player2)===null||_pair$player8===void 0?void 0:_pair$player8.name.toLowerCase())===player1.name.toLowerCase();if(sameIds||sameNames){console.log(\"🚨 PAREJA DUPLICADA DETECTADA:\",player1.name,\"+\",player2.name);console.log(\"Existing pair:\",existingPair);}return sameIds||sameNames;});if(existingPair){console.log(\"🚨 ERROR: Pareja ya existe en la base de datos\");setError(`La pareja ${player1.name} + ${player2.name} ya existe en el torneo`);return;}// Si llegamos aquí, la pareja es válida\nconsole.log(\"✅ PAREJA VÁLIDA:\",player1.name,\"+\",player2.name);addPair(player1,player2);setSelectedPlayers([]);// Limpiar selección después de crear la pareja\n}else{setSelectedPlayers(players);}},selectedPlayers:selectedPlayers,allowMultipleSelection:true})})]}),!selectedTournament.is_started&&/*#__PURE__*/_jsxs(\"div\",{className:\"start-tournament-section\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"\\uD83D\\uDE80 Iniciar Torneo\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"tournament-info\",children:[/*#__PURE__*/_jsxs(\"p\",{children:[\"Tienes \",pairs.length,\" parejas registradas\"]}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Se crear\\xE1n \",pairs.length*(pairs.length-1)/2,\" \",\"partidos (round-robin completo - todas las parejas se enfrentan)\"]}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Estado del torneo:\",\" \",selectedTournament.is_started?\"Iniciado\":\"Pendiente\"]})]}),/*#__PURE__*/_jsx(\"button\",{className:\"start-button\",onClick:startTournament,disabled:loading||pairs.length<2,children:loading?\"⏳ Iniciando...\":selectedTournament.is_started?\"🏆 Torneo Ya Iniciado\":pairs.length<2?\"❌ Necesitas al menos 2 parejas\":\"🚀 ¡Iniciar Torneo!\"})]}),selectedTournament&&/*#__PURE__*/_jsxs(\"div\",{className:\"debug-section\",children:[/*#__PURE__*/_jsxs(\"button\",{className:\"debug-toggle-btn\",onClick:()=>setShowDebugInfo(!showDebugInfo),children:[showDebugInfo?\"🔽\":\"🔼\",\" Debug Info\"]}),showDebugInfo&&/*#__PURE__*/_jsxs(\"div\",{className:\"debug-info\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"debug-header\",children:[/*#__PURE__*/_jsx(\"h4\",{children:\"\\uD83D\\uDD27 Informaci\\xF3n de Debug\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"debug-stats\",children:[/*#__PURE__*/_jsxs(\"span\",{children:[\"Estado:\",\" \",selectedTournament.is_started?\"✅ Iniciado\":\"⏳ Pendiente\"]}),/*#__PURE__*/_jsxs(\"span\",{children:[\"Parejas: \",pairs.length]}),/*#__PURE__*/_jsxs(\"span\",{children:[\"Partidos: \",matches.length]})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"debug-buttons\",children:[/*#__PURE__*/_jsx(\"button\",{onClick:async()=>{console.log(\"=== PROBAR CONEXIÓN ===\");const isConnected=await testConnection();if(isConnected){setError(\"\");}else{setError(\"❌ Error de conexión a Supabase. Verifica tu configuración.\");}},className:\"debug-btn connection-btn\",children:\"\\uD83D\\uDD0C Probar Conexi\\xF3n\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>{console.log(\"=== FORZANDO RECARGA DE DATOS ===\");loadTournamentData();},className:\"debug-btn reload-btn\",children:\"\\uD83D\\uDD04 Recargar Datos\"}),/*#__PURE__*/_jsx(\"button\",{onClick:async()=>{console.log(\"=== VERIFICANDO ESTADO DEL TORNEO ===\");try{console.log(\"Estado actual del torneo:\",selectedTournament);console.log(\"Parejas en estado:\",pairs.length);console.log(\"Partidos en estado:\",matches.length);const dbPairs=await getPairs(selectedTournament.id);const dbMatches=await getMatches(selectedTournament.id);console.log(\"Parejas en BD:\",dbPairs.length);console.log(\"Partidos en BD:\",dbMatches.length);alert(`Estado del torneo:\\n\\nParejas: ${pairs.length} (estado) / ${dbPairs.length} (BD)\\nPartidos: ${matches.length} (estado) / ${dbMatches.length} (BD)\\n\\nTorneo iniciado: ${selectedTournament.is_started?\"Sí\":\"No\"}`);}catch(error){console.error(\"Error verificando estado:\",error);}},className:\"debug-btn status-btn\",children:\"\\uD83D\\uDD0D Verificar Estado\"})]})]})]}),pairs.length>0&&/*#__PURE__*/_jsxs(\"div\",{className:\"pairs-display\",children:[/*#__PURE__*/_jsxs(\"h3\",{children:[\"\\uD83D\\uDC65 Parejas Registradas (\",pairs.length,\")\"]}),/*#__PURE__*/_jsx(\"div\",{className:\"pairs-grid\",children:pairs.map((pair,index)=>{var _pair$player9,_pair$player0;return/*#__PURE__*/_jsxs(\"div\",{className:\"pair-display-card\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"pair-number\",children:[\"#\",index+1]}),/*#__PURE__*/_jsxs(\"div\",{className:\"pair-names\",children:[(_pair$player9=pair.player1)===null||_pair$player9===void 0?void 0:_pair$player9.name,\" y \",(_pair$player0=pair.player2)===null||_pair$player0===void 0?void 0:_pair$player0.name]}),/*#__PURE__*/_jsxs(\"div\",{className:\"pair-stats\",children:[/*#__PURE__*/_jsxs(\"span\",{children:[\"Sets: \",pair.sets_won]}),/*#__PURE__*/_jsxs(\"span\",{children:[\"Partidos: \",pair.matches_played]}),/*#__PURE__*/_jsxs(\"span\",{children:[\"Puntos: \",pair.points]})]}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>{var _pair$player1,_pair$player10;if(window.confirm(`¿Estás seguro de que quieres eliminar la pareja \"${(_pair$player1=pair.player1)===null||_pair$player1===void 0?void 0:_pair$player1.name} y ${(_pair$player10=pair.player2)===null||_pair$player10===void 0?void 0:_pair$player10.name}\"?`)){deletePair(pair.id);}},className:\"delete-pair-btn\",title:\"Eliminar pareja\",children:\"\\uD83D\\uDDD1\\uFE0F\"})]},pair.id);})})]}),selectedTournament.is_started&&/*#__PURE__*/_jsxs(\"div\",{className:\"tournament-content\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"matches-section\",children:[/*#__PURE__*/_jsxs(\"h3\",{children:[\"\\uD83C\\uDFBE Partidos (\",matches.length,\" total)\"]}),matches.length===0?/*#__PURE__*/_jsxs(\"div\",{className:\"no-matches\",children:[/*#__PURE__*/_jsx(\"p\",{children:\"\\uD83D\\uDCDD No hay partidos programados a\\xFAn\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Inicia el torneo para generar los partidos autom\\xE1ticamente\"})]}):Object.entries(matchesByRound).map(_ref=>{let[round,roundMatches]=_ref;return/*#__PURE__*/_jsxs(\"div\",{className:\"round-section\",children:[/*#__PURE__*/_jsxs(\"h4\",{children:[\"\\uD83D\\uDD04 Ronda \",round,\" (\",roundMatches.length,\" \",\"partidos)\"]}),/*#__PURE__*/_jsx(\"div\",{className:\"matches-container\",children:roundMatches.map(match=>{var _match$pair,_match$pair$player,_match$pair2,_match$pair2$player,_match$pair3,_match$pair3$player,_match$pair4,_match$pair4$player,_match$pair5,_match$pair5$player,_match$pair6,_match$pair6$player,_match$pair7,_match$pair7$player,_match$pair8,_match$pair8$player,_match$pair9,_match$pair9$player,_match$pair0,_match$pair0$player,_match$pair1,_match$pair1$player,_match$pair10,_match$pair10$player,_match$pair11,_match$pair11$player,_match$pair12,_match$pair12$player,_match$pair13,_match$pair13$player,_match$pair14,_match$pair14$player;return/*#__PURE__*/_jsxs(\"div\",{className:`match-card ${selectedMatchId===match.id?\"selected\":\"\"}`,onClick:()=>handleMatchSelect(match.id),children:[/*#__PURE__*/_jsxs(\"div\",{className:\"match-header\",children:[/*#__PURE__*/_jsxs(\"h5\",{children:[(_match$pair=match.pair1)===null||_match$pair===void 0?void 0:(_match$pair$player=_match$pair.player1)===null||_match$pair$player===void 0?void 0:_match$pair$player.name,\" y\",\" \",(_match$pair2=match.pair1)===null||_match$pair2===void 0?void 0:(_match$pair2$player=_match$pair2.player2)===null||_match$pair2$player===void 0?void 0:_match$pair2$player.name,\" vs\",\" \",(_match$pair3=match.pair2)===null||_match$pair3===void 0?void 0:(_match$pair3$player=_match$pair3.player1)===null||_match$pair3$player===void 0?void 0:_match$pair3$player.name,\" y\",\" \",(_match$pair4=match.pair2)===null||_match$pair4===void 0?void 0:(_match$pair4$player=_match$pair4.player2)===null||_match$pair4$player===void 0?void 0:_match$pair4$player.name]}),/*#__PURE__*/_jsxs(\"div\",{className:\"match-info\",children:[/*#__PURE__*/_jsxs(\"span\",{className:\"court-badge\",children:[\"\\uD83C\\uDFDF\\uFE0F Cancha \",match.court]}),/*#__PURE__*/_jsxs(\"span\",{className:\"round-badge\",children:[\"\\uD83D\\uDD04 Ronda \",match.round]})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"match-details\",children:[/*#__PURE__*/_jsxs(\"p\",{className:\"match-pairs\",children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Pareja 1:\"}),\" \",(_match$pair5=match.pair1)===null||_match$pair5===void 0?void 0:(_match$pair5$player=_match$pair5.player1)===null||_match$pair5$player===void 0?void 0:_match$pair5$player.name,\" y\",\" \",(_match$pair6=match.pair1)===null||_match$pair6===void 0?void 0:(_match$pair6$player=_match$pair6.player2)===null||_match$pair6$player===void 0?void 0:_match$pair6$player.name]}),/*#__PURE__*/_jsxs(\"p\",{className:\"match-pairs\",children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Pareja 2:\"}),\" \",(_match$pair7=match.pair2)===null||_match$pair7===void 0?void 0:(_match$pair7$player=_match$pair7.player1)===null||_match$pair7$player===void 0?void 0:_match$pair7$player.name,\" y\",\" \",(_match$pair8=match.pair2)===null||_match$pair8===void 0?void 0:(_match$pair8$player=_match$pair8.player2)===null||_match$pair8$player===void 0?void 0:_match$pair8$player.name]})]}),match.winner_id&&/*#__PURE__*/_jsxs(\"div\",{className:\"winner\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"winner-icon\",children:\"\\uD83C\\uDFC6\"}),\"Ganador:\",\" \",match.winner_id===match.pair1_id?`${(_match$pair9=match.pair1)===null||_match$pair9===void 0?void 0:(_match$pair9$player=_match$pair9.player1)===null||_match$pair9$player===void 0?void 0:_match$pair9$player.name} y ${(_match$pair0=match.pair1)===null||_match$pair0===void 0?void 0:(_match$pair0$player=_match$pair0.player2)===null||_match$pair0$player===void 0?void 0:_match$pair0$player.name}`:`${(_match$pair1=match.pair2)===null||_match$pair1===void 0?void 0:(_match$pair1$player=_match$pair1.player1)===null||_match$pair1$player===void 0?void 0:_match$pair1$player.name} y ${(_match$pair10=match.pair2)===null||_match$pair10===void 0?void 0:(_match$pair10$player=_match$pair10.player2)===null||_match$pair10$player===void 0?void 0:_match$pair10$player.name}`]}),match.is_finished&&!match.winner_id&&/*#__PURE__*/_jsxs(\"div\",{className:\"winner\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"winner-icon\",children:\"\\uD83E\\uDD1D\"}),\"Empate: \",(_match$pair11=match.pair1)===null||_match$pair11===void 0?void 0:(_match$pair11$player=_match$pair11.player1)===null||_match$pair11$player===void 0?void 0:_match$pair11$player.name,\" \",\"y \",(_match$pair12=match.pair1)===null||_match$pair12===void 0?void 0:(_match$pair12$player=_match$pair12.player2)===null||_match$pair12$player===void 0?void 0:_match$pair12$player.name,\" vs\",\" \",(_match$pair13=match.pair2)===null||_match$pair13===void 0?void 0:(_match$pair13$player=_match$pair13.player1)===null||_match$pair13$player===void 0?void 0:_match$pair13$player.name,\" y\",\" \",(_match$pair14=match.pair2)===null||_match$pair14===void 0?void 0:(_match$pair14$player=_match$pair14.player2)===null||_match$pair14$player===void 0?void 0:_match$pair14$player.name]}),/*#__PURE__*/_jsx(\"div\",{className:\"match-status\",children:match.is_finished?/*#__PURE__*/_jsx(\"span\",{className:\"status-finished\",children:\"\\u2714 Finalizado\"}):/*#__PURE__*/_jsx(\"span\",{className:\"status-pending\",children:\"\\u23F3 Pendiente\"})}),/*#__PURE__*/_jsxs(\"div\",{className:\"match-actions\",children:[/*#__PURE__*/_jsx(\"button\",{onClick:e=>{e.stopPropagation();showMatchResultsHandler(match);},className:\"view-results-btn\",children:\"\\uD83D\\uDCCA Ver Resultados\"}),/*#__PURE__*/_jsx(\"button\",{onClick:e=>{e.stopPropagation();openScoreCorrector(match);},className:\"correct-result-btn\",children:\"\\u270F\\uFE0F Corregir Marcador\"})]})]},match.id);})})]},round);})]}),selectedMatch&&/*#__PURE__*/_jsx(\"div\",{className:\"match-management\",children:/*#__PURE__*/_jsx(MatchStatusDisplay,{match:selectedMatch,games:games.filter(g=>g.match_id===selectedMatch.id),pairs:pairs})}),/*#__PURE__*/_jsx(StandingsTable,{tournamentId:selectedTournament.id,forceRefresh:forceRefresh}),isTournamentFinished&&winner&&/*#__PURE__*/_jsx(\"div\",{className:\"winner-button-container\",children:/*#__PURE__*/_jsx(\"button\",{className:\"show-winner-button\",onClick:showWinnerScreenHandler,children:\"\\uD83C\\uDFC6 \\xA1Ver Ganador!\"})}),/*#__PURE__*/_jsx(\"div\",{className:\"back-home-button-container\",children:/*#__PURE__*/_jsx(\"button\",{className:\"back-home-button\",onClick:handleBackToHome,children:\"\\uD83C\\uDFE0 Volver al Inicio\"})})]})]})}):/*#__PURE__*/_jsxs(\"div\",{className:\"no-tournament-selected\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"\\uD83C\\uDFC6 Bienvenido al Gestor de Torneos\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Selecciona un torneo del panel izquierdo para comenzar a gestionar partidos y resultados.\"})]})})]}),showWinnerScreen&&winner&&/*#__PURE__*/_jsx(\"div\",{className:\"winner-screen\",children:/*#__PURE__*/_jsx(\"div\",{className:\"winner-content\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"winner-celebration\",children:[/*#__PURE__*/_jsx(\"h1\",{className:\"winner-title\",children:\"\\uD83C\\uDFC6 \\xA1FELICIDADES! \\uD83C\\uDFC6\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"winner-names\",children:[(_winner$player=winner.player1)===null||_winner$player===void 0?void 0:_winner$player.name,\" y \",(_winner$player2=winner.player2)===null||_winner$player2===void 0?void 0:_winner$player2.name]}),/*#__PURE__*/_jsx(\"div\",{className:\"winner-subtitle\",children:\"\\xA1Son los campeones del torneo!\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"winner-stats\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"stat-item\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"stat-number\",children:winner.sets_won}),/*#__PURE__*/_jsx(\"span\",{className:\"stat-label\",children:\"Sets Ganados\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"stat-item\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"stat-number\",children:winner.games_won}),/*#__PURE__*/_jsx(\"span\",{className:\"stat-label\",children:\"Partidos Ganados\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"stat-item\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"stat-number\",children:winner.points}),/*#__PURE__*/_jsx(\"span\",{className:\"stat-label\",children:\"Puntos Totales\"})]})]}),/*#__PURE__*/_jsx(\"button\",{className:\"back-button\",onClick:hideWinnerScreenHandler,children:\"\\uD83C\\uDFE0 Volver al Torneo\"})]})})}),showMatchResults&&selectedMatchResults&&/*#__PURE__*/_jsx(MatchResults,{match:selectedMatchResults,isOpen:showMatchResults,onClose:hideMatchResultsHandler}),showScoreCorrector&&selectedCorrectorMatch&&/*#__PURE__*/_jsx(ScoreCorrector,{match:selectedCorrectorMatch,onClose:closeScoreCorrector,onUpdate:handleScoreCorrectorUpdate}),showSuccessModal&&/*#__PURE__*/_jsx(SuccessModal,{title:successModalData.title,message:successModalData.message,icon:successModalData.icon,isOpen:showSuccessModal,onClose:()=>setShowSuccessModal(false)})]})});}export default App;","map":{"version":3,"names":["React","useState","useEffect","useCallback","useMemo","TournamentManager","PlayerManager","ScoreCorrector","StandingsTable","SuccessModal","MatchResults","createPair","getPairs","deletePair","deletePairFromDB","createMatch","getMatches","updateMatch","deleteMatchesByTournament","createGame","getGames","updateGame","deleteGame","updateTournament","testConnection","FlexibleMatchFinisher","MatchStatusDisplay","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","App","_winner$player","_winner$player2","selectedTournament","setSelectedTournament","pairs","setPairs","matches","setMatches","games","setGames","selectedMatchId","setSelectedMatchId","error","setError","loading","setLoading","showPlayerManager","setShowPlayerManager","selectedPlayers","setSelectedPlayers","showWinnerScreen","setShowWinnerScreen","showMatchResults","setShowMatchResults","selectedMatchResults","setSelectedMatchResults","showScoreCorrector","setShowScoreCorrector","selectedCorrectorMatch","setSelectedCorrectorMatch","forceRefresh","setForceRefresh","showDebugInfo","setShowDebugInfo","editingGames","setEditingGames","editingTieBreaks","setEditingTieBreaks","showSuccessModal","setShowSuccessModal","successModalData","setSuccessModalData","title","message","icon","loadTournamentData","id","console","log","name","pairsData","matchesData","Promise","all","length","err","pairId","filter","p","addPair","player1","player2","existingPairLocal","find","pair","_pair$player","_pair$player2","_pair$player3","_pair$player4","sameIds","player1_id","player2_id","sameNames","toLowerCase","newPair","startTournament","allPairs","allCombinations","i","j","push","pair1","pair2","finalMatches","remainingCombinations","round","roundMatches","usedPairs","Set","courtOrder","courts","rotatedCourt","courtIndex","court","bestIndex","bestScore","combo","has","score","futureCombo","match","add","splice","createdMatches","createdMatch","is_started","prev","addGame","matchId","gameNumber","g","match_id","newGame","updateGameScore","gameId","pair1Games","pair2Games","prevGames","map","pair1_games","pair2_games","handleGameScoreChange","handleTieBreakScoreChange","pair1Points","pair2Points","handleGameScoreBlur","editingGame","newState","handleTieBreakScoreBlur","editingTieBreak","updateTieBreakScore","tie_break_pair1_points","tie_break_pair2_points","toggleTieBreak","game","newIsTieBreak","is_tie_break","removeGame","correctGameScore","pair1TieBreakPoints","arguments","undefined","pair2TieBreakPoints","isTieBreak","updated_at","Date","toISOString","finishMatch","m","matchGames","canFinishMatch","result","success","winner_id","winnerId","is_finished","updatedPairsData","alert","handleMatchSelect","loadMatchGames","gamesData","selectedMatch","matchesByRound","reduce","acc","sortedPairs","sort","a","b","sets_won","games_won","points","isTournamentFinished","every","winner","showWinnerScreenHandler","hideWinnerScreenHandler","showMatchResultsHandler","hideMatchResultsHandler","handleViewTournamentResults","tournament","recalculateMatchWinner","forEach","isTie","pair1_id","pair2_id","handleBackToHome","openScoreCorrector","closeScoreCorrector","handleScoreCorrectorUpdate","className","children","onTournamentSelect","onViewResults","description","onClick","playersInPairs","flatMap","onPlayerSelect","players","player","index","isInPair","some","_existingPair$player","_existingPair$player2","_existingPair$player3","existingPair","playerNames","join","_pair$player5","_pair$player6","_pair$player7","_pair$player8","allowMultipleSelection","disabled","isConnected","dbPairs","dbMatches","_pair$player9","_pair$player0","matches_played","_pair$player1","_pair$player10","window","confirm","Object","entries","_ref","_match$pair","_match$pair$player","_match$pair2","_match$pair2$player","_match$pair3","_match$pair3$player","_match$pair4","_match$pair4$player","_match$pair5","_match$pair5$player","_match$pair6","_match$pair6$player","_match$pair7","_match$pair7$player","_match$pair8","_match$pair8$player","_match$pair9","_match$pair9$player","_match$pair0","_match$pair0$player","_match$pair1","_match$pair1$player","_match$pair10","_match$pair10$player","_match$pair11","_match$pair11$player","_match$pair12","_match$pair12$player","_match$pair13","_match$pair13$player","_match$pair14","_match$pair14$player","e","stopPropagation","tournamentId","isOpen","onClose","onUpdate"],"sources":["/Users/nedev/padel-tournament-app/src/App.tsx"],"sourcesContent":["import React, { useState, useEffect, useCallback, useMemo } from \"react\";\nimport \"./App.css\";\nimport { TournamentManager } from \"./components/TournamentManager\";\nimport { PlayerManager } from \"./components/PlayerManager\";\nimport ScoreCorrector from \"./components/ScoreCorrector\";\nimport StandingsTable from \"./components/StandingsTable\";\nimport { SuccessModal } from \"./components/SuccessModal\";\nimport MatchResults from \"./components/MatchResults\";\n\nimport {\n  Tournament,\n  Player,\n  Pair,\n  Match,\n  Game,\n  createPair,\n  getPairs,\n  updatePair,\n  deletePair as deletePairFromDB,\n  deletePairsByTournament,\n  createMatch,\n  getMatches,\n  updateMatch,\n  deleteMatchesByTournament,\n  createGame,\n  getGames,\n  updateGame,\n  deleteGame,\n  updateTournament,\n} from \"./lib/database\";\nimport { testConnection } from \"./lib/supabaseClient\";\nimport { FlexibleMatchFinisher } from \"./components/FlexibleMatchFinisher\";\nimport MatchStatusDisplay from \"./components/MatchStatusDisplay\";\n\nfunction App() {\n  const [selectedTournament, setSelectedTournament] =\n    useState<Tournament | null>(null);\n  const [pairs, setPairs] = useState<Pair[]>([]);\n  const [matches, setMatches] = useState<Match[]>([]);\n  const [games, setGames] = useState<Game[]>([]);\n  const [selectedMatchId, setSelectedMatchId] = useState<string | null>(null);\n  const [error, setError] = useState<string>(\"\");\n  const [loading, setLoading] = useState(false);\n  const [showPlayerManager, setShowPlayerManager] = useState(false);\n  const [selectedPlayers, setSelectedPlayers] = useState<Player[]>([]);\n  const [showWinnerScreen, setShowWinnerScreen] = useState(false);\n  const [showMatchResults, setShowMatchResults] = useState(false);\n  const [selectedMatchResults, setSelectedMatchResults] =\n    useState<Match | null>(null);\n  const [showScoreCorrector, setShowScoreCorrector] = useState(false);\n  const [selectedCorrectorMatch, setSelectedCorrectorMatch] =\n    useState<Match | null>(null);\n  const [forceRefresh, setForceRefresh] = useState(0);\n  const [showDebugInfo, setShowDebugInfo] = useState(false);\n  const [editingGames, setEditingGames] = useState<{\n    [key: string]: { pair1: number; pair2: number };\n  }>({});\n  const [editingTieBreaks, setEditingTieBreaks] = useState<{\n    [key: string]: { pair1: number; pair2: number };\n  }>({});\n\n  const [showSuccessModal, setShowSuccessModal] = useState(false);\n  const [successModalData, setSuccessModalData] = useState({\n    title: \"\",\n    message: \"\",\n    icon: \"✅\",\n  });\n\n  // Cargar datos cuando se selecciona un torneo\n  useEffect(() => {\n    if (selectedTournament) {\n      loadTournamentData();\n    }\n  }, [selectedTournament?.id]);\n\n  const loadTournamentData = useCallback(async () => {\n    if (!selectedTournament) return;\n\n    try {\n      setLoading(true);\n      setError(\"\");\n      console.log(\"Loading tournament data for:\", selectedTournament.name);\n\n      const [pairsData, matchesData] = await Promise.all([\n        getPairs(selectedTournament.id),\n        getMatches(selectedTournament.id),\n      ]);\n\n      console.log(\"Pairs loaded:\", pairsData.length, \"pairs\");\n      setPairs(pairsData);\n\n      console.log(\n        \"Matches loaded from database:\",\n        matchesData.length,\n        \"matches\"\n      );\n      setMatches(matchesData);\n    } catch (err) {\n      console.error(\"Error loading tournament data:\", err);\n      setError(\n        \"Error al cargar los datos del torneo: \" + (err as Error).message\n      );\n    } finally {\n      setLoading(false);\n    }\n  }, [selectedTournament]);\n\n  const deletePair = async (pairId: string) => {\n    try {\n      setError(\"\");\n      console.log(\"Eliminando pareja:\", pairId);\n\n      await deletePairFromDB(pairId);\n      setPairs(pairs.filter((p) => p.id !== pairId));\n\n      console.log(\"Pareja eliminada exitosamente\");\n    } catch (err) {\n      console.error(\"Error eliminando pareja:\", err);\n      setError(\"Error al eliminar la pareja: \" + (err as Error).message);\n    }\n  };\n\n  const addPair = async (player1: Player, player2: Player) => {\n    if (!selectedTournament) {\n      setError(\"No hay torneo seleccionado\");\n      return;\n    }\n\n    try {\n      setError(\"\");\n\n      // Verificar duplicados en estado local\n      const existingPairLocal = pairs.find((pair) => {\n        const sameIds =\n          (pair.player1_id === player1.id && pair.player2_id === player2.id) ||\n          (pair.player1_id === player2.id && pair.player2_id === player1.id);\n\n        const sameNames =\n          (pair.player1?.name.toLowerCase() === player1.name.toLowerCase() &&\n            pair.player2?.name.toLowerCase() === player2.name.toLowerCase()) ||\n          (pair.player1?.name.toLowerCase() === player2.name.toLowerCase() &&\n            pair.player2?.name.toLowerCase() === player1.name.toLowerCase());\n\n        return sameIds || sameNames;\n      });\n\n      if (existingPairLocal) {\n        setError(\n          `La pareja ${player1.name} y ${player2.name} ya está registrada`\n        );\n        return;\n      }\n\n      const newPair = await createPair(\n        selectedTournament.id,\n        player1.id,\n        player2.id\n      );\n\n      setPairs([...pairs, newPair]);\n      setSelectedPlayers([]);\n\n      console.log(\"Pair added successfully\");\n    } catch (err) {\n      console.error(\"Error creating pair:\", err);\n      setError(\"Error al crear la pareja: \" + (err as Error).message);\n    }\n  };\n\n  const startTournament = async () => {\n    if (!selectedTournament || pairs.length < 2) {\n      setError(\"Se necesitan al menos 2 parejas para iniciar el torneo\");\n      return;\n    }\n\n    try {\n      setLoading(true);\n      setError(\"\");\n\n      console.log(\"🚀 Iniciando torneo:\", selectedTournament.name);\n\n      // Limpiar partidos existentes\n      if (matches.length > 0) {\n        await deleteMatchesByTournament(selectedTournament.id);\n        setMatches([]);\n      }\n\n      const allPairs = [...pairs];\n      const allCombinations = [];\n\n      for (let i = 0; i < allPairs.length; i++) {\n        for (let j = i + 1; j < allPairs.length; j++) {\n          allCombinations.push({\n            pair1: allPairs[i],\n            pair2: allPairs[j],\n          });\n        }\n      }\n\n      const finalMatches = [];\n      const remainingCombinations = [...allCombinations];\n      let round = 1;\n\n      while (remainingCombinations.length > 0) {\n        const roundMatches = [];\n        const usedPairs = new Set();\n        const courtOrder = [];\n\n        for (let i = 0; i < selectedTournament.courts; i++) {\n          const rotatedCourt =\n            ((round - 1 + i) % selectedTournament.courts) + 1;\n          courtOrder.push(rotatedCourt);\n        }\n\n        for (let courtIndex = 0; courtIndex < courtOrder.length; courtIndex++) {\n          const court = courtOrder[courtIndex];\n          let bestIndex = -1;\n          let bestScore = -1;\n\n          for (let i = 0; i < remainingCombinations.length; i++) {\n            const combo = remainingCombinations[i];\n\n            if (\n              !usedPairs.has(combo.pair1.id) &&\n              !usedPairs.has(combo.pair2.id)\n            ) {\n              let score = 0;\n\n              for (let j = 0; j < remainingCombinations.length; j++) {\n                if (i !== j) {\n                  const futureCombo = remainingCombinations[j];\n                  if (\n                    !usedPairs.has(futureCombo.pair1.id) &&\n                    !usedPairs.has(futureCombo.pair2.id) &&\n                    futureCombo.pair1.id !== combo.pair1.id &&\n                    futureCombo.pair1.id !== combo.pair2.id &&\n                    futureCombo.pair2.id !== combo.pair1.id &&\n                    futureCombo.pair2.id !== combo.pair2.id\n                  ) {\n                    score++;\n                  }\n                }\n              }\n\n              if (score > bestScore) {\n                bestScore = score;\n                bestIndex = i;\n              }\n            }\n          }\n\n          if (bestIndex !== -1) {\n            const combo = remainingCombinations[bestIndex];\n\n            const match = {\n              pair1: combo.pair1,\n              pair2: combo.pair2,\n              round,\n              court,\n            };\n\n            roundMatches.push(match);\n            usedPairs.add(combo.pair1.id);\n            usedPairs.add(combo.pair2.id);\n            remainingCombinations.splice(bestIndex, 1);\n          } else {\n            break;\n          }\n        }\n\n        if (roundMatches.length > 0) {\n          finalMatches.push(...roundMatches);\n        }\n\n        round++;\n      }\n\n      const createdMatches = [];\n\n      for (const match of finalMatches) {\n        try {\n          const createdMatch = await createMatch(\n            selectedTournament.id,\n            match.pair1.id,\n            match.pair2.id,\n            match.court,\n            match.round\n          );\n          createdMatches.push(createdMatch);\n        } catch (error) {\n          console.error(\"Error creating match:\", error);\n        }\n      }\n\n      await updateTournament(selectedTournament.id, { is_started: true });\n      setSelectedTournament((prev) =>\n        prev ? { ...prev, is_started: true } : null\n      );\n\n      await loadTournamentData();\n\n      setSuccessModalData({\n        title: \"¡Torneo Iniciado!\",\n        message: `Se han creado ${createdMatches.length} partidos exitosamente usando ${selectedTournament.courts} canchas. El torneo está listo para comenzar.`,\n        icon: \"🏆\",\n      });\n      setShowSuccessModal(true);\n    } catch (error) {\n      console.error(\"Error starting tournament:\", error);\n      setError(\"Error al iniciar el torneo: \" + (error as Error).message);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const addGame = async (matchId: string) => {\n    try {\n      setError(\"\");\n      const gameNumber = games.filter((g) => g.match_id === matchId).length + 1;\n\n      const newGame = await createGame(matchId, gameNumber);\n      setGames([...games, newGame]);\n    } catch (err) {\n      console.error(\"❌ Error al agregar el juego:\", err);\n      setError(\"Error al agregar el juego\");\n    }\n  };\n\n  const updateGameScore = useCallback(\n    async (gameId: string, pair1Games: number, pair2Games: number) => {\n      try {\n        setError(\"\");\n\n        setGames((prevGames) =>\n          prevGames.map((g) =>\n            g.id === gameId\n              ? { ...g, pair1_games: pair1Games, pair2_games: pair2Games }\n              : g\n          )\n        );\n\n        await updateGame(gameId, {\n          pair1_games: pair1Games,\n          pair2_games: pair2Games,\n        });\n      } catch (err) {\n        console.error(\"❌ Error al actualizar el marcador:\", err);\n        setError(\"Error al actualizar el marcador: \" + (err as Error).message);\n      }\n    },\n    [games, selectedTournament]\n  );\n\n  const handleGameScoreChange = useCallback(\n    (gameId: string, pair1Games: number, pair2Games: number) => {\n      setEditingGames((prev) => ({\n        ...prev,\n        [gameId]: { pair1: pair1Games, pair2: pair2Games },\n      }));\n    },\n    []\n  );\n\n  const handleTieBreakScoreChange = useCallback(\n    (gameId: string, pair1Points: number, pair2Points: number) => {\n      setEditingTieBreaks((prev) => ({\n        ...prev,\n        [gameId]: { pair1: pair1Points, pair2: pair2Points },\n      }));\n    },\n    []\n  );\n\n  const handleGameScoreBlur = useCallback(\n    async (gameId: string) => {\n      const editingGame = editingGames[gameId];\n      if (editingGame) {\n        await updateGameScore(gameId, editingGame.pair1, editingGame.pair2);\n        setEditingGames((prev) => {\n          const newState = { ...prev };\n          delete newState[gameId];\n          return newState;\n        });\n      }\n    },\n    [editingGames]\n  );\n\n  const handleTieBreakScoreBlur = useCallback(\n    async (gameId: string) => {\n      const editingTieBreak = editingTieBreaks[gameId];\n      if (editingTieBreak) {\n        await updateTieBreakScore(\n          gameId,\n          editingTieBreak.pair1,\n          editingTieBreak.pair2\n        );\n        setEditingTieBreaks((prev) => {\n          const newState = { ...prev };\n          delete newState[gameId];\n          return newState;\n        });\n      }\n    },\n    [editingTieBreaks]\n  );\n\n  const updateTieBreakScore = async (\n    gameId: string,\n    pair1Points: number,\n    pair2Points: number\n  ) => {\n    try {\n      setError(\"\");\n\n      setGames((prevGames) =>\n        prevGames.map((g) =>\n          g.id === gameId\n            ? {\n                ...g,\n                tie_break_pair1_points: pair1Points,\n                tie_break_pair2_points: pair2Points,\n              }\n            : g\n        )\n      );\n\n      await updateGame(gameId, {\n        tie_break_pair1_points: pair1Points,\n        tie_break_pair2_points: pair2Points,\n      });\n    } catch (err) {\n      console.error(\"❌ Error al actualizar el tie break:\", err);\n      setError(\"Error al actualizar el tie break: \" + (err as Error).message);\n    }\n  };\n\n  const toggleTieBreak = async (gameId: string) => {\n    try {\n      setError(\"\");\n      const game = games.find((g) => g.id === gameId);\n      if (!game) return;\n\n      const newIsTieBreak = !game.is_tie_break;\n\n      setGames((prevGames) =>\n        prevGames.map((g) =>\n          g.id === gameId\n            ? {\n                ...g,\n                is_tie_break: newIsTieBreak,\n                tie_break_pair1_points: 0,\n                tie_break_pair2_points: 0,\n              }\n            : g\n        )\n      );\n\n      await updateGame(gameId, {\n        is_tie_break: newIsTieBreak,\n        tie_break_pair1_points: 0,\n        tie_break_pair2_points: 0,\n      });\n    } catch (err) {\n      setError(\"Error al cambiar el tipo de juego\");\n      console.error(err);\n    }\n  };\n\n  const removeGame = async (gameId: string) => {\n    try {\n      setError(\"\");\n\n      await deleteGame(gameId);\n      setGames(games.filter((g) => g.id !== gameId));\n    } catch (err) {\n      console.error(\"❌ Error al eliminar el juego:\", err);\n      setError(\"Error al eliminar el juego: \" + (err as Error).message);\n    }\n  };\n\n  const correctGameScore = useCallback(\n    async (\n      gameId: string,\n      pair1Games: number,\n      pair2Games: number,\n      pair1TieBreakPoints: number = 0,\n      pair2TieBreakPoints: number = 0,\n      isTieBreak: boolean = false\n    ) => {\n      try {\n        setError(\"\");\n\n        setGames((prevGames) =>\n          prevGames.map((g) =>\n            g.id === gameId\n              ? {\n                  ...g,\n                  pair1_games: pair1Games,\n                  pair2_games: pair2Games,\n                  tie_break_pair1_points: pair1TieBreakPoints,\n                  tie_break_pair2_points: pair2TieBreakPoints,\n                  is_tie_break: isTieBreak,\n                  updated_at: new Date().toISOString(),\n                }\n              : g\n          )\n        );\n\n        await updateGame(gameId, {\n          pair1_games: pair1Games,\n          pair2_games: pair2Games,\n          tie_break_pair1_points: pair1TieBreakPoints,\n          tie_break_pair2_points: pair2TieBreakPoints,\n          is_tie_break: isTieBreak,\n        });\n      } catch (err) {\n        console.error(\"❌ Error al corregir el marcador:\", err);\n        setError(\"Error al corregir el marcador: \" + (err as Error).message);\n      }\n    },\n    []\n  );\n\n  const finishMatch = async (matchId: string) => {\n    try {\n      setError(\"\");\n      const match = matches.find((m) => m.id === matchId);\n      if (!match) {\n        console.error(\"Match not found:\", matchId);\n        return;\n      }\n\n      const matchGames = games.filter((g) => g.match_id === matchId);\n\n      if (!FlexibleMatchFinisher.canFinishMatch(matchGames)) {\n        setError(\n          \"No se puede finalizar el partido. Verifica que todos los juegos tengan marcadores válidos.\"\n        );\n        return;\n      }\n\n      const result = await FlexibleMatchFinisher.finishMatch(\n        match,\n        matchGames,\n        pairs,\n        async () => {\n          if (selectedTournament) {\n            const pairsData = await getPairs(selectedTournament.id);\n            setPairs(pairsData);\n            setForceRefresh((prev) => prev + 1);\n            const matchesData = await getMatches(selectedTournament.id);\n            setMatches(matchesData);\n          }\n        }\n      );\n\n      if (result.success) {\n        setMatches(\n          matches.map((m) =>\n            m.id === matchId\n              ? { ...m, winner_id: result.winnerId, is_finished: true }\n              : m\n          )\n        );\n\n        if (selectedTournament) {\n          const updatedPairsData = await getPairs(selectedTournament.id);\n          setPairs(updatedPairsData);\n          setForceRefresh((prev) => prev + 1);\n        }\n\n        alert(result.message);\n      } else {\n        setError(result.message);\n      }\n    } catch (err) {\n      setError(\"Error al finalizar el partido\");\n      console.error(err);\n    }\n  };\n\n  const handleMatchSelect = (matchId: string) => {\n    setSelectedMatchId(matchId);\n    loadMatchGames(matchId);\n  };\n\n  const loadMatchGames = async (matchId: string) => {\n    try {\n      const gamesData = await getGames(matchId);\n      setGames(gamesData);\n    } catch (err) {\n      console.error(\"❌ Error al cargar juegos:\", err);\n    }\n  };\n\n  const selectedMatch = matches.find((match) => match.id === selectedMatchId);\n\n  const matchesByRound = matches.reduce((acc, match) => {\n    if (!acc[match.round]) {\n      acc[match.round] = [];\n    }\n    acc[match.round].push(match);\n    return acc;\n  }, {} as Record<number, Match[]>);\n\n  const sortedPairs = useMemo(() => {\n    return [...pairs].sort((a, b) => {\n      if (a.sets_won !== b.sets_won) {\n        return b.sets_won - a.sets_won;\n      }\n      if (a.games_won !== b.games_won) {\n        return b.games_won - a.games_won;\n      }\n      return b.points - a.points;\n    });\n  }, [pairs, forceRefresh]);\n\n  const isTournamentFinished = useMemo(() => {\n    return matches.length > 0 && matches.every((match) => match.is_finished);\n  }, [matches]);\n\n  const winner = useMemo(() => {\n    return sortedPairs.length > 0 ? sortedPairs[0] : null;\n  }, [sortedPairs]);\n\n  const showWinnerScreenHandler = () => {\n    setShowWinnerScreen(true);\n  };\n\n  const hideWinnerScreenHandler = () => {\n    setShowWinnerScreen(false);\n  };\n\n  const showMatchResultsHandler = (match: Match) => {\n    setSelectedMatchResults(match);\n    setShowMatchResults(true);\n  };\n\n  const hideMatchResultsHandler = () => {\n    setShowMatchResults(false);\n    setSelectedMatchResults(null);\n  };\n\n  const handleViewTournamentResults = async (tournament: Tournament) => {\n    try {\n      setSelectedTournament(tournament);\n      await loadTournamentData();\n      alert(\n        `✅ Torneo \"${tournament.name}\" seleccionado\\n\\nAhora puedes ver todos los partidos y resultados en el panel derecho.`\n      );\n    } catch (err) {\n      console.error(\"❌ Error al cargar resultados del torneo:\", err);\n      alert(\"Error al cargar los resultados del torneo. Inténtalo de nuevo.\");\n    }\n  };\n\n  const recalculateMatchWinner = async (matchId: string) => {\n    try {\n      const match = matches.find((m) => m.id === matchId);\n      if (!match) {\n        console.error(\"Match not found:\", matchId);\n        return;\n      }\n\n      const matchGames = await getGames(matchId);\n\n      if (matchGames.length === 0) {\n        console.log(\"No hay juegos para recalcular\");\n        return;\n      }\n\n      let pair1Games = 0;\n      let pair2Games = 0;\n\n      matchGames.forEach((game) => {\n        if (game.is_tie_break) {\n          if (\n            game.tie_break_pair1_points >= 10 &&\n            game.tie_break_pair1_points - game.tie_break_pair2_points >= 2\n          ) {\n            pair1Games++;\n          } else if (\n            game.tie_break_pair2_points >= 10 &&\n            game.tie_break_pair2_points - game.tie_break_pair1_points >= 2\n          ) {\n            pair2Games++;\n          }\n        } else {\n          if (game.pair1_games > game.pair2_games) {\n            pair1Games++;\n          } else if (game.pair2_games > game.pair1_games) {\n            pair2Games++;\n          }\n        }\n      });\n\n      const isTie = pair1Games === pair2Games;\n      const winnerId = isTie\n        ? undefined\n        : pair1Games > pair2Games\n        ? match.pair1_id\n        : match.pair2_id;\n\n      await updateMatch(matchId, {\n        winner_id: winnerId,\n        is_finished: true,\n      });\n\n      console.log(\"✅ Ganador recalculado y actualizado en la base de datos\");\n    } catch (error) {\n      console.error(\"Error recalculating match winner:\", error);\n    }\n  };\n\n  const handleBackToHome = () => {\n    setSelectedTournament(null);\n    setPairs([]);\n    setMatches([]);\n    setGames([]);\n    setSelectedMatchId(null);\n    setError(\"\");\n    setShowWinnerScreen(false);\n    setShowMatchResults(false);\n    setSelectedMatchResults(null);\n    setShowScoreCorrector(false);\n    setSelectedCorrectorMatch(null);\n    setForceRefresh(0);\n    setShowDebugInfo(false);\n    setEditingGames({});\n    setEditingTieBreaks({});\n    setShowSuccessModal(false);\n    setSuccessModalData({\n      title: \"\",\n      message: \"\",\n      icon: \"✅\",\n    });\n  };\n\n  const openScoreCorrector = (match: Match) => {\n    setSelectedCorrectorMatch(match);\n    setShowScoreCorrector(true);\n  };\n\n  const closeScoreCorrector = () => {\n    setShowScoreCorrector(false);\n    setSelectedCorrectorMatch(null);\n  };\n\n  const handleScoreCorrectorUpdate = async () => {\n    if (selectedTournament) {\n      await loadTournamentData();\n    }\n    closeScoreCorrector();\n  };\n\n  return (\n    <div className=\"App\">\n      <div className=\"container\">\n        <h1>🏆 Gestión de Torneos Express y Retas</h1>\n\n        {error && (\n          <div className=\"error\">\n            <h4>❌ Error</h4>\n            <p>{error}</p>\n            <div className=\"error-help\">\n              <h5>💡 Ayuda:</h5>\n              <ol>\n                <li>Verifica tu conexión a internet</li>\n                <li>Intenta recargar la página</li>\n                <li>Si el problema persiste, contacta al administrador</li>\n              </ol>\n            </div>\n          </div>\n        )}\n\n        {loading && (\n          <div className=\"loading\">\n            <p>⏳ Cargando...</p>\n          </div>\n        )}\n\n        <div className=\"main-layout\">\n          <div className=\"left-panel\">\n            <TournamentManager\n              selectedTournament={selectedTournament || undefined}\n              onTournamentSelect={setSelectedTournament}\n              onViewResults={handleViewTournamentResults}\n            />\n          </div>\n\n          <div className=\"right-panel\">\n            {selectedTournament ? (\n              <>\n                <div className=\"tournament-details\">\n                  <div className=\"tournament-header\">\n                    <div className=\"tournament-header-content\">\n                      <div className=\"tournament-title-section\">\n                        <div className=\"tournament-icon\">🏆</div>\n                        <div className=\"tournament-info\">\n                          <h2>{selectedTournament.name}</h2>\n                          {selectedTournament.description && (\n                            <div className=\"tournament-description\">\n                              {selectedTournament.description}\n                            </div>\n                          )}\n                        </div>\n                      </div>\n                      <div className=\"tournament-stats-section\">\n                        <div className=\"stats-row\">\n                          <span className=\"stat-badge\">\n                            {selectedTournament.courts} canchas\n                          </span>\n                          <span className=\"stat-badge\">\n                            {pairs.length} parejas\n                          </span>\n                        </div>\n                        <div className=\"stats-row\">\n                          <span className=\"stat-badge\">\n                            {matches.length} partidos\n                          </span>\n                          <span\n                            className={`status-badge ${\n                              selectedTournament.is_started\n                                ? \"started\"\n                                : \"pending\"\n                            }`}\n                          >\n                            {selectedTournament.is_started\n                              ? \"En Progreso\"\n                              : \"Pendiente\"}\n                          </span>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n\n                  {/* Gestión de Jugadores - MOVIDA AQUÍ */}\n                  <div className=\"player-management-section\">\n                    <div className=\"player-management-header\">\n                      <h3>👥 Gestión de Jugadores</h3>\n                      <button\n                        className=\"toggle-player-manager-btn\"\n                        onClick={() => setShowPlayerManager(!showPlayerManager)}\n                      >\n                        {showPlayerManager\n                          ? \"👥 Ocultar Gestión de Jugadores\"\n                          : \"👥 Mostrar Gestión de Jugadores\"}\n                      </button>\n                    </div>\n\n                    {showPlayerManager && (\n                      <div className=\"player-manager-container\">\n                        <PlayerManager\n                          playersInPairs={pairs.flatMap((pair) => [\n                            pair.player1_id,\n                            pair.player2_id,\n                          ])}\n                          onPlayerSelect={(players) => {\n                            console.log(\"=== SELECCIÓN DE JUGADORES ===\");\n                            console.log(\"Players selected:\", players.length);\n                            players.forEach((player, index) => {\n                              console.log(\n                                `Player ${index + 1}:`,\n                                player.name,\n                                \"(ID:\",\n                                player.id + \")\"\n                              );\n                            });\n\n                            // Validación: Verificar si algún jugador ya está en una pareja\n                            const playersInPairs = players.filter((player) => {\n                              const isInPair = pairs.some(\n                                (pair) =>\n                                  pair.player1_id === player.id ||\n                                  pair.player2_id === player.id\n                              );\n\n                              if (isInPair) {\n                                const existingPair = pairs.find(\n                                  (pair) =>\n                                    pair.player1_id === player.id ||\n                                    pair.player2_id === player.id\n                                );\n                                console.log(\n                                  `🚨 JUGADOR YA EN PAREJA: ${\n                                    player.name\n                                  } está en pareja con ${\n                                    existingPair?.player1?.id === player.id\n                                      ? existingPair?.player2?.name\n                                      : existingPair?.player1?.name\n                                  }`\n                                );\n                              }\n\n                              return isInPair;\n                            });\n\n                            if (playersInPairs.length > 0) {\n                              const playerNames = playersInPairs\n                                .map((p) => p.name)\n                                .join(\", \");\n                              console.log(\n                                \"🚨 ERROR: Jugadores ya están en parejas:\",\n                                playerNames\n                              );\n                              setError(\n                                `Los jugadores ${playerNames} ya están en parejas existentes. Debes eliminar sus parejas actuales antes de poder seleccionarlos nuevamente.`\n                              );\n                              return;\n                            }\n\n                            // Validación: No permitir jugadores con nombres iguales\n                            if (players.length === 2) {\n                              const player1 = players[0];\n                              const player2 = players[1];\n\n                              if (\n                                player1.name.toLowerCase() ===\n                                player2.name.toLowerCase()\n                              ) {\n                                console.log(\n                                  \"🚨 ERROR: Jugadores con nombres iguales detectados\"\n                                );\n                                console.log(\n                                  \"Player 1:\",\n                                  player1.name,\n                                  \"(ID:\",\n                                  player1.id + \")\"\n                                );\n                                console.log(\n                                  \"Player 2:\",\n                                  player2.name,\n                                  \"(ID:\",\n                                  player2.id + \")\"\n                                );\n                                setError(\n                                  \"No puedes seleccionar dos jugadores con el mismo nombre\"\n                                );\n                                return;\n                              }\n\n                              // Validación: Verificar si ya existe una pareja con estos jugadores\n                              const existingPair = pairs.find((pair) => {\n                                const sameIds =\n                                  (pair.player1_id === player1.id &&\n                                    pair.player2_id === player2.id) ||\n                                  (pair.player1_id === player2.id &&\n                                    pair.player2_id === player1.id);\n\n                                const sameNames =\n                                  (pair.player1?.name.toLowerCase() ===\n                                    player1.name.toLowerCase() &&\n                                    pair.player2?.name.toLowerCase() ===\n                                      player2.name.toLowerCase()) ||\n                                  (pair.player1?.name.toLowerCase() ===\n                                    player2.name.toLowerCase() &&\n                                    pair.player2?.name.toLowerCase() ===\n                                      player1.name.toLowerCase());\n\n                                if (sameIds || sameNames) {\n                                  console.log(\n                                    \"🚨 PAREJA DUPLICADA DETECTADA:\",\n                                    player1.name,\n                                    \"+\",\n                                    player2.name\n                                  );\n                                  console.log(\"Existing pair:\", existingPair);\n                                }\n\n                                return sameIds || sameNames;\n                              });\n\n                              if (existingPair) {\n                                console.log(\n                                  \"🚨 ERROR: Pareja ya existe en la base de datos\"\n                                );\n                                setError(\n                                  `La pareja ${player1.name} + ${player2.name} ya existe en el torneo`\n                                );\n                                return;\n                              }\n\n                              // Si llegamos aquí, la pareja es válida\n                              console.log(\n                                \"✅ PAREJA VÁLIDA:\",\n                                player1.name,\n                                \"+\",\n                                player2.name\n                              );\n                              addPair(player1, player2);\n                              setSelectedPlayers([]); // Limpiar selección después de crear la pareja\n                            } else {\n                              setSelectedPlayers(players);\n                            }\n                          }}\n                          selectedPlayers={selectedPlayers}\n                          allowMultipleSelection={true}\n                        />\n                      </div>\n                    )}\n                  </div>\n\n                  {!selectedTournament.is_started && (\n                    <div className=\"start-tournament-section\">\n                      <h3>🚀 Iniciar Torneo</h3>\n                      <div className=\"tournament-info\">\n                        <p>Tienes {pairs.length} parejas registradas</p>\n                        <p>\n                          Se crearán {(pairs.length * (pairs.length - 1)) / 2}{\" \"}\n                          partidos (round-robin completo - todas las parejas se\n                          enfrentan)\n                        </p>\n                        <p>\n                          Estado del torneo:{\" \"}\n                          {selectedTournament.is_started\n                            ? \"Iniciado\"\n                            : \"Pendiente\"}\n                        </p>\n                      </div>\n                      <button\n                        className=\"start-button\"\n                        onClick={startTournament}\n                        disabled={loading || pairs.length < 2}\n                      >\n                        {loading\n                          ? \"⏳ Iniciando...\"\n                          : selectedTournament.is_started\n                          ? \"🏆 Torneo Ya Iniciado\"\n                          : pairs.length < 2\n                          ? \"❌ Necesitas al menos 2 parejas\"\n                          : \"🚀 ¡Iniciar Torneo!\"}\n                      </button>\n                    </div>\n                  )}\n\n                  {/* Debug info - COLAPSIBLE */}\n                  {selectedTournament && (\n                    <div className=\"debug-section\">\n                      <button\n                        className=\"debug-toggle-btn\"\n                        onClick={() => setShowDebugInfo(!showDebugInfo)}\n                      >\n                        {showDebugInfo ? \"🔽\" : \"🔼\"} Debug Info\n                      </button>\n\n                      {showDebugInfo && (\n                        <div className=\"debug-info\">\n                          <div className=\"debug-header\">\n                            <h4>🔧 Información de Debug</h4>\n                            <div className=\"debug-stats\">\n                              <span>\n                                Estado:{\" \"}\n                                {selectedTournament.is_started\n                                  ? \"✅ Iniciado\"\n                                  : \"⏳ Pendiente\"}\n                              </span>\n                              <span>Parejas: {pairs.length}</span>\n                              <span>Partidos: {matches.length}</span>\n                            </div>\n                          </div>\n\n                          <div className=\"debug-buttons\">\n                            <button\n                              onClick={async () => {\n                                console.log(\"=== PROBAR CONEXIÓN ===\");\n                                const isConnected = await testConnection();\n                                if (isConnected) {\n                                  setError(\"\");\n                                } else {\n                                  setError(\n                                    \"❌ Error de conexión a Supabase. Verifica tu configuración.\"\n                                  );\n                                }\n                              }}\n                              className=\"debug-btn connection-btn\"\n                            >\n                              🔌 Probar Conexión\n                            </button>\n\n                            <button\n                              onClick={() => {\n                                console.log(\n                                  \"=== FORZANDO RECARGA DE DATOS ===\"\n                                );\n                                loadTournamentData();\n                              }}\n                              className=\"debug-btn reload-btn\"\n                            >\n                              🔄 Recargar Datos\n                            </button>\n\n                            <button\n                              onClick={async () => {\n                                console.log(\n                                  \"=== VERIFICANDO ESTADO DEL TORNEO ===\"\n                                );\n                                try {\n                                  console.log(\n                                    \"Estado actual del torneo:\",\n                                    selectedTournament\n                                  );\n                                  console.log(\n                                    \"Parejas en estado:\",\n                                    pairs.length\n                                  );\n                                  console.log(\n                                    \"Partidos en estado:\",\n                                    matches.length\n                                  );\n\n                                  const dbPairs = await getPairs(\n                                    selectedTournament.id\n                                  );\n                                  const dbMatches = await getMatches(\n                                    selectedTournament.id\n                                  );\n\n                                  console.log(\"Parejas en BD:\", dbPairs.length);\n                                  console.log(\n                                    \"Partidos en BD:\",\n                                    dbMatches.length\n                                  );\n\n                                  alert(\n                                    `Estado del torneo:\\n\\nParejas: ${\n                                      pairs.length\n                                    } (estado) / ${\n                                      dbPairs.length\n                                    } (BD)\\nPartidos: ${\n                                      matches.length\n                                    } (estado) / ${\n                                      dbMatches.length\n                                    } (BD)\\n\\nTorneo iniciado: ${\n                                      selectedTournament.is_started\n                                        ? \"Sí\"\n                                        : \"No\"\n                                    }`\n                                  );\n                                } catch (error) {\n                                  console.error(\n                                    \"Error verificando estado:\",\n                                    error\n                                  );\n                                }\n                              }}\n                              className=\"debug-btn status-btn\"\n                            >\n                              🔍 Verificar Estado\n                            </button>\n                          </div>\n                        </div>\n                      )}\n                    </div>\n                  )}\n\n                  {/* Mostrar parejas creadas */}\n                  {pairs.length > 0 && (\n                    <div className=\"pairs-display\">\n                      <h3>👥 Parejas Registradas ({pairs.length})</h3>\n                      <div className=\"pairs-grid\">\n                        {pairs.map((pair, index) => (\n                          <div key={pair.id} className=\"pair-display-card\">\n                            <div className=\"pair-number\">#{index + 1}</div>\n                            <div className=\"pair-names\">\n                              {pair.player1?.name} y {pair.player2?.name}\n                            </div>\n                            <div className=\"pair-stats\">\n                              <span>Sets: {pair.sets_won}</span>\n                              <span>Partidos: {pair.matches_played}</span>\n                              <span>Puntos: {pair.points}</span>\n                            </div>\n                            <button\n                              onClick={() => {\n                                if (\n                                  window.confirm(\n                                    `¿Estás seguro de que quieres eliminar la pareja \"${pair.player1?.name} y ${pair.player2?.name}\"?`\n                                  )\n                                ) {\n                                  deletePair(pair.id);\n                                }\n                              }}\n                              className=\"delete-pair-btn\"\n                              title=\"Eliminar pareja\"\n                            >\n                              🗑️\n                            </button>\n                          </div>\n                        ))}\n                      </div>\n                    </div>\n                  )}\n\n                  {selectedTournament.is_started && (\n                    <div className=\"tournament-content\">\n                      {/* Lista de partidos */}\n                      <div className=\"matches-section\">\n                        <h3>🎾 Partidos ({matches.length} total)</h3>\n                        {matches.length === 0 ? (\n                          <div className=\"no-matches\">\n                            <p>📝 No hay partidos programados aún</p>\n                            <p>\n                              Inicia el torneo para generar los partidos\n                              automáticamente\n                            </p>\n                          </div>\n                        ) : (\n                          Object.entries(matchesByRound).map(\n                            ([round, roundMatches]) => (\n                              <div key={round} className=\"round-section\">\n                                <h4>\n                                  🔄 Ronda {round} ({roundMatches.length}{\" \"}\n                                  partidos)\n                                </h4>\n                                <div className=\"matches-container\">\n                                  {roundMatches.map((match) => (\n                                    <div\n                                      key={match.id}\n                                      className={`match-card ${\n                                        selectedMatchId === match.id\n                                          ? \"selected\"\n                                          : \"\"\n                                      }`}\n                                      onClick={() =>\n                                        handleMatchSelect(match.id)\n                                      }\n                                    >\n                                      <div className=\"match-header\">\n                                        <h5>\n                                          {match.pair1?.player1?.name} y{\" \"}\n                                          {match.pair1?.player2?.name} vs{\" \"}\n                                          {match.pair2?.player1?.name} y{\" \"}\n                                          {match.pair2?.player2?.name}\n                                        </h5>\n                                        <div className=\"match-info\">\n                                          <span className=\"court-badge\">\n                                            🏟️ Cancha {match.court}\n                                          </span>\n                                          <span className=\"round-badge\">\n                                            🔄 Ronda {match.round}\n                                          </span>\n                                        </div>\n                                      </div>\n                                      <div className=\"match-details\">\n                                        <p className=\"match-pairs\">\n                                          <strong>Pareja 1:</strong>{\" \"}\n                                          {match.pair1?.player1?.name} y{\" \"}\n                                          {match.pair1?.player2?.name}\n                                        </p>\n                                        <p className=\"match-pairs\">\n                                          <strong>Pareja 2:</strong>{\" \"}\n                                          {match.pair2?.player1?.name} y{\" \"}\n                                          {match.pair2?.player2?.name}\n                                        </p>\n                                      </div>\n                                      {match.winner_id && (\n                                        <div className=\"winner\">\n                                          <span className=\"winner-icon\">\n                                            🏆\n                                          </span>\n                                          Ganador:{\" \"}\n                                          {match.winner_id === match.pair1_id\n                                            ? `${match.pair1?.player1?.name} y ${match.pair1?.player2?.name}`\n                                            : `${match.pair2?.player1?.name} y ${match.pair2?.player2?.name}`}\n                                        </div>\n                                      )}\n                                      {match.is_finished &&\n                                        !match.winner_id && (\n                                          <div className=\"winner\">\n                                            <span className=\"winner-icon\">\n                                              🤝\n                                            </span>\n                                            Empate: {match.pair1?.player1?.name}{\" \"}\n                                            y {match.pair1?.player2?.name} vs{\" \"}\n                                            {match.pair2?.player1?.name} y{\" \"}\n                                            {match.pair2?.player2?.name}\n                                          </div>\n                                        )}\n                                      <div className=\"match-status\">\n                                        {match.is_finished ? (\n                                          <span className=\"status-finished\">\n                                            ✔ Finalizado\n                                          </span>\n                                        ) : (\n                                          <span className=\"status-pending\">\n                                            ⏳ Pendiente\n                                          </span>\n                                        )}\n                                      </div>\n                                      <div className=\"match-actions\">\n                                        <button\n                                          onClick={(e) => {\n                                            e.stopPropagation();\n                                            showMatchResultsHandler(match);\n                                          }}\n                                          className=\"view-results-btn\"\n                                        >\n                                          📊 Ver Resultados\n                                        </button>\n                                        <button\n                                          onClick={(e) => {\n                                            e.stopPropagation();\n                                            openScoreCorrector(match);\n                                          }}\n                                          className=\"correct-result-btn\"\n                                        >\n                                          ✏️ Corregir Marcador\n                                        </button>\n                                      </div>\n                                    </div>\n                                  ))}\n                                </div>\n                              </div>\n                            )\n                          )\n                        )}\n                      </div>\n\n                      {/* Detalles del partido seleccionado */}\n                      {selectedMatch && (\n                        <div className=\"match-management\">\n                          <MatchStatusDisplay\n                            match={selectedMatch}\n                            games={games.filter(\n                              (g) => g.match_id === selectedMatch.id\n                            )}\n                            pairs={pairs}\n                          />\n                        </div>\n                      )}\n\n                      {/* Tabla de clasificación */}\n                      <StandingsTable\n                        tournamentId={selectedTournament.id}\n                        forceRefresh={forceRefresh}\n                      />\n\n                      {/* Botón para mostrar ganador */}\n                      {isTournamentFinished && winner && (\n                        <div className=\"winner-button-container\">\n                          <button\n                            className=\"show-winner-button\"\n                            onClick={showWinnerScreenHandler}\n                          >\n                            🏆 ¡Ver Ganador!\n                          </button>\n                        </div>\n                      )}\n\n                      {/* Botón para volver al inicio */}\n                      <div className=\"back-home-button-container\">\n                        <button\n                          className=\"back-home-button\"\n                          onClick={handleBackToHome}\n                        >\n                          🏠 Volver al Inicio\n                        </button>\n                      </div>\n                    </div>\n                  )}\n                </div>\n              </>\n            ) : (\n              <div className=\"no-tournament-selected\">\n                <h2>🏆 Bienvenido al Gestor de Torneos</h2>\n                <p>\n                  Selecciona un torneo del panel izquierdo para comenzar a\n                  gestionar partidos y resultados.\n                </p>\n              </div>\n            )}\n          </div>\n        </div>\n\n        {/* Pantalla de ganador */}\n        {showWinnerScreen && winner && (\n          <div className=\"winner-screen\">\n            <div className=\"winner-content\">\n              <div className=\"winner-celebration\">\n                <h1 className=\"winner-title\">🏆 ¡FELICIDADES! 🏆</h1>\n                <div className=\"winner-names\">\n                  {winner.player1?.name} y {winner.player2?.name}\n                </div>\n                <div className=\"winner-subtitle\">\n                  ¡Son los campeones del torneo!\n                </div>\n                <div className=\"winner-stats\">\n                  <div className=\"stat-item\">\n                    <span className=\"stat-number\">{winner.sets_won}</span>\n                    <span className=\"stat-label\">Sets Ganados</span>\n                  </div>\n                  <div className=\"stat-item\">\n                    <span className=\"stat-number\">{winner.games_won}</span>\n                    <span className=\"stat-label\">Partidos Ganados</span>\n                  </div>\n                  <div className=\"stat-item\">\n                    <span className=\"stat-number\">{winner.points}</span>\n                    <span className=\"stat-label\">Puntos Totales</span>\n                  </div>\n                </div>\n                <button\n                  className=\"back-button\"\n                  onClick={hideWinnerScreenHandler}\n                >\n                  🏠 Volver al Torneo\n                </button>\n              </div>\n            </div>\n          </div>\n        )}\n\n        {/* Modal de resultados de partido */}\n        {showMatchResults && selectedMatchResults && (\n          <MatchResults\n            match={selectedMatchResults}\n            isOpen={showMatchResults}\n            onClose={hideMatchResultsHandler}\n          />\n        )}\n\n        {/* Modal de corrección de marcador */}\n        {showScoreCorrector && selectedCorrectorMatch && (\n          <ScoreCorrector\n            match={selectedCorrectorMatch}\n            onClose={closeScoreCorrector}\n            onUpdate={handleScoreCorrectorUpdate}\n          />\n        )}\n\n        {/* Modal de éxito */}\n        {showSuccessModal && (\n          <SuccessModal\n            title={successModalData.title}\n            message={successModalData.message}\n            icon={successModalData.icon}\n            isOpen={showSuccessModal}\n            onClose={() => setShowSuccessModal(false)}\n          />\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}