{"ast":null,"code":"var _jsxFileName = \"/Users/nedev/padel-tournament-app/src/App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback, useMemo } from \"react\";\nimport \"./App.css\";\nimport { TournamentManager } from \"./components/TournamentManager\";\nimport { PlayerManager } from \"./components/PlayerManager\";\nimport ScoreCorrector from \"./components/ScoreCorrector\";\nimport StandingsTable from \"./components/StandingsTable\";\nimport { SuccessModal } from \"./components/SuccessModal\";\nimport MatchResults from \"./components/MatchResults\";\nimport { createPair, getPairs, deletePair as deletePairFromDB, createMatch, getMatches, updateMatch, deleteMatchesByTournament, createGame, getGames, updateGame, deleteGame, updateTournament } from \"./lib/database\";\nimport { testConnection } from \"./lib/supabaseClient\";\nimport { FlexibleMatchFinisher } from \"./components/FlexibleMatchFinisher\";\nimport MatchStatusDisplay from \"./components/MatchStatusDisplay\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  var _winner$player, _winner$player2;\n  const [selectedTournament, setSelectedTournament] = useState(null);\n  const [pairs, setPairs] = useState([]);\n  const [matches, setMatches] = useState([]);\n  const [games, setGames] = useState([]);\n  const [selectedMatchId, setSelectedMatchId] = useState(null);\n  const [error, setError] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [showPlayerManager, setShowPlayerManager] = useState(false);\n  const [selectedPlayers, setSelectedPlayers] = useState([]);\n  const [showWinnerScreen, setShowWinnerScreen] = useState(false);\n  const [showMatchResults, setShowMatchResults] = useState(false);\n  const [selectedMatchResults, setSelectedMatchResults] = useState(null);\n  const [showScoreCorrector, setShowScoreCorrector] = useState(false);\n  const [selectedCorrectorMatch, setSelectedCorrectorMatch] = useState(null);\n  const [forceRefresh, setForceRefresh] = useState(0);\n  const [showDebugInfo, setShowDebugInfo] = useState(false);\n  const [editingGames, setEditingGames] = useState({});\n  const [editingTieBreaks, setEditingTieBreaks] = useState({});\n  const [showSuccessModal, setShowSuccessModal] = useState(false);\n  const [successModalData, setSuccessModalData] = useState({\n    title: \"\",\n    message: \"\",\n    icon: \"✅\"\n  });\n\n  // Cargar datos cuando se selecciona un torneo\n  useEffect(() => {\n    if (selectedTournament) {\n      loadTournamentData();\n    }\n  }, [selectedTournament === null || selectedTournament === void 0 ? void 0 : selectedTournament.id]);\n  const loadTournamentData = useCallback(async () => {\n    if (!selectedTournament) return;\n    try {\n      setLoading(true);\n      setError(\"\");\n      console.log(\"Loading tournament data for:\", selectedTournament.name);\n      const [pairsData, matchesData] = await Promise.all([getPairs(selectedTournament.id), getMatches(selectedTournament.id)]);\n      console.log(\"Pairs loaded:\", pairsData.length, \"pairs\");\n      setPairs(pairsData);\n      console.log(\"Matches loaded from database:\", matchesData.length, \"matches\");\n      setMatches(matchesData);\n    } catch (err) {\n      console.error(\"Error loading tournament data:\", err);\n      setError(\"Error al cargar los datos del torneo: \" + err.message);\n    } finally {\n      setLoading(false);\n    }\n  }, [selectedTournament]);\n  const deletePair = async pairId => {\n    try {\n      setError(\"\");\n      console.log(\"Eliminando pareja:\", pairId);\n      await deletePairFromDB(pairId);\n      setPairs(pairs.filter(p => p.id !== pairId));\n      console.log(\"Pareja eliminada exitosamente\");\n    } catch (err) {\n      console.error(\"Error eliminando pareja:\", err);\n      setError(\"Error al eliminar la pareja: \" + err.message);\n    }\n  };\n  const addPair = async (player1, player2) => {\n    if (!selectedTournament) {\n      setError(\"No hay torneo seleccionado\");\n      return;\n    }\n    try {\n      setError(\"\");\n\n      // Verificar duplicados en estado local\n      const existingPairLocal = pairs.find(pair => {\n        var _pair$player, _pair$player2, _pair$player3, _pair$player4;\n        const sameIds = pair.player1_id === player1.id && pair.player2_id === player2.id || pair.player1_id === player2.id && pair.player2_id === player1.id;\n        const sameNames = ((_pair$player = pair.player1) === null || _pair$player === void 0 ? void 0 : _pair$player.name.toLowerCase()) === player1.name.toLowerCase() && ((_pair$player2 = pair.player2) === null || _pair$player2 === void 0 ? void 0 : _pair$player2.name.toLowerCase()) === player2.name.toLowerCase() || ((_pair$player3 = pair.player1) === null || _pair$player3 === void 0 ? void 0 : _pair$player3.name.toLowerCase()) === player2.name.toLowerCase() && ((_pair$player4 = pair.player2) === null || _pair$player4 === void 0 ? void 0 : _pair$player4.name.toLowerCase()) === player1.name.toLowerCase();\n        return sameIds || sameNames;\n      });\n      if (existingPairLocal) {\n        setError(`La pareja ${player1.name} y ${player2.name} ya está registrada`);\n        return;\n      }\n      const newPair = await createPair(selectedTournament.id, player1.id, player2.id);\n      setPairs([...pairs, newPair]);\n      setSelectedPlayers([]);\n      console.log(\"Pair added successfully\");\n    } catch (err) {\n      console.error(\"Error creating pair:\", err);\n      setError(\"Error al crear la pareja: \" + err.message);\n    }\n  };\n  const startTournament = async () => {\n    if (!selectedTournament || pairs.length < 2) {\n      setError(\"Se necesitan al menos 2 parejas para iniciar el torneo\");\n      return;\n    }\n    try {\n      setLoading(true);\n      setError(\"\");\n      console.log(\"🚀 Iniciando torneo:\", selectedTournament.name);\n\n      // Limpiar partidos existentes\n      if (matches.length > 0) {\n        await deleteMatchesByTournament(selectedTournament.id);\n        setMatches([]);\n      }\n      const allPairs = [...pairs];\n      const allCombinations = [];\n      for (let i = 0; i < allPairs.length; i++) {\n        for (let j = i + 1; j < allPairs.length; j++) {\n          allCombinations.push({\n            pair1: allPairs[i],\n            pair2: allPairs[j]\n          });\n        }\n      }\n      const finalMatches = [];\n      const remainingCombinations = [...allCombinations];\n      let round = 1;\n      while (remainingCombinations.length > 0) {\n        const roundMatches = [];\n        const usedPairs = new Set();\n        const courtOrder = [];\n        for (let i = 0; i < selectedTournament.courts; i++) {\n          const rotatedCourt = (round - 1 + i) % selectedTournament.courts + 1;\n          courtOrder.push(rotatedCourt);\n        }\n        for (let courtIndex = 0; courtIndex < courtOrder.length; courtIndex++) {\n          const court = courtOrder[courtIndex];\n          let bestIndex = -1;\n          let bestScore = -1;\n          for (let i = 0; i < remainingCombinations.length; i++) {\n            const combo = remainingCombinations[i];\n            if (!usedPairs.has(combo.pair1.id) && !usedPairs.has(combo.pair2.id)) {\n              let score = 0;\n              for (let j = 0; j < remainingCombinations.length; j++) {\n                if (i !== j) {\n                  const futureCombo = remainingCombinations[j];\n                  if (!usedPairs.has(futureCombo.pair1.id) && !usedPairs.has(futureCombo.pair2.id) && futureCombo.pair1.id !== combo.pair1.id && futureCombo.pair1.id !== combo.pair2.id && futureCombo.pair2.id !== combo.pair1.id && futureCombo.pair2.id !== combo.pair2.id) {\n                    score++;\n                  }\n                }\n              }\n              if (score > bestScore) {\n                bestScore = score;\n                bestIndex = i;\n              }\n            }\n          }\n          if (bestIndex !== -1) {\n            const combo = remainingCombinations[bestIndex];\n            const match = {\n              pair1: combo.pair1,\n              pair2: combo.pair2,\n              round,\n              court\n            };\n            roundMatches.push(match);\n            usedPairs.add(combo.pair1.id);\n            usedPairs.add(combo.pair2.id);\n            remainingCombinations.splice(bestIndex, 1);\n          } else {\n            break;\n          }\n        }\n        if (roundMatches.length > 0) {\n          finalMatches.push(...roundMatches);\n        }\n        round++;\n      }\n      const createdMatches = [];\n      for (const match of finalMatches) {\n        try {\n          const createdMatch = await createMatch(selectedTournament.id, match.pair1.id, match.pair2.id, match.court, match.round);\n          createdMatches.push(createdMatch);\n        } catch (error) {\n          console.error(\"Error creating match:\", error);\n        }\n      }\n      await updateTournament(selectedTournament.id, {\n        is_started: true\n      });\n      setSelectedTournament(prev => prev ? {\n        ...prev,\n        is_started: true\n      } : null);\n      await loadTournamentData();\n      setSuccessModalData({\n        title: \"¡Torneo Iniciado!\",\n        message: `Se han creado ${createdMatches.length} partidos exitosamente usando ${selectedTournament.courts} canchas. El torneo está listo para comenzar.`,\n        icon: \"🏆\"\n      });\n      setShowSuccessModal(true);\n    } catch (error) {\n      console.error(\"Error starting tournament:\", error);\n      setError(\"Error al iniciar el torneo: \" + error.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const addGame = async matchId => {\n    try {\n      setError(\"\");\n      const gameNumber = games.filter(g => g.match_id === matchId).length + 1;\n      const newGame = await createGame(matchId, gameNumber);\n      setGames([...games, newGame]);\n    } catch (err) {\n      console.error(\"❌ Error al agregar el juego:\", err);\n      setError(\"Error al agregar el juego\");\n    }\n  };\n  const updateGameScore = useCallback(async (gameId, pair1Games, pair2Games) => {\n    try {\n      setError(\"\");\n      setGames(prevGames => prevGames.map(g => g.id === gameId ? {\n        ...g,\n        pair1_games: pair1Games,\n        pair2_games: pair2Games\n      } : g));\n      await updateGame(gameId, {\n        pair1_games: pair1Games,\n        pair2_games: pair2Games\n      });\n    } catch (err) {\n      console.error(\"❌ Error al actualizar el marcador:\", err);\n      setError(\"Error al actualizar el marcador: \" + err.message);\n    }\n  }, [games, selectedTournament]);\n  const handleGameScoreChange = useCallback((gameId, pair1Games, pair2Games) => {\n    setEditingGames(prev => ({\n      ...prev,\n      [gameId]: {\n        pair1: pair1Games,\n        pair2: pair2Games\n      }\n    }));\n  }, []);\n  const handleTieBreakScoreChange = useCallback((gameId, pair1Points, pair2Points) => {\n    setEditingTieBreaks(prev => ({\n      ...prev,\n      [gameId]: {\n        pair1: pair1Points,\n        pair2: pair2Points\n      }\n    }));\n  }, []);\n  const handleGameScoreBlur = useCallback(async gameId => {\n    const editingGame = editingGames[gameId];\n    if (editingGame) {\n      await updateGameScore(gameId, editingGame.pair1, editingGame.pair2);\n      setEditingGames(prev => {\n        const newState = {\n          ...prev\n        };\n        delete newState[gameId];\n        return newState;\n      });\n    }\n  }, [editingGames]);\n  const handleTieBreakScoreBlur = useCallback(async gameId => {\n    const editingTieBreak = editingTieBreaks[gameId];\n    if (editingTieBreak) {\n      await updateTieBreakScore(gameId, editingTieBreak.pair1, editingTieBreak.pair2);\n      setEditingTieBreaks(prev => {\n        const newState = {\n          ...prev\n        };\n        delete newState[gameId];\n        return newState;\n      });\n    }\n  }, [editingTieBreaks]);\n  const updateTieBreakScore = async (gameId, pair1Points, pair2Points) => {\n    try {\n      setError(\"\");\n      setGames(prevGames => prevGames.map(g => g.id === gameId ? {\n        ...g,\n        tie_break_pair1_points: pair1Points,\n        tie_break_pair2_points: pair2Points\n      } : g));\n      await updateGame(gameId, {\n        tie_break_pair1_points: pair1Points,\n        tie_break_pair2_points: pair2Points\n      });\n    } catch (err) {\n      console.error(\"❌ Error al actualizar el tie break:\", err);\n      setError(\"Error al actualizar el tie break: \" + err.message);\n    }\n  };\n  const toggleTieBreak = async gameId => {\n    try {\n      setError(\"\");\n      const game = games.find(g => g.id === gameId);\n      if (!game) return;\n      const newIsTieBreak = !game.is_tie_break;\n      setGames(prevGames => prevGames.map(g => g.id === gameId ? {\n        ...g,\n        is_tie_break: newIsTieBreak,\n        tie_break_pair1_points: 0,\n        tie_break_pair2_points: 0\n      } : g));\n      await updateGame(gameId, {\n        is_tie_break: newIsTieBreak,\n        tie_break_pair1_points: 0,\n        tie_break_pair2_points: 0\n      });\n    } catch (err) {\n      setError(\"Error al cambiar el tipo de juego\");\n      console.error(err);\n    }\n  };\n  const removeGame = async gameId => {\n    try {\n      setError(\"\");\n      await deleteGame(gameId);\n      setGames(games.filter(g => g.id !== gameId));\n    } catch (err) {\n      console.error(\"❌ Error al eliminar el juego:\", err);\n      setError(\"Error al eliminar el juego: \" + err.message);\n    }\n  };\n  const correctGameScore = useCallback(async (gameId, pair1Games, pair2Games, pair1TieBreakPoints = 0, pair2TieBreakPoints = 0, isTieBreak = false) => {\n    try {\n      setError(\"\");\n      setGames(prevGames => prevGames.map(g => g.id === gameId ? {\n        ...g,\n        pair1_games: pair1Games,\n        pair2_games: pair2Games,\n        tie_break_pair1_points: pair1TieBreakPoints,\n        tie_break_pair2_points: pair2TieBreakPoints,\n        is_tie_break: isTieBreak,\n        updated_at: new Date().toISOString()\n      } : g));\n      await updateGame(gameId, {\n        pair1_games: pair1Games,\n        pair2_games: pair2Games,\n        tie_break_pair1_points: pair1TieBreakPoints,\n        tie_break_pair2_points: pair2TieBreakPoints,\n        is_tie_break: isTieBreak\n      });\n    } catch (err) {\n      console.error(\"❌ Error al corregir el marcador:\", err);\n      setError(\"Error al corregir el marcador: \" + err.message);\n    }\n  }, []);\n  const finishMatch = async matchId => {\n    try {\n      setError(\"\");\n      const match = matches.find(m => m.id === matchId);\n      if (!match) {\n        console.error(\"Match not found:\", matchId);\n        return;\n      }\n      const matchGames = games.filter(g => g.match_id === matchId);\n      if (!FlexibleMatchFinisher.canFinishMatch(matchGames)) {\n        setError(\"No se puede finalizar el partido. Verifica que todos los juegos tengan marcadores válidos.\");\n        return;\n      }\n      const result = await FlexibleMatchFinisher.finishMatch(match, matchGames, pairs, async () => {\n        if (selectedTournament) {\n          const pairsData = await getPairs(selectedTournament.id);\n          setPairs(pairsData);\n          setForceRefresh(prev => prev + 1);\n          const matchesData = await getMatches(selectedTournament.id);\n          setMatches(matchesData);\n        }\n      });\n      if (result.success) {\n        setMatches(matches.map(m => m.id === matchId ? {\n          ...m,\n          winner_id: result.winnerId,\n          is_finished: true\n        } : m));\n        if (selectedTournament) {\n          const updatedPairsData = await getPairs(selectedTournament.id);\n          setPairs(updatedPairsData);\n          setForceRefresh(prev => prev + 1);\n        }\n        alert(result.message);\n      } else {\n        setError(result.message);\n      }\n    } catch (err) {\n      setError(\"Error al finalizar el partido\");\n      console.error(err);\n    }\n  };\n  const handleMatchSelect = matchId => {\n    setSelectedMatchId(matchId);\n    loadMatchGames(matchId);\n  };\n  const loadMatchGames = async matchId => {\n    try {\n      const gamesData = await getGames(matchId);\n      setGames(gamesData);\n    } catch (err) {\n      console.error(\"❌ Error al cargar juegos:\", err);\n    }\n  };\n  const selectedMatch = matches.find(match => match.id === selectedMatchId);\n  const matchesByRound = matches.reduce((acc, match) => {\n    if (!acc[match.round]) {\n      acc[match.round] = [];\n    }\n    acc[match.round].push(match);\n    return acc;\n  }, {});\n  const sortedPairs = useMemo(() => {\n    return [...pairs].sort((a, b) => {\n      if (a.sets_won !== b.sets_won) {\n        return b.sets_won - a.sets_won;\n      }\n      if (a.games_won !== b.games_won) {\n        return b.games_won - a.games_won;\n      }\n      return b.points - a.points;\n    });\n  }, [pairs, forceRefresh]);\n  const isTournamentFinished = useMemo(() => {\n    return matches.length > 0 && matches.every(match => match.is_finished);\n  }, [matches]);\n  const winner = useMemo(() => {\n    return sortedPairs.length > 0 ? sortedPairs[0] : null;\n  }, [sortedPairs]);\n  const showWinnerScreenHandler = () => {\n    setShowWinnerScreen(true);\n  };\n  const hideWinnerScreenHandler = () => {\n    setShowWinnerScreen(false);\n  };\n  const showMatchResultsHandler = match => {\n    setSelectedMatchResults(match);\n    setShowMatchResults(true);\n  };\n  const hideMatchResultsHandler = () => {\n    setShowMatchResults(false);\n    setSelectedMatchResults(null);\n  };\n  const handleViewTournamentResults = async tournament => {\n    try {\n      setSelectedTournament(tournament);\n      await loadTournamentData();\n      alert(`✅ Torneo \"${tournament.name}\" seleccionado\\n\\nAhora puedes ver todos los partidos y resultados en el panel derecho.`);\n    } catch (err) {\n      console.error(\"❌ Error al cargar resultados del torneo:\", err);\n      alert(\"Error al cargar los resultados del torneo. Inténtalo de nuevo.\");\n    }\n  };\n  const recalculateMatchWinner = async matchId => {\n    try {\n      const match = matches.find(m => m.id === matchId);\n      if (!match) {\n        console.error(\"Match not found:\", matchId);\n        return;\n      }\n      const matchGames = await getGames(matchId);\n      if (matchGames.length === 0) {\n        console.log(\"No hay juegos para recalcular\");\n        return;\n      }\n      let pair1Games = 0;\n      let pair2Games = 0;\n      matchGames.forEach(game => {\n        if (game.is_tie_break) {\n          if (game.tie_break_pair1_points >= 10 && game.tie_break_pair1_points - game.tie_break_pair2_points >= 2) {\n            pair1Games++;\n          } else if (game.tie_break_pair2_points >= 10 && game.tie_break_pair2_points - game.tie_break_pair1_points >= 2) {\n            pair2Games++;\n          }\n        } else {\n          if (game.pair1_games > game.pair2_games) {\n            pair1Games++;\n          } else if (game.pair2_games > game.pair1_games) {\n            pair2Games++;\n          }\n        }\n      });\n      const isTie = pair1Games === pair2Games;\n      const winnerId = isTie ? undefined : pair1Games > pair2Games ? match.pair1_id : match.pair2_id;\n      await updateMatch(matchId, {\n        winner_id: winnerId,\n        is_finished: true\n      });\n      console.log(\"✅ Ganador recalculado y actualizado en la base de datos\");\n    } catch (error) {\n      console.error(\"Error recalculating match winner:\", error);\n    }\n  };\n  const handleBackToHome = () => {\n    setSelectedTournament(null);\n    setPairs([]);\n    setMatches([]);\n    setGames([]);\n    setSelectedMatchId(null);\n    setError(\"\");\n    setShowWinnerScreen(false);\n    setShowMatchResults(false);\n    setSelectedMatchResults(null);\n    setShowScoreCorrector(false);\n    setSelectedCorrectorMatch(null);\n    setForceRefresh(0);\n    setShowDebugInfo(false);\n    setEditingGames({});\n    setEditingTieBreaks({});\n    setShowSuccessModal(false);\n    setSuccessModalData({\n      title: \"\",\n      message: \"\",\n      icon: \"✅\"\n    });\n  };\n  const openScoreCorrector = match => {\n    setSelectedCorrectorMatch(match);\n    setShowScoreCorrector(true);\n  };\n  const closeScoreCorrector = () => {\n    setShowScoreCorrector(false);\n    setSelectedCorrectorMatch(null);\n  };\n  const handleScoreCorrectorUpdate = async () => {\n    if (selectedTournament) {\n      await loadTournamentData();\n    }\n    closeScoreCorrector();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"\\uD83C\\uDFC6 Gesti\\xF3n de Torneos Express y Retas\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 760,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"\\u274C Error\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 764,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 765,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"error-help\",\n          children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n            children: \"\\uD83D\\uDCA1 Ayuda:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 767,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"ol\", {\n            children: [/*#__PURE__*/_jsxDEV(\"li\", {\n              children: \"Verifica tu conexi\\xF3n a internet\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 769,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: \"Intenta recargar la p\\xE1gina\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 770,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: \"Si el problema persiste, contacta al administrador\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 771,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 768,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 766,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 763,\n        columnNumber: 11\n      }, this), loading && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"\\u23F3 Cargando...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 779,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 778,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"main-layout\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"left-panel\",\n          children: /*#__PURE__*/_jsxDEV(TournamentManager, {\n            selectedTournament: selectedTournament || undefined,\n            onTournamentSelect: setSelectedTournament,\n            onViewResults: handleViewTournamentResults\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 785,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 784,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"right-panel\",\n          children: selectedTournament ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"tournament-details\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"tournament-header\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"tournament-header-content\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"tournament-title-section\",\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"tournament-icon\",\n                      children: \"\\uD83C\\uDFC6\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 799,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"tournament-info\",\n                      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                        children: selectedTournament.name\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 801,\n                        columnNumber: 27\n                      }, this), selectedTournament.description && /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"tournament-description\",\n                        children: selectedTournament.description\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 803,\n                        columnNumber: 29\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 800,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 798,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"tournament-stats-section\",\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"stats-row\",\n                      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"stat-badge\",\n                        children: [selectedTournament.courts, \" canchas\"]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 811,\n                        columnNumber: 27\n                      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"stat-badge\",\n                        children: [pairs.length, \" parejas\"]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 814,\n                        columnNumber: 27\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 810,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"stats-row\",\n                      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"stat-badge\",\n                        children: [matches.length, \" partidos\"]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 819,\n                        columnNumber: 27\n                      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                        className: `status-badge ${selectedTournament.is_started ? \"started\" : \"pending\"}`,\n                        children: selectedTournament.is_started ? \"En Progreso\" : \"Pendiente\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 822,\n                        columnNumber: 27\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 818,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 809,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 797,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 796,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"player-management-section\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"player-management-header\",\n                  children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                    children: \"\\uD83D\\uDC65 Gesti\\xF3n de Jugadores\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 841,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    className: \"toggle-player-manager-btn\",\n                    onClick: () => setShowPlayerManager(!showPlayerManager),\n                    children: showPlayerManager ? \"👥 Ocultar Gestión de Jugadores\" : \"👥 Mostrar Gestión de Jugadores\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 842,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 840,\n                  columnNumber: 21\n                }, this), showPlayerManager && /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"player-manager-container\",\n                  children: /*#__PURE__*/_jsxDEV(PlayerManager, {\n                    playersInPairs: pairs.flatMap(pair => [pair.player1_id, pair.player2_id]),\n                    onPlayerSelect: players => {\n                      console.log(\"=== SELECCIÓN DE JUGADORES ===\");\n                      console.log(\"Players selected:\", players.length);\n                      players.forEach((player, index) => {\n                        console.log(`Player ${index + 1}:`, player.name, \"(ID:\", player.id + \")\");\n                      });\n\n                      // Validación: Verificar si algún jugador ya está en una pareja\n                      const playersInPairs = players.filter(player => {\n                        const isInPair = pairs.some(pair => pair.player1_id === player.id || pair.player2_id === player.id);\n                        if (isInPair) {\n                          var _existingPair$player, _existingPair$player2, _existingPair$player3;\n                          const existingPair = pairs.find(pair => pair.player1_id === player.id || pair.player2_id === player.id);\n                          console.log(`🚨 JUGADOR YA EN PAREJA: ${player.name} está en pareja con ${(existingPair === null || existingPair === void 0 ? void 0 : (_existingPair$player = existingPair.player1) === null || _existingPair$player === void 0 ? void 0 : _existingPair$player.id) === player.id ? existingPair === null || existingPair === void 0 ? void 0 : (_existingPair$player2 = existingPair.player2) === null || _existingPair$player2 === void 0 ? void 0 : _existingPair$player2.name : existingPair === null || existingPair === void 0 ? void 0 : (_existingPair$player3 = existingPair.player1) === null || _existingPair$player3 === void 0 ? void 0 : _existingPair$player3.name}`);\n                        }\n                        return isInPair;\n                      });\n                      if (playersInPairs.length > 0) {\n                        const playerNames = playersInPairs.map(p => p.name).join(\", \");\n                        console.log(\"🚨 ERROR: Jugadores ya están en parejas:\", playerNames);\n                        setError(`Los jugadores ${playerNames} ya están en parejas existentes. Debes eliminar sus parejas actuales antes de poder seleccionarlos nuevamente.`);\n                        return;\n                      }\n\n                      // Validación: No permitir jugadores con nombres iguales\n                      if (players.length === 2) {\n                        const player1 = players[0];\n                        const player2 = players[1];\n                        if (player1.name.toLowerCase() === player2.name.toLowerCase()) {\n                          console.log(\"🚨 ERROR: Jugadores con nombres iguales detectados\");\n                          console.log(\"Player 1:\", player1.name, \"(ID:\", player1.id + \")\");\n                          console.log(\"Player 2:\", player2.name, \"(ID:\", player2.id + \")\");\n                          setError(\"No puedes seleccionar dos jugadores con el mismo nombre\");\n                          return;\n                        }\n\n                        // Validación: Verificar si ya existe una pareja con estos jugadores\n                        const existingPair = pairs.find(pair => {\n                          var _pair$player5, _pair$player6, _pair$player7, _pair$player8;\n                          const sameIds = pair.player1_id === player1.id && pair.player2_id === player2.id || pair.player1_id === player2.id && pair.player2_id === player1.id;\n                          const sameNames = ((_pair$player5 = pair.player1) === null || _pair$player5 === void 0 ? void 0 : _pair$player5.name.toLowerCase()) === player1.name.toLowerCase() && ((_pair$player6 = pair.player2) === null || _pair$player6 === void 0 ? void 0 : _pair$player6.name.toLowerCase()) === player2.name.toLowerCase() || ((_pair$player7 = pair.player1) === null || _pair$player7 === void 0 ? void 0 : _pair$player7.name.toLowerCase()) === player2.name.toLowerCase() && ((_pair$player8 = pair.player2) === null || _pair$player8 === void 0 ? void 0 : _pair$player8.name.toLowerCase()) === player1.name.toLowerCase();\n                          if (sameIds || sameNames) {\n                            console.log(\"🚨 PAREJA DUPLICADA DETECTADA:\", player1.name, \"+\", player2.name);\n                            console.log(\"Existing pair:\", existingPair);\n                          }\n                          return sameIds || sameNames;\n                        });\n                        if (existingPair) {\n                          console.log(\"🚨 ERROR: Pareja ya existe en la base de datos\");\n                          setError(`La pareja ${player1.name} + ${player2.name} ya existe en el torneo`);\n                          return;\n                        }\n\n                        // Si llegamos aquí, la pareja es válida\n                        console.log(\"✅ PAREJA VÁLIDA:\", player1.name, \"+\", player2.name);\n                        addPair(player1, player2);\n                        setSelectedPlayers([]); // Limpiar selección después de crear la pareja\n                      } else {\n                        setSelectedPlayers(players);\n                      }\n                    },\n                    selectedPlayers: selectedPlayers,\n                    allowMultipleSelection: true\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 854,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 853,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 839,\n                columnNumber: 19\n              }, this), !selectedTournament.is_started && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"start-tournament-section\",\n                children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                  children: \"\\uD83D\\uDE80 Iniciar Torneo\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1006,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"tournament-info\",\n                  children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                    children: [\"Tienes \", pairs.length, \" parejas registradas\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1008,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    children: [\"Se crear\\xE1n \", pairs.length * (pairs.length - 1) / 2, \" \", \"partidos (round-robin completo - todas las parejas se enfrentan)\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1009,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    children: [\"Estado del torneo:\", \" \", selectedTournament.is_started ? \"Iniciado\" : \"Pendiente\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1014,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1007,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"start-button\",\n                  onClick: startTournament,\n                  disabled: loading || pairs.length < 2,\n                  children: loading ? \"⏳ Iniciando...\" : selectedTournament.is_started ? \"🏆 Torneo Ya Iniciado\" : pairs.length < 2 ? \"❌ Necesitas al menos 2 parejas\" : \"🚀 ¡Iniciar Torneo!\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1021,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1005,\n                columnNumber: 21\n              }, this), selectedTournament && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"debug-section\",\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"debug-toggle-btn\",\n                  onClick: () => setShowDebugInfo(!showDebugInfo),\n                  children: [showDebugInfo ? \"🔽\" : \"🔼\", \" Debug Info\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1040,\n                  columnNumber: 23\n                }, this), showDebugInfo && /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"debug-info\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"debug-header\",\n                    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                      children: \"\\uD83D\\uDD27 Informaci\\xF3n de Debug\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1050,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"debug-stats\",\n                      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                        children: [\"Estado:\", \" \", selectedTournament.is_started ? \"✅ Iniciado\" : \"⏳ Pendiente\"]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1052,\n                        columnNumber: 31\n                      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                        children: [\"Parejas: \", pairs.length]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1058,\n                        columnNumber: 31\n                      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                        children: [\"Partidos: \", matches.length]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1059,\n                        columnNumber: 31\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1051,\n                      columnNumber: 29\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1049,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"debug-buttons\",\n                    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                      onClick: async () => {\n                        console.log(\"=== PROBAR CONEXIÓN ===\");\n                        const isConnected = await testConnection();\n                        if (isConnected) {\n                          setError(\"\");\n                        } else {\n                          setError(\"❌ Error de conexión a Supabase. Verifica tu configuración.\");\n                        }\n                      },\n                      className: \"debug-btn connection-btn\",\n                      children: \"\\uD83D\\uDD0C Probar Conexi\\xF3n\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1064,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                      onClick: () => {\n                        console.log(\"=== FORZANDO RECARGA DE DATOS ===\");\n                        loadTournamentData();\n                      },\n                      className: \"debug-btn reload-btn\",\n                      children: \"\\uD83D\\uDD04 Recargar Datos\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1081,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                      onClick: async () => {\n                        console.log(\"=== VERIFICANDO ESTADO DEL TORNEO ===\");\n                        try {\n                          console.log(\"Estado actual del torneo:\", selectedTournament);\n                          console.log(\"Parejas en estado:\", pairs.length);\n                          console.log(\"Partidos en estado:\", matches.length);\n                          const dbPairs = await getPairs(selectedTournament.id);\n                          const dbMatches = await getMatches(selectedTournament.id);\n                          console.log(\"Parejas en BD:\", dbPairs.length);\n                          console.log(\"Partidos en BD:\", dbMatches.length);\n                          alert(`Estado del torneo:\\n\\nParejas: ${pairs.length} (estado) / ${dbPairs.length} (BD)\\nPartidos: ${matches.length} (estado) / ${dbMatches.length} (BD)\\n\\nTorneo iniciado: ${selectedTournament.is_started ? \"Sí\" : \"No\"}`);\n                        } catch (error) {\n                          console.error(\"Error verificando estado:\", error);\n                        }\n                      },\n                      className: \"debug-btn status-btn\",\n                      children: \"\\uD83D\\uDD0D Verificar Estado\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1093,\n                      columnNumber: 29\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1063,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1048,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1039,\n                columnNumber: 21\n              }, this), pairs.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"pairs-display\",\n                children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                  children: [\"\\uD83D\\uDC65 Parejas Registradas (\", pairs.length, \")\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1160,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"pairs-grid\",\n                  children: pairs.map((pair, index) => {\n                    var _pair$player9, _pair$player0;\n                    return /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"pair-display-card\",\n                      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"pair-number\",\n                        children: [\"#\", index + 1]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1164,\n                        columnNumber: 29\n                      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"pair-names\",\n                        children: [(_pair$player9 = pair.player1) === null || _pair$player9 === void 0 ? void 0 : _pair$player9.name, \" y \", (_pair$player0 = pair.player2) === null || _pair$player0 === void 0 ? void 0 : _pair$player0.name]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1165,\n                        columnNumber: 29\n                      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"pair-stats\",\n                        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                          children: [\"Sets: \", pair.sets_won]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1169,\n                          columnNumber: 31\n                        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                          children: [\"Partidos: \", pair.matches_played]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1170,\n                          columnNumber: 31\n                        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                          children: [\"Puntos: \", pair.points]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1171,\n                          columnNumber: 31\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1168,\n                        columnNumber: 29\n                      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                        onClick: () => {\n                          var _pair$player1, _pair$player10;\n                          if (window.confirm(`¿Estás seguro de que quieres eliminar la pareja \"${(_pair$player1 = pair.player1) === null || _pair$player1 === void 0 ? void 0 : _pair$player1.name} y ${(_pair$player10 = pair.player2) === null || _pair$player10 === void 0 ? void 0 : _pair$player10.name}\"?`)) {\n                            deletePair(pair.id);\n                          }\n                        },\n                        className: \"delete-pair-btn\",\n                        title: \"Eliminar pareja\",\n                        children: \"\\uD83D\\uDDD1\\uFE0F\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1173,\n                        columnNumber: 29\n                      }, this)]\n                    }, pair.id, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1163,\n                      columnNumber: 27\n                    }, this);\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1161,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1159,\n                columnNumber: 21\n              }, this), selectedTournament.is_started && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"tournament-content\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"matches-section\",\n                  children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                    children: [\"\\uD83C\\uDFBE Partidos (\", matches.length, \" total)\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1198,\n                    columnNumber: 25\n                  }, this), matches.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"no-matches\",\n                    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                      children: \"\\uD83D\\uDCDD No hay partidos programados a\\xFAn\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1201,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                      children: \"Inicia el torneo para generar los partidos autom\\xE1ticamente\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1202,\n                      columnNumber: 29\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1200,\n                    columnNumber: 27\n                  }, this) : Object.entries(matchesByRound).map(([round, roundMatches]) => /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"round-section\",\n                    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                      children: [\"\\uD83D\\uDD04 Ronda \", round, \" (\", roundMatches.length, \" \", \"partidos)\"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1211,\n                      columnNumber: 33\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"matches-container\",\n                      children: roundMatches.map(match => {\n                        var _match$pair, _match$pair$player, _match$pair2, _match$pair2$player, _match$pair3, _match$pair3$player, _match$pair4, _match$pair4$player, _match$pair5, _match$pair5$player, _match$pair6, _match$pair6$player, _match$pair7, _match$pair7$player, _match$pair8, _match$pair8$player, _match$pair9, _match$pair9$player, _match$pair0, _match$pair0$player, _match$pair1, _match$pair1$player, _match$pair10, _match$pair10$player, _match$pair11, _match$pair11$player, _match$pair12, _match$pair12$player, _match$pair13, _match$pair13$player, _match$pair14, _match$pair14$player;\n                        return /*#__PURE__*/_jsxDEV(\"div\", {\n                          className: `match-card ${selectedMatchId === match.id ? \"selected\" : \"\"}`,\n                          onClick: () => handleMatchSelect(match.id),\n                          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                            className: \"match-header\",\n                            children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n                              children: [(_match$pair = match.pair1) === null || _match$pair === void 0 ? void 0 : (_match$pair$player = _match$pair.player1) === null || _match$pair$player === void 0 ? void 0 : _match$pair$player.name, \" y\", \" \", (_match$pair2 = match.pair1) === null || _match$pair2 === void 0 ? void 0 : (_match$pair2$player = _match$pair2.player2) === null || _match$pair2$player === void 0 ? void 0 : _match$pair2$player.name, \" vs\", \" \", (_match$pair3 = match.pair2) === null || _match$pair3 === void 0 ? void 0 : (_match$pair3$player = _match$pair3.player1) === null || _match$pair3$player === void 0 ? void 0 : _match$pair3$player.name, \" y\", \" \", (_match$pair4 = match.pair2) === null || _match$pair4 === void 0 ? void 0 : (_match$pair4$player = _match$pair4.player2) === null || _match$pair4$player === void 0 ? void 0 : _match$pair4$player.name]\n                            }, void 0, true, {\n                              fileName: _jsxFileName,\n                              lineNumber: 1229,\n                              columnNumber: 41\n                            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                              className: \"match-info\",\n                              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                                className: \"court-badge\",\n                                children: [\"\\uD83C\\uDFDF\\uFE0F Cancha \", match.court]\n                              }, void 0, true, {\n                                fileName: _jsxFileName,\n                                lineNumber: 1236,\n                                columnNumber: 43\n                              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                                className: \"round-badge\",\n                                children: [\"\\uD83D\\uDD04 Ronda \", match.round]\n                              }, void 0, true, {\n                                fileName: _jsxFileName,\n                                lineNumber: 1239,\n                                columnNumber: 43\n                              }, this)]\n                            }, void 0, true, {\n                              fileName: _jsxFileName,\n                              lineNumber: 1235,\n                              columnNumber: 41\n                            }, this)]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1228,\n                            columnNumber: 39\n                          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                            className: \"match-details\",\n                            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                              className: \"match-pairs\",\n                              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                                children: \"Pareja 1:\"\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 1246,\n                                columnNumber: 43\n                              }, this), \" \", (_match$pair5 = match.pair1) === null || _match$pair5 === void 0 ? void 0 : (_match$pair5$player = _match$pair5.player1) === null || _match$pair5$player === void 0 ? void 0 : _match$pair5$player.name, \" y\", \" \", (_match$pair6 = match.pair1) === null || _match$pair6 === void 0 ? void 0 : (_match$pair6$player = _match$pair6.player2) === null || _match$pair6$player === void 0 ? void 0 : _match$pair6$player.name]\n                            }, void 0, true, {\n                              fileName: _jsxFileName,\n                              lineNumber: 1245,\n                              columnNumber: 41\n                            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                              className: \"match-pairs\",\n                              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                                children: \"Pareja 2:\"\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 1251,\n                                columnNumber: 43\n                              }, this), \" \", (_match$pair7 = match.pair2) === null || _match$pair7 === void 0 ? void 0 : (_match$pair7$player = _match$pair7.player1) === null || _match$pair7$player === void 0 ? void 0 : _match$pair7$player.name, \" y\", \" \", (_match$pair8 = match.pair2) === null || _match$pair8 === void 0 ? void 0 : (_match$pair8$player = _match$pair8.player2) === null || _match$pair8$player === void 0 ? void 0 : _match$pair8$player.name]\n                            }, void 0, true, {\n                              fileName: _jsxFileName,\n                              lineNumber: 1250,\n                              columnNumber: 41\n                            }, this)]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1244,\n                            columnNumber: 39\n                          }, this), match.winner_id && /*#__PURE__*/_jsxDEV(\"div\", {\n                            className: \"winner\",\n                            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                              className: \"winner-icon\",\n                              children: \"\\uD83C\\uDFC6\"\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 1258,\n                              columnNumber: 43\n                            }, this), \"Ganador:\", \" \", match.winner_id === match.pair1_id ? `${(_match$pair9 = match.pair1) === null || _match$pair9 === void 0 ? void 0 : (_match$pair9$player = _match$pair9.player1) === null || _match$pair9$player === void 0 ? void 0 : _match$pair9$player.name} y ${(_match$pair0 = match.pair1) === null || _match$pair0 === void 0 ? void 0 : (_match$pair0$player = _match$pair0.player2) === null || _match$pair0$player === void 0 ? void 0 : _match$pair0$player.name}` : `${(_match$pair1 = match.pair2) === null || _match$pair1 === void 0 ? void 0 : (_match$pair1$player = _match$pair1.player1) === null || _match$pair1$player === void 0 ? void 0 : _match$pair1$player.name} y ${(_match$pair10 = match.pair2) === null || _match$pair10 === void 0 ? void 0 : (_match$pair10$player = _match$pair10.player2) === null || _match$pair10$player === void 0 ? void 0 : _match$pair10$player.name}`]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1257,\n                            columnNumber: 41\n                          }, this), match.is_finished && !match.winner_id && /*#__PURE__*/_jsxDEV(\"div\", {\n                            className: \"winner\",\n                            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                              className: \"winner-icon\",\n                              children: \"\\uD83E\\uDD1D\"\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 1270,\n                              columnNumber: 45\n                            }, this), \"Empate: \", (_match$pair11 = match.pair1) === null || _match$pair11 === void 0 ? void 0 : (_match$pair11$player = _match$pair11.player1) === null || _match$pair11$player === void 0 ? void 0 : _match$pair11$player.name, \" \", \"y \", (_match$pair12 = match.pair1) === null || _match$pair12 === void 0 ? void 0 : (_match$pair12$player = _match$pair12.player2) === null || _match$pair12$player === void 0 ? void 0 : _match$pair12$player.name, \" vs\", \" \", (_match$pair13 = match.pair2) === null || _match$pair13 === void 0 ? void 0 : (_match$pair13$player = _match$pair13.player1) === null || _match$pair13$player === void 0 ? void 0 : _match$pair13$player.name, \" y\", \" \", (_match$pair14 = match.pair2) === null || _match$pair14 === void 0 ? void 0 : (_match$pair14$player = _match$pair14.player2) === null || _match$pair14$player === void 0 ? void 0 : _match$pair14$player.name]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1269,\n                            columnNumber: 43\n                          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                            className: \"match-status\",\n                            children: match.is_finished ? /*#__PURE__*/_jsxDEV(\"span\", {\n                              className: \"status-finished\",\n                              children: \"\\u2714 Finalizado\"\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 1281,\n                              columnNumber: 43\n                            }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n                              className: \"status-pending\",\n                              children: \"\\u23F3 Pendiente\"\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 1285,\n                              columnNumber: 43\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1279,\n                            columnNumber: 39\n                          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                            className: \"match-actions\",\n                            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                              onClick: e => {\n                                e.stopPropagation();\n                                showMatchResultsHandler(match);\n                              },\n                              className: \"view-results-btn\",\n                              children: \"\\uD83D\\uDCCA Ver Resultados\"\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 1291,\n                              columnNumber: 41\n                            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                              onClick: e => {\n                                e.stopPropagation();\n                                openScoreCorrector(match);\n                              },\n                              className: \"correct-result-btn\",\n                              children: \"\\u270F\\uFE0F Corregir Marcador\"\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 1300,\n                              columnNumber: 41\n                            }, this)]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1290,\n                            columnNumber: 39\n                          }, this)]\n                        }, match.id, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1217,\n                          columnNumber: 37\n                        }, this);\n                      })\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1215,\n                      columnNumber: 33\n                    }, this)]\n                  }, round, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1210,\n                    columnNumber: 31\n                  }, this))]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1197,\n                  columnNumber: 23\n                }, this), selectedMatch && /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"match-management\",\n                  children: /*#__PURE__*/_jsxDEV(MatchStatusDisplay, {\n                    match: selectedMatch,\n                    games: games.filter(g => g.match_id === selectedMatch.id),\n                    pairs: pairs\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1322,\n                    columnNumber: 27\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1321,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(StandingsTable, {\n                  tournamentId: selectedTournament.id,\n                  forceRefresh: forceRefresh\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1333,\n                  columnNumber: 23\n                }, this), isTournamentFinished && winner && /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"winner-button-container\",\n                  children: /*#__PURE__*/_jsxDEV(\"button\", {\n                    className: \"show-winner-button\",\n                    onClick: showWinnerScreenHandler,\n                    children: \"\\uD83C\\uDFC6 \\xA1Ver Ganador!\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1341,\n                    columnNumber: 27\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1340,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"back-home-button-container\",\n                  children: /*#__PURE__*/_jsxDEV(\"button\", {\n                    className: \"back-home-button\",\n                    onClick: handleBackToHome,\n                    children: \"\\uD83C\\uDFE0 Volver al Inicio\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1352,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1351,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1195,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 795,\n              columnNumber: 17\n            }, this)\n          }, void 0, false) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"no-tournament-selected\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: \"\\uD83C\\uDFC6 Bienvenido al Gestor de Torneos\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1365,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Selecciona un torneo del panel izquierdo para comenzar a gestionar partidos y resultados.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1366,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1364,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 792,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 783,\n        columnNumber: 9\n      }, this), showWinnerScreen && winner && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"winner-screen\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"winner-content\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"winner-celebration\",\n            children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n              className: \"winner-title\",\n              children: \"\\uD83C\\uDFC6 \\xA1FELICIDADES! \\uD83C\\uDFC6\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1380,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"winner-names\",\n              children: [(_winner$player = winner.player1) === null || _winner$player === void 0 ? void 0 : _winner$player.name, \" y \", (_winner$player2 = winner.player2) === null || _winner$player2 === void 0 ? void 0 : _winner$player2.name]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1381,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"winner-subtitle\",\n              children: \"\\xA1Son los campeones del torneo!\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1384,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"winner-stats\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"stat-item\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"stat-number\",\n                  children: winner.sets_won\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1389,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"stat-label\",\n                  children: \"Sets Ganados\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1390,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1388,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"stat-item\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"stat-number\",\n                  children: winner.games_won\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1393,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"stat-label\",\n                  children: \"Partidos Ganados\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1394,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1392,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"stat-item\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"stat-number\",\n                  children: winner.points\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1397,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"stat-label\",\n                  children: \"Puntos Totales\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1398,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1396,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1387,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"back-button\",\n              onClick: hideWinnerScreenHandler,\n              children: \"\\uD83C\\uDFE0 Volver al Torneo\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1401,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1379,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1378,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1377,\n        columnNumber: 11\n      }, this), showMatchResults && selectedMatchResults && /*#__PURE__*/_jsxDEV(MatchResults, {\n        match: selectedMatchResults,\n        isOpen: showMatchResults,\n        onClose: hideMatchResultsHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1414,\n        columnNumber: 11\n      }, this), showScoreCorrector && selectedCorrectorMatch && /*#__PURE__*/_jsxDEV(ScoreCorrector, {\n        match: selectedCorrectorMatch,\n        onClose: closeScoreCorrector,\n        onUpdate: handleScoreCorrectorUpdate\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1423,\n        columnNumber: 11\n      }, this), showSuccessModal && /*#__PURE__*/_jsxDEV(SuccessModal, {\n        title: successModalData.title,\n        message: successModalData.message,\n        icon: successModalData.icon,\n        isOpen: showSuccessModal,\n        onClose: () => setShowSuccessModal(false)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1432,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 759,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 758,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"h+DEYM0aTVue3wQUw0NhF72utzA=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","useMemo","TournamentManager","PlayerManager","ScoreCorrector","StandingsTable","SuccessModal","MatchResults","createPair","getPairs","deletePair","deletePairFromDB","createMatch","getMatches","updateMatch","deleteMatchesByTournament","createGame","getGames","updateGame","deleteGame","updateTournament","testConnection","FlexibleMatchFinisher","MatchStatusDisplay","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","_winner$player","_winner$player2","selectedTournament","setSelectedTournament","pairs","setPairs","matches","setMatches","games","setGames","selectedMatchId","setSelectedMatchId","error","setError","loading","setLoading","showPlayerManager","setShowPlayerManager","selectedPlayers","setSelectedPlayers","showWinnerScreen","setShowWinnerScreen","showMatchResults","setShowMatchResults","selectedMatchResults","setSelectedMatchResults","showScoreCorrector","setShowScoreCorrector","selectedCorrectorMatch","setSelectedCorrectorMatch","forceRefresh","setForceRefresh","showDebugInfo","setShowDebugInfo","editingGames","setEditingGames","editingTieBreaks","setEditingTieBreaks","showSuccessModal","setShowSuccessModal","successModalData","setSuccessModalData","title","message","icon","loadTournamentData","id","console","log","name","pairsData","matchesData","Promise","all","length","err","pairId","filter","p","addPair","player1","player2","existingPairLocal","find","pair","_pair$player","_pair$player2","_pair$player3","_pair$player4","sameIds","player1_id","player2_id","sameNames","toLowerCase","newPair","startTournament","allPairs","allCombinations","i","j","push","pair1","pair2","finalMatches","remainingCombinations","round","roundMatches","usedPairs","Set","courtOrder","courts","rotatedCourt","courtIndex","court","bestIndex","bestScore","combo","has","score","futureCombo","match","add","splice","createdMatches","createdMatch","is_started","prev","addGame","matchId","gameNumber","g","match_id","newGame","updateGameScore","gameId","pair1Games","pair2Games","prevGames","map","pair1_games","pair2_games","handleGameScoreChange","handleTieBreakScoreChange","pair1Points","pair2Points","handleGameScoreBlur","editingGame","newState","handleTieBreakScoreBlur","editingTieBreak","updateTieBreakScore","tie_break_pair1_points","tie_break_pair2_points","toggleTieBreak","game","newIsTieBreak","is_tie_break","removeGame","correctGameScore","pair1TieBreakPoints","pair2TieBreakPoints","isTieBreak","updated_at","Date","toISOString","finishMatch","m","matchGames","canFinishMatch","result","success","winner_id","winnerId","is_finished","updatedPairsData","alert","handleMatchSelect","loadMatchGames","gamesData","selectedMatch","matchesByRound","reduce","acc","sortedPairs","sort","a","b","sets_won","games_won","points","isTournamentFinished","every","winner","showWinnerScreenHandler","hideWinnerScreenHandler","showMatchResultsHandler","hideMatchResultsHandler","handleViewTournamentResults","tournament","recalculateMatchWinner","forEach","isTie","undefined","pair1_id","pair2_id","handleBackToHome","openScoreCorrector","closeScoreCorrector","handleScoreCorrectorUpdate","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onTournamentSelect","onViewResults","description","onClick","playersInPairs","flatMap","onPlayerSelect","players","player","index","isInPair","some","_existingPair$player","_existingPair$player2","_existingPair$player3","existingPair","playerNames","join","_pair$player5","_pair$player6","_pair$player7","_pair$player8","allowMultipleSelection","disabled","isConnected","dbPairs","dbMatches","_pair$player9","_pair$player0","matches_played","_pair$player1","_pair$player10","window","confirm","Object","entries","_match$pair","_match$pair$player","_match$pair2","_match$pair2$player","_match$pair3","_match$pair3$player","_match$pair4","_match$pair4$player","_match$pair5","_match$pair5$player","_match$pair6","_match$pair6$player","_match$pair7","_match$pair7$player","_match$pair8","_match$pair8$player","_match$pair9","_match$pair9$player","_match$pair0","_match$pair0$player","_match$pair1","_match$pair1$player","_match$pair10","_match$pair10$player","_match$pair11","_match$pair11$player","_match$pair12","_match$pair12$player","_match$pair13","_match$pair13$player","_match$pair14","_match$pair14$player","e","stopPropagation","tournamentId","isOpen","onClose","onUpdate","_c","$RefreshReg$"],"sources":["/Users/nedev/padel-tournament-app/src/App.tsx"],"sourcesContent":["import React, { useState, useEffect, useCallback, useMemo } from \"react\";\nimport \"./App.css\";\nimport { TournamentManager } from \"./components/TournamentManager\";\nimport { PlayerManager } from \"./components/PlayerManager\";\nimport ScoreCorrector from \"./components/ScoreCorrector\";\nimport StandingsTable from \"./components/StandingsTable\";\nimport { SuccessModal } from \"./components/SuccessModal\";\nimport MatchResults from \"./components/MatchResults\";\n\nimport {\n  Tournament,\n  Player,\n  Pair,\n  Match,\n  Game,\n  createPair,\n  getPairs,\n  updatePair,\n  deletePair as deletePairFromDB,\n  deletePairsByTournament,\n  createMatch,\n  getMatches,\n  updateMatch,\n  deleteMatchesByTournament,\n  createGame,\n  getGames,\n  updateGame,\n  deleteGame,\n  updateTournament,\n} from \"./lib/database\";\nimport { testConnection } from \"./lib/supabaseClient\";\nimport { FlexibleMatchFinisher } from \"./components/FlexibleMatchFinisher\";\nimport MatchStatusDisplay from \"./components/MatchStatusDisplay\";\n\nfunction App() {\n  const [selectedTournament, setSelectedTournament] =\n    useState<Tournament | null>(null);\n  const [pairs, setPairs] = useState<Pair[]>([]);\n  const [matches, setMatches] = useState<Match[]>([]);\n  const [games, setGames] = useState<Game[]>([]);\n  const [selectedMatchId, setSelectedMatchId] = useState<string | null>(null);\n  const [error, setError] = useState<string>(\"\");\n  const [loading, setLoading] = useState(false);\n  const [showPlayerManager, setShowPlayerManager] = useState(false);\n  const [selectedPlayers, setSelectedPlayers] = useState<Player[]>([]);\n  const [showWinnerScreen, setShowWinnerScreen] = useState(false);\n  const [showMatchResults, setShowMatchResults] = useState(false);\n  const [selectedMatchResults, setSelectedMatchResults] =\n    useState<Match | null>(null);\n  const [showScoreCorrector, setShowScoreCorrector] = useState(false);\n  const [selectedCorrectorMatch, setSelectedCorrectorMatch] =\n    useState<Match | null>(null);\n  const [forceRefresh, setForceRefresh] = useState(0);\n  const [showDebugInfo, setShowDebugInfo] = useState(false);\n  const [editingGames, setEditingGames] = useState<{\n    [key: string]: { pair1: number; pair2: number };\n  }>({});\n  const [editingTieBreaks, setEditingTieBreaks] = useState<{\n    [key: string]: { pair1: number; pair2: number };\n  }>({});\n\n  const [showSuccessModal, setShowSuccessModal] = useState(false);\n  const [successModalData, setSuccessModalData] = useState({\n    title: \"\",\n    message: \"\",\n    icon: \"✅\",\n  });\n\n  // Cargar datos cuando se selecciona un torneo\n  useEffect(() => {\n    if (selectedTournament) {\n      loadTournamentData();\n    }\n  }, [selectedTournament?.id]);\n\n  const loadTournamentData = useCallback(async () => {\n    if (!selectedTournament) return;\n\n    try {\n      setLoading(true);\n      setError(\"\");\n      console.log(\"Loading tournament data for:\", selectedTournament.name);\n\n      const [pairsData, matchesData] = await Promise.all([\n        getPairs(selectedTournament.id),\n        getMatches(selectedTournament.id),\n      ]);\n\n      console.log(\"Pairs loaded:\", pairsData.length, \"pairs\");\n      setPairs(pairsData);\n\n      console.log(\n        \"Matches loaded from database:\",\n        matchesData.length,\n        \"matches\"\n      );\n      setMatches(matchesData);\n    } catch (err) {\n      console.error(\"Error loading tournament data:\", err);\n      setError(\n        \"Error al cargar los datos del torneo: \" + (err as Error).message\n      );\n    } finally {\n      setLoading(false);\n    }\n  }, [selectedTournament]);\n\n  const deletePair = async (pairId: string) => {\n    try {\n      setError(\"\");\n      console.log(\"Eliminando pareja:\", pairId);\n\n      await deletePairFromDB(pairId);\n      setPairs(pairs.filter((p) => p.id !== pairId));\n\n      console.log(\"Pareja eliminada exitosamente\");\n    } catch (err) {\n      console.error(\"Error eliminando pareja:\", err);\n      setError(\"Error al eliminar la pareja: \" + (err as Error).message);\n    }\n  };\n\n  const addPair = async (player1: Player, player2: Player) => {\n    if (!selectedTournament) {\n      setError(\"No hay torneo seleccionado\");\n      return;\n    }\n\n    try {\n      setError(\"\");\n\n      // Verificar duplicados en estado local\n      const existingPairLocal = pairs.find((pair) => {\n        const sameIds =\n          (pair.player1_id === player1.id && pair.player2_id === player2.id) ||\n          (pair.player1_id === player2.id && pair.player2_id === player1.id);\n\n        const sameNames =\n          (pair.player1?.name.toLowerCase() === player1.name.toLowerCase() &&\n            pair.player2?.name.toLowerCase() === player2.name.toLowerCase()) ||\n          (pair.player1?.name.toLowerCase() === player2.name.toLowerCase() &&\n            pair.player2?.name.toLowerCase() === player1.name.toLowerCase());\n\n        return sameIds || sameNames;\n      });\n\n      if (existingPairLocal) {\n        setError(\n          `La pareja ${player1.name} y ${player2.name} ya está registrada`\n        );\n        return;\n      }\n\n      const newPair = await createPair(\n        selectedTournament.id,\n        player1.id,\n        player2.id\n      );\n\n      setPairs([...pairs, newPair]);\n      setSelectedPlayers([]);\n\n      console.log(\"Pair added successfully\");\n    } catch (err) {\n      console.error(\"Error creating pair:\", err);\n      setError(\"Error al crear la pareja: \" + (err as Error).message);\n    }\n  };\n\n  const startTournament = async () => {\n    if (!selectedTournament || pairs.length < 2) {\n      setError(\"Se necesitan al menos 2 parejas para iniciar el torneo\");\n      return;\n    }\n\n    try {\n      setLoading(true);\n      setError(\"\");\n\n      console.log(\"🚀 Iniciando torneo:\", selectedTournament.name);\n\n      // Limpiar partidos existentes\n      if (matches.length > 0) {\n        await deleteMatchesByTournament(selectedTournament.id);\n        setMatches([]);\n      }\n\n      const allPairs = [...pairs];\n      const allCombinations = [];\n\n      for (let i = 0; i < allPairs.length; i++) {\n        for (let j = i + 1; j < allPairs.length; j++) {\n          allCombinations.push({\n            pair1: allPairs[i],\n            pair2: allPairs[j],\n          });\n        }\n      }\n\n      const finalMatches = [];\n      const remainingCombinations = [...allCombinations];\n      let round = 1;\n\n      while (remainingCombinations.length > 0) {\n        const roundMatches = [];\n        const usedPairs = new Set();\n        const courtOrder = [];\n\n        for (let i = 0; i < selectedTournament.courts; i++) {\n          const rotatedCourt =\n            ((round - 1 + i) % selectedTournament.courts) + 1;\n          courtOrder.push(rotatedCourt);\n        }\n\n        for (let courtIndex = 0; courtIndex < courtOrder.length; courtIndex++) {\n          const court = courtOrder[courtIndex];\n          let bestIndex = -1;\n          let bestScore = -1;\n\n          for (let i = 0; i < remainingCombinations.length; i++) {\n            const combo = remainingCombinations[i];\n\n            if (\n              !usedPairs.has(combo.pair1.id) &&\n              !usedPairs.has(combo.pair2.id)\n            ) {\n              let score = 0;\n\n              for (let j = 0; j < remainingCombinations.length; j++) {\n                if (i !== j) {\n                  const futureCombo = remainingCombinations[j];\n                  if (\n                    !usedPairs.has(futureCombo.pair1.id) &&\n                    !usedPairs.has(futureCombo.pair2.id) &&\n                    futureCombo.pair1.id !== combo.pair1.id &&\n                    futureCombo.pair1.id !== combo.pair2.id &&\n                    futureCombo.pair2.id !== combo.pair1.id &&\n                    futureCombo.pair2.id !== combo.pair2.id\n                  ) {\n                    score++;\n                  }\n                }\n              }\n\n              if (score > bestScore) {\n                bestScore = score;\n                bestIndex = i;\n              }\n            }\n          }\n\n          if (bestIndex !== -1) {\n            const combo = remainingCombinations[bestIndex];\n\n            const match = {\n              pair1: combo.pair1,\n              pair2: combo.pair2,\n              round,\n              court,\n            };\n\n            roundMatches.push(match);\n            usedPairs.add(combo.pair1.id);\n            usedPairs.add(combo.pair2.id);\n            remainingCombinations.splice(bestIndex, 1);\n          } else {\n            break;\n          }\n        }\n\n        if (roundMatches.length > 0) {\n          finalMatches.push(...roundMatches);\n        }\n\n        round++;\n      }\n\n      const createdMatches = [];\n\n      for (const match of finalMatches) {\n        try {\n          const createdMatch = await createMatch(\n            selectedTournament.id,\n            match.pair1.id,\n            match.pair2.id,\n            match.court,\n            match.round\n          );\n          createdMatches.push(createdMatch);\n        } catch (error) {\n          console.error(\"Error creating match:\", error);\n        }\n      }\n\n      await updateTournament(selectedTournament.id, { is_started: true });\n      setSelectedTournament((prev) =>\n        prev ? { ...prev, is_started: true } : null\n      );\n\n      await loadTournamentData();\n\n      setSuccessModalData({\n        title: \"¡Torneo Iniciado!\",\n        message: `Se han creado ${createdMatches.length} partidos exitosamente usando ${selectedTournament.courts} canchas. El torneo está listo para comenzar.`,\n        icon: \"🏆\",\n      });\n      setShowSuccessModal(true);\n    } catch (error) {\n      console.error(\"Error starting tournament:\", error);\n      setError(\"Error al iniciar el torneo: \" + (error as Error).message);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const addGame = async (matchId: string) => {\n    try {\n      setError(\"\");\n      const gameNumber = games.filter((g) => g.match_id === matchId).length + 1;\n\n      const newGame = await createGame(matchId, gameNumber);\n      setGames([...games, newGame]);\n    } catch (err) {\n      console.error(\"❌ Error al agregar el juego:\", err);\n      setError(\"Error al agregar el juego\");\n    }\n  };\n\n  const updateGameScore = useCallback(\n    async (gameId: string, pair1Games: number, pair2Games: number) => {\n      try {\n        setError(\"\");\n\n        setGames((prevGames) =>\n          prevGames.map((g) =>\n            g.id === gameId\n              ? { ...g, pair1_games: pair1Games, pair2_games: pair2Games }\n              : g\n          )\n        );\n\n        await updateGame(gameId, {\n          pair1_games: pair1Games,\n          pair2_games: pair2Games,\n        });\n      } catch (err) {\n        console.error(\"❌ Error al actualizar el marcador:\", err);\n        setError(\"Error al actualizar el marcador: \" + (err as Error).message);\n      }\n    },\n    [games, selectedTournament]\n  );\n\n  const handleGameScoreChange = useCallback(\n    (gameId: string, pair1Games: number, pair2Games: number) => {\n      setEditingGames((prev) => ({\n        ...prev,\n        [gameId]: { pair1: pair1Games, pair2: pair2Games },\n      }));\n    },\n    []\n  );\n\n  const handleTieBreakScoreChange = useCallback(\n    (gameId: string, pair1Points: number, pair2Points: number) => {\n      setEditingTieBreaks((prev) => ({\n        ...prev,\n        [gameId]: { pair1: pair1Points, pair2: pair2Points },\n      }));\n    },\n    []\n  );\n\n  const handleGameScoreBlur = useCallback(\n    async (gameId: string) => {\n      const editingGame = editingGames[gameId];\n      if (editingGame) {\n        await updateGameScore(gameId, editingGame.pair1, editingGame.pair2);\n        setEditingGames((prev) => {\n          const newState = { ...prev };\n          delete newState[gameId];\n          return newState;\n        });\n      }\n    },\n    [editingGames]\n  );\n\n  const handleTieBreakScoreBlur = useCallback(\n    async (gameId: string) => {\n      const editingTieBreak = editingTieBreaks[gameId];\n      if (editingTieBreak) {\n        await updateTieBreakScore(\n          gameId,\n          editingTieBreak.pair1,\n          editingTieBreak.pair2\n        );\n        setEditingTieBreaks((prev) => {\n          const newState = { ...prev };\n          delete newState[gameId];\n          return newState;\n        });\n      }\n    },\n    [editingTieBreaks]\n  );\n\n  const updateTieBreakScore = async (\n    gameId: string,\n    pair1Points: number,\n    pair2Points: number\n  ) => {\n    try {\n      setError(\"\");\n\n      setGames((prevGames) =>\n        prevGames.map((g) =>\n          g.id === gameId\n            ? {\n                ...g,\n                tie_break_pair1_points: pair1Points,\n                tie_break_pair2_points: pair2Points,\n              }\n            : g\n        )\n      );\n\n      await updateGame(gameId, {\n        tie_break_pair1_points: pair1Points,\n        tie_break_pair2_points: pair2Points,\n      });\n    } catch (err) {\n      console.error(\"❌ Error al actualizar el tie break:\", err);\n      setError(\"Error al actualizar el tie break: \" + (err as Error).message);\n    }\n  };\n\n  const toggleTieBreak = async (gameId: string) => {\n    try {\n      setError(\"\");\n      const game = games.find((g) => g.id === gameId);\n      if (!game) return;\n\n      const newIsTieBreak = !game.is_tie_break;\n\n      setGames((prevGames) =>\n        prevGames.map((g) =>\n          g.id === gameId\n            ? {\n                ...g,\n                is_tie_break: newIsTieBreak,\n                tie_break_pair1_points: 0,\n                tie_break_pair2_points: 0,\n              }\n            : g\n        )\n      );\n\n      await updateGame(gameId, {\n        is_tie_break: newIsTieBreak,\n        tie_break_pair1_points: 0,\n        tie_break_pair2_points: 0,\n      });\n    } catch (err) {\n      setError(\"Error al cambiar el tipo de juego\");\n      console.error(err);\n    }\n  };\n\n  const removeGame = async (gameId: string) => {\n    try {\n      setError(\"\");\n\n      await deleteGame(gameId);\n      setGames(games.filter((g) => g.id !== gameId));\n    } catch (err) {\n      console.error(\"❌ Error al eliminar el juego:\", err);\n      setError(\"Error al eliminar el juego: \" + (err as Error).message);\n    }\n  };\n\n  const correctGameScore = useCallback(\n    async (\n      gameId: string,\n      pair1Games: number,\n      pair2Games: number,\n      pair1TieBreakPoints: number = 0,\n      pair2TieBreakPoints: number = 0,\n      isTieBreak: boolean = false\n    ) => {\n      try {\n        setError(\"\");\n\n        setGames((prevGames) =>\n          prevGames.map((g) =>\n            g.id === gameId\n              ? {\n                  ...g,\n                  pair1_games: pair1Games,\n                  pair2_games: pair2Games,\n                  tie_break_pair1_points: pair1TieBreakPoints,\n                  tie_break_pair2_points: pair2TieBreakPoints,\n                  is_tie_break: isTieBreak,\n                  updated_at: new Date().toISOString(),\n                }\n              : g\n          )\n        );\n\n        await updateGame(gameId, {\n          pair1_games: pair1Games,\n          pair2_games: pair2Games,\n          tie_break_pair1_points: pair1TieBreakPoints,\n          tie_break_pair2_points: pair2TieBreakPoints,\n          is_tie_break: isTieBreak,\n        });\n      } catch (err) {\n        console.error(\"❌ Error al corregir el marcador:\", err);\n        setError(\"Error al corregir el marcador: \" + (err as Error).message);\n      }\n    },\n    []\n  );\n\n  const finishMatch = async (matchId: string) => {\n    try {\n      setError(\"\");\n      const match = matches.find((m) => m.id === matchId);\n      if (!match) {\n        console.error(\"Match not found:\", matchId);\n        return;\n      }\n\n      const matchGames = games.filter((g) => g.match_id === matchId);\n\n      if (!FlexibleMatchFinisher.canFinishMatch(matchGames)) {\n        setError(\n          \"No se puede finalizar el partido. Verifica que todos los juegos tengan marcadores válidos.\"\n        );\n        return;\n      }\n\n      const result = await FlexibleMatchFinisher.finishMatch(\n        match,\n        matchGames,\n        pairs,\n        async () => {\n          if (selectedTournament) {\n            const pairsData = await getPairs(selectedTournament.id);\n            setPairs(pairsData);\n            setForceRefresh((prev) => prev + 1);\n            const matchesData = await getMatches(selectedTournament.id);\n            setMatches(matchesData);\n          }\n        }\n      );\n\n      if (result.success) {\n        setMatches(\n          matches.map((m) =>\n            m.id === matchId\n              ? { ...m, winner_id: result.winnerId, is_finished: true }\n              : m\n          )\n        );\n\n        if (selectedTournament) {\n          const updatedPairsData = await getPairs(selectedTournament.id);\n          setPairs(updatedPairsData);\n          setForceRefresh((prev) => prev + 1);\n        }\n\n        alert(result.message);\n      } else {\n        setError(result.message);\n      }\n    } catch (err) {\n      setError(\"Error al finalizar el partido\");\n      console.error(err);\n    }\n  };\n\n  const handleMatchSelect = (matchId: string) => {\n    setSelectedMatchId(matchId);\n    loadMatchGames(matchId);\n  };\n\n  const loadMatchGames = async (matchId: string) => {\n    try {\n      const gamesData = await getGames(matchId);\n      setGames(gamesData);\n    } catch (err) {\n      console.error(\"❌ Error al cargar juegos:\", err);\n    }\n  };\n\n  const selectedMatch = matches.find((match) => match.id === selectedMatchId);\n\n  const matchesByRound = matches.reduce((acc, match) => {\n    if (!acc[match.round]) {\n      acc[match.round] = [];\n    }\n    acc[match.round].push(match);\n    return acc;\n  }, {} as Record<number, Match[]>);\n\n  const sortedPairs = useMemo(() => {\n    return [...pairs].sort((a, b) => {\n      if (a.sets_won !== b.sets_won) {\n        return b.sets_won - a.sets_won;\n      }\n      if (a.games_won !== b.games_won) {\n        return b.games_won - a.games_won;\n      }\n      return b.points - a.points;\n    });\n  }, [pairs, forceRefresh]);\n\n  const isTournamentFinished = useMemo(() => {\n    return matches.length > 0 && matches.every((match) => match.is_finished);\n  }, [matches]);\n\n  const winner = useMemo(() => {\n    return sortedPairs.length > 0 ? sortedPairs[0] : null;\n  }, [sortedPairs]);\n\n  const showWinnerScreenHandler = () => {\n    setShowWinnerScreen(true);\n  };\n\n  const hideWinnerScreenHandler = () => {\n    setShowWinnerScreen(false);\n  };\n\n  const showMatchResultsHandler = (match: Match) => {\n    setSelectedMatchResults(match);\n    setShowMatchResults(true);\n  };\n\n  const hideMatchResultsHandler = () => {\n    setShowMatchResults(false);\n    setSelectedMatchResults(null);\n  };\n\n  const handleViewTournamentResults = async (tournament: Tournament) => {\n    try {\n      setSelectedTournament(tournament);\n      await loadTournamentData();\n      alert(\n        `✅ Torneo \"${tournament.name}\" seleccionado\\n\\nAhora puedes ver todos los partidos y resultados en el panel derecho.`\n      );\n    } catch (err) {\n      console.error(\"❌ Error al cargar resultados del torneo:\", err);\n      alert(\"Error al cargar los resultados del torneo. Inténtalo de nuevo.\");\n    }\n  };\n\n  const recalculateMatchWinner = async (matchId: string) => {\n    try {\n      const match = matches.find((m) => m.id === matchId);\n      if (!match) {\n        console.error(\"Match not found:\", matchId);\n        return;\n      }\n\n      const matchGames = await getGames(matchId);\n\n      if (matchGames.length === 0) {\n        console.log(\"No hay juegos para recalcular\");\n        return;\n      }\n\n      let pair1Games = 0;\n      let pair2Games = 0;\n\n      matchGames.forEach((game) => {\n        if (game.is_tie_break) {\n          if (\n            game.tie_break_pair1_points >= 10 &&\n            game.tie_break_pair1_points - game.tie_break_pair2_points >= 2\n          ) {\n            pair1Games++;\n          } else if (\n            game.tie_break_pair2_points >= 10 &&\n            game.tie_break_pair2_points - game.tie_break_pair1_points >= 2\n          ) {\n            pair2Games++;\n          }\n        } else {\n          if (game.pair1_games > game.pair2_games) {\n            pair1Games++;\n          } else if (game.pair2_games > game.pair1_games) {\n            pair2Games++;\n          }\n        }\n      });\n\n      const isTie = pair1Games === pair2Games;\n      const winnerId = isTie\n        ? undefined\n        : pair1Games > pair2Games\n        ? match.pair1_id\n        : match.pair2_id;\n\n      await updateMatch(matchId, {\n        winner_id: winnerId,\n        is_finished: true,\n      });\n\n      console.log(\"✅ Ganador recalculado y actualizado en la base de datos\");\n    } catch (error) {\n      console.error(\"Error recalculating match winner:\", error);\n    }\n  };\n\n  const handleBackToHome = () => {\n    setSelectedTournament(null);\n    setPairs([]);\n    setMatches([]);\n    setGames([]);\n    setSelectedMatchId(null);\n    setError(\"\");\n    setShowWinnerScreen(false);\n    setShowMatchResults(false);\n    setSelectedMatchResults(null);\n    setShowScoreCorrector(false);\n    setSelectedCorrectorMatch(null);\n    setForceRefresh(0);\n    setShowDebugInfo(false);\n    setEditingGames({});\n    setEditingTieBreaks({});\n    setShowSuccessModal(false);\n    setSuccessModalData({\n      title: \"\",\n      message: \"\",\n      icon: \"✅\",\n    });\n  };\n\n  const openScoreCorrector = (match: Match) => {\n    setSelectedCorrectorMatch(match);\n    setShowScoreCorrector(true);\n  };\n\n  const closeScoreCorrector = () => {\n    setShowScoreCorrector(false);\n    setSelectedCorrectorMatch(null);\n  };\n\n  const handleScoreCorrectorUpdate = async () => {\n    if (selectedTournament) {\n      await loadTournamentData();\n    }\n    closeScoreCorrector();\n  };\n\n  return (\n    <div className=\"App\">\n      <div className=\"container\">\n        <h1>🏆 Gestión de Torneos Express y Retas</h1>\n\n        {error && (\n          <div className=\"error\">\n            <h4>❌ Error</h4>\n            <p>{error}</p>\n            <div className=\"error-help\">\n              <h5>💡 Ayuda:</h5>\n              <ol>\n                <li>Verifica tu conexión a internet</li>\n                <li>Intenta recargar la página</li>\n                <li>Si el problema persiste, contacta al administrador</li>\n              </ol>\n            </div>\n          </div>\n        )}\n\n        {loading && (\n          <div className=\"loading\">\n            <p>⏳ Cargando...</p>\n          </div>\n        )}\n\n        <div className=\"main-layout\">\n          <div className=\"left-panel\">\n            <TournamentManager\n              selectedTournament={selectedTournament || undefined}\n              onTournamentSelect={setSelectedTournament}\n              onViewResults={handleViewTournamentResults}\n            />\n          </div>\n\n          <div className=\"right-panel\">\n            {selectedTournament ? (\n              <>\n                <div className=\"tournament-details\">\n                  <div className=\"tournament-header\">\n                    <div className=\"tournament-header-content\">\n                      <div className=\"tournament-title-section\">\n                        <div className=\"tournament-icon\">🏆</div>\n                        <div className=\"tournament-info\">\n                          <h2>{selectedTournament.name}</h2>\n                          {selectedTournament.description && (\n                            <div className=\"tournament-description\">\n                              {selectedTournament.description}\n                            </div>\n                          )}\n                        </div>\n                      </div>\n                      <div className=\"tournament-stats-section\">\n                        <div className=\"stats-row\">\n                          <span className=\"stat-badge\">\n                            {selectedTournament.courts} canchas\n                          </span>\n                          <span className=\"stat-badge\">\n                            {pairs.length} parejas\n                          </span>\n                        </div>\n                        <div className=\"stats-row\">\n                          <span className=\"stat-badge\">\n                            {matches.length} partidos\n                          </span>\n                          <span\n                            className={`status-badge ${\n                              selectedTournament.is_started\n                                ? \"started\"\n                                : \"pending\"\n                            }`}\n                          >\n                            {selectedTournament.is_started\n                              ? \"En Progreso\"\n                              : \"Pendiente\"}\n                          </span>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n\n                  {/* Gestión de Jugadores - MOVIDA AQUÍ */}\n                  <div className=\"player-management-section\">\n                    <div className=\"player-management-header\">\n                      <h3>👥 Gestión de Jugadores</h3>\n                      <button\n                        className=\"toggle-player-manager-btn\"\n                        onClick={() => setShowPlayerManager(!showPlayerManager)}\n                      >\n                        {showPlayerManager\n                          ? \"👥 Ocultar Gestión de Jugadores\"\n                          : \"👥 Mostrar Gestión de Jugadores\"}\n                      </button>\n                    </div>\n\n                    {showPlayerManager && (\n                      <div className=\"player-manager-container\">\n                        <PlayerManager\n                          playersInPairs={pairs.flatMap((pair) => [\n                            pair.player1_id,\n                            pair.player2_id,\n                          ])}\n                          onPlayerSelect={(players) => {\n                            console.log(\"=== SELECCIÓN DE JUGADORES ===\");\n                            console.log(\"Players selected:\", players.length);\n                            players.forEach((player, index) => {\n                              console.log(\n                                `Player ${index + 1}:`,\n                                player.name,\n                                \"(ID:\",\n                                player.id + \")\"\n                              );\n                            });\n\n                            // Validación: Verificar si algún jugador ya está en una pareja\n                            const playersInPairs = players.filter((player) => {\n                              const isInPair = pairs.some(\n                                (pair) =>\n                                  pair.player1_id === player.id ||\n                                  pair.player2_id === player.id\n                              );\n\n                              if (isInPair) {\n                                const existingPair = pairs.find(\n                                  (pair) =>\n                                    pair.player1_id === player.id ||\n                                    pair.player2_id === player.id\n                                );\n                                console.log(\n                                  `🚨 JUGADOR YA EN PAREJA: ${\n                                    player.name\n                                  } está en pareja con ${\n                                    existingPair?.player1?.id === player.id\n                                      ? existingPair?.player2?.name\n                                      : existingPair?.player1?.name\n                                  }`\n                                );\n                              }\n\n                              return isInPair;\n                            });\n\n                            if (playersInPairs.length > 0) {\n                              const playerNames = playersInPairs\n                                .map((p) => p.name)\n                                .join(\", \");\n                              console.log(\n                                \"🚨 ERROR: Jugadores ya están en parejas:\",\n                                playerNames\n                              );\n                              setError(\n                                `Los jugadores ${playerNames} ya están en parejas existentes. Debes eliminar sus parejas actuales antes de poder seleccionarlos nuevamente.`\n                              );\n                              return;\n                            }\n\n                            // Validación: No permitir jugadores con nombres iguales\n                            if (players.length === 2) {\n                              const player1 = players[0];\n                              const player2 = players[1];\n\n                              if (\n                                player1.name.toLowerCase() ===\n                                player2.name.toLowerCase()\n                              ) {\n                                console.log(\n                                  \"🚨 ERROR: Jugadores con nombres iguales detectados\"\n                                );\n                                console.log(\n                                  \"Player 1:\",\n                                  player1.name,\n                                  \"(ID:\",\n                                  player1.id + \")\"\n                                );\n                                console.log(\n                                  \"Player 2:\",\n                                  player2.name,\n                                  \"(ID:\",\n                                  player2.id + \")\"\n                                );\n                                setError(\n                                  \"No puedes seleccionar dos jugadores con el mismo nombre\"\n                                );\n                                return;\n                              }\n\n                              // Validación: Verificar si ya existe una pareja con estos jugadores\n                              const existingPair = pairs.find((pair) => {\n                                const sameIds =\n                                  (pair.player1_id === player1.id &&\n                                    pair.player2_id === player2.id) ||\n                                  (pair.player1_id === player2.id &&\n                                    pair.player2_id === player1.id);\n\n                                const sameNames =\n                                  (pair.player1?.name.toLowerCase() ===\n                                    player1.name.toLowerCase() &&\n                                    pair.player2?.name.toLowerCase() ===\n                                      player2.name.toLowerCase()) ||\n                                  (pair.player1?.name.toLowerCase() ===\n                                    player2.name.toLowerCase() &&\n                                    pair.player2?.name.toLowerCase() ===\n                                      player1.name.toLowerCase());\n\n                                if (sameIds || sameNames) {\n                                  console.log(\n                                    \"🚨 PAREJA DUPLICADA DETECTADA:\",\n                                    player1.name,\n                                    \"+\",\n                                    player2.name\n                                  );\n                                  console.log(\"Existing pair:\", existingPair);\n                                }\n\n                                return sameIds || sameNames;\n                              });\n\n                              if (existingPair) {\n                                console.log(\n                                  \"🚨 ERROR: Pareja ya existe en la base de datos\"\n                                );\n                                setError(\n                                  `La pareja ${player1.name} + ${player2.name} ya existe en el torneo`\n                                );\n                                return;\n                              }\n\n                              // Si llegamos aquí, la pareja es válida\n                              console.log(\n                                \"✅ PAREJA VÁLIDA:\",\n                                player1.name,\n                                \"+\",\n                                player2.name\n                              );\n                              addPair(player1, player2);\n                              setSelectedPlayers([]); // Limpiar selección después de crear la pareja\n                            } else {\n                              setSelectedPlayers(players);\n                            }\n                          }}\n                          selectedPlayers={selectedPlayers}\n                          allowMultipleSelection={true}\n                        />\n                      </div>\n                    )}\n                  </div>\n\n                  {!selectedTournament.is_started && (\n                    <div className=\"start-tournament-section\">\n                      <h3>🚀 Iniciar Torneo</h3>\n                      <div className=\"tournament-info\">\n                        <p>Tienes {pairs.length} parejas registradas</p>\n                        <p>\n                          Se crearán {(pairs.length * (pairs.length - 1)) / 2}{\" \"}\n                          partidos (round-robin completo - todas las parejas se\n                          enfrentan)\n                        </p>\n                        <p>\n                          Estado del torneo:{\" \"}\n                          {selectedTournament.is_started\n                            ? \"Iniciado\"\n                            : \"Pendiente\"}\n                        </p>\n                      </div>\n                      <button\n                        className=\"start-button\"\n                        onClick={startTournament}\n                        disabled={loading || pairs.length < 2}\n                      >\n                        {loading\n                          ? \"⏳ Iniciando...\"\n                          : selectedTournament.is_started\n                          ? \"🏆 Torneo Ya Iniciado\"\n                          : pairs.length < 2\n                          ? \"❌ Necesitas al menos 2 parejas\"\n                          : \"🚀 ¡Iniciar Torneo!\"}\n                      </button>\n                    </div>\n                  )}\n\n                  {/* Debug info - COLAPSIBLE */}\n                  {selectedTournament && (\n                    <div className=\"debug-section\">\n                      <button\n                        className=\"debug-toggle-btn\"\n                        onClick={() => setShowDebugInfo(!showDebugInfo)}\n                      >\n                        {showDebugInfo ? \"🔽\" : \"🔼\"} Debug Info\n                      </button>\n\n                      {showDebugInfo && (\n                        <div className=\"debug-info\">\n                          <div className=\"debug-header\">\n                            <h4>🔧 Información de Debug</h4>\n                            <div className=\"debug-stats\">\n                              <span>\n                                Estado:{\" \"}\n                                {selectedTournament.is_started\n                                  ? \"✅ Iniciado\"\n                                  : \"⏳ Pendiente\"}\n                              </span>\n                              <span>Parejas: {pairs.length}</span>\n                              <span>Partidos: {matches.length}</span>\n                            </div>\n                          </div>\n\n                          <div className=\"debug-buttons\">\n                            <button\n                              onClick={async () => {\n                                console.log(\"=== PROBAR CONEXIÓN ===\");\n                                const isConnected = await testConnection();\n                                if (isConnected) {\n                                  setError(\"\");\n                                } else {\n                                  setError(\n                                    \"❌ Error de conexión a Supabase. Verifica tu configuración.\"\n                                  );\n                                }\n                              }}\n                              className=\"debug-btn connection-btn\"\n                            >\n                              🔌 Probar Conexión\n                            </button>\n\n                            <button\n                              onClick={() => {\n                                console.log(\n                                  \"=== FORZANDO RECARGA DE DATOS ===\"\n                                );\n                                loadTournamentData();\n                              }}\n                              className=\"debug-btn reload-btn\"\n                            >\n                              🔄 Recargar Datos\n                            </button>\n\n                            <button\n                              onClick={async () => {\n                                console.log(\n                                  \"=== VERIFICANDO ESTADO DEL TORNEO ===\"\n                                );\n                                try {\n                                  console.log(\n                                    \"Estado actual del torneo:\",\n                                    selectedTournament\n                                  );\n                                  console.log(\n                                    \"Parejas en estado:\",\n                                    pairs.length\n                                  );\n                                  console.log(\n                                    \"Partidos en estado:\",\n                                    matches.length\n                                  );\n\n                                  const dbPairs = await getPairs(\n                                    selectedTournament.id\n                                  );\n                                  const dbMatches = await getMatches(\n                                    selectedTournament.id\n                                  );\n\n                                  console.log(\"Parejas en BD:\", dbPairs.length);\n                                  console.log(\n                                    \"Partidos en BD:\",\n                                    dbMatches.length\n                                  );\n\n                                  alert(\n                                    `Estado del torneo:\\n\\nParejas: ${\n                                      pairs.length\n                                    } (estado) / ${\n                                      dbPairs.length\n                                    } (BD)\\nPartidos: ${\n                                      matches.length\n                                    } (estado) / ${\n                                      dbMatches.length\n                                    } (BD)\\n\\nTorneo iniciado: ${\n                                      selectedTournament.is_started\n                                        ? \"Sí\"\n                                        : \"No\"\n                                    }`\n                                  );\n                                } catch (error) {\n                                  console.error(\n                                    \"Error verificando estado:\",\n                                    error\n                                  );\n                                }\n                              }}\n                              className=\"debug-btn status-btn\"\n                            >\n                              🔍 Verificar Estado\n                            </button>\n                          </div>\n                        </div>\n                      )}\n                    </div>\n                  )}\n\n                  {/* Mostrar parejas creadas */}\n                  {pairs.length > 0 && (\n                    <div className=\"pairs-display\">\n                      <h3>👥 Parejas Registradas ({pairs.length})</h3>\n                      <div className=\"pairs-grid\">\n                        {pairs.map((pair, index) => (\n                          <div key={pair.id} className=\"pair-display-card\">\n                            <div className=\"pair-number\">#{index + 1}</div>\n                            <div className=\"pair-names\">\n                              {pair.player1?.name} y {pair.player2?.name}\n                            </div>\n                            <div className=\"pair-stats\">\n                              <span>Sets: {pair.sets_won}</span>\n                              <span>Partidos: {pair.matches_played}</span>\n                              <span>Puntos: {pair.points}</span>\n                            </div>\n                            <button\n                              onClick={() => {\n                                if (\n                                  window.confirm(\n                                    `¿Estás seguro de que quieres eliminar la pareja \"${pair.player1?.name} y ${pair.player2?.name}\"?`\n                                  )\n                                ) {\n                                  deletePair(pair.id);\n                                }\n                              }}\n                              className=\"delete-pair-btn\"\n                              title=\"Eliminar pareja\"\n                            >\n                              🗑️\n                            </button>\n                          </div>\n                        ))}\n                      </div>\n                    </div>\n                  )}\n\n                  {selectedTournament.is_started && (\n                    <div className=\"tournament-content\">\n                      {/* Lista de partidos */}\n                      <div className=\"matches-section\">\n                        <h3>🎾 Partidos ({matches.length} total)</h3>\n                        {matches.length === 0 ? (\n                          <div className=\"no-matches\">\n                            <p>📝 No hay partidos programados aún</p>\n                            <p>\n                              Inicia el torneo para generar los partidos\n                              automáticamente\n                            </p>\n                          </div>\n                        ) : (\n                          Object.entries(matchesByRound).map(\n                            ([round, roundMatches]) => (\n                              <div key={round} className=\"round-section\">\n                                <h4>\n                                  🔄 Ronda {round} ({roundMatches.length}{\" \"}\n                                  partidos)\n                                </h4>\n                                <div className=\"matches-container\">\n                                  {roundMatches.map((match) => (\n                                    <div\n                                      key={match.id}\n                                      className={`match-card ${\n                                        selectedMatchId === match.id\n                                          ? \"selected\"\n                                          : \"\"\n                                      }`}\n                                      onClick={() =>\n                                        handleMatchSelect(match.id)\n                                      }\n                                    >\n                                      <div className=\"match-header\">\n                                        <h5>\n                                          {match.pair1?.player1?.name} y{\" \"}\n                                          {match.pair1?.player2?.name} vs{\" \"}\n                                          {match.pair2?.player1?.name} y{\" \"}\n                                          {match.pair2?.player2?.name}\n                                        </h5>\n                                        <div className=\"match-info\">\n                                          <span className=\"court-badge\">\n                                            🏟️ Cancha {match.court}\n                                          </span>\n                                          <span className=\"round-badge\">\n                                            🔄 Ronda {match.round}\n                                          </span>\n                                        </div>\n                                      </div>\n                                      <div className=\"match-details\">\n                                        <p className=\"match-pairs\">\n                                          <strong>Pareja 1:</strong>{\" \"}\n                                          {match.pair1?.player1?.name} y{\" \"}\n                                          {match.pair1?.player2?.name}\n                                        </p>\n                                        <p className=\"match-pairs\">\n                                          <strong>Pareja 2:</strong>{\" \"}\n                                          {match.pair2?.player1?.name} y{\" \"}\n                                          {match.pair2?.player2?.name}\n                                        </p>\n                                      </div>\n                                      {match.winner_id && (\n                                        <div className=\"winner\">\n                                          <span className=\"winner-icon\">\n                                            🏆\n                                          </span>\n                                          Ganador:{\" \"}\n                                          {match.winner_id === match.pair1_id\n                                            ? `${match.pair1?.player1?.name} y ${match.pair1?.player2?.name}`\n                                            : `${match.pair2?.player1?.name} y ${match.pair2?.player2?.name}`}\n                                        </div>\n                                      )}\n                                      {match.is_finished &&\n                                        !match.winner_id && (\n                                          <div className=\"winner\">\n                                            <span className=\"winner-icon\">\n                                              🤝\n                                            </span>\n                                            Empate: {match.pair1?.player1?.name}{\" \"}\n                                            y {match.pair1?.player2?.name} vs{\" \"}\n                                            {match.pair2?.player1?.name} y{\" \"}\n                                            {match.pair2?.player2?.name}\n                                          </div>\n                                        )}\n                                      <div className=\"match-status\">\n                                        {match.is_finished ? (\n                                          <span className=\"status-finished\">\n                                            ✔ Finalizado\n                                          </span>\n                                        ) : (\n                                          <span className=\"status-pending\">\n                                            ⏳ Pendiente\n                                          </span>\n                                        )}\n                                      </div>\n                                      <div className=\"match-actions\">\n                                        <button\n                                          onClick={(e) => {\n                                            e.stopPropagation();\n                                            showMatchResultsHandler(match);\n                                          }}\n                                          className=\"view-results-btn\"\n                                        >\n                                          📊 Ver Resultados\n                                        </button>\n                                        <button\n                                          onClick={(e) => {\n                                            e.stopPropagation();\n                                            openScoreCorrector(match);\n                                          }}\n                                          className=\"correct-result-btn\"\n                                        >\n                                          ✏️ Corregir Marcador\n                                        </button>\n                                      </div>\n                                    </div>\n                                  ))}\n                                </div>\n                              </div>\n                            )\n                          )\n                        )}\n                      </div>\n\n                      {/* Detalles del partido seleccionado */}\n                      {selectedMatch && (\n                        <div className=\"match-management\">\n                          <MatchStatusDisplay\n                            match={selectedMatch}\n                            games={games.filter(\n                              (g) => g.match_id === selectedMatch.id\n                            )}\n                            pairs={pairs}\n                          />\n                        </div>\n                      )}\n\n                      {/* Tabla de clasificación */}\n                      <StandingsTable\n                        tournamentId={selectedTournament.id}\n                        forceRefresh={forceRefresh}\n                      />\n\n                      {/* Botón para mostrar ganador */}\n                      {isTournamentFinished && winner && (\n                        <div className=\"winner-button-container\">\n                          <button\n                            className=\"show-winner-button\"\n                            onClick={showWinnerScreenHandler}\n                          >\n                            🏆 ¡Ver Ganador!\n                          </button>\n                        </div>\n                      )}\n\n                      {/* Botón para volver al inicio */}\n                      <div className=\"back-home-button-container\">\n                        <button\n                          className=\"back-home-button\"\n                          onClick={handleBackToHome}\n                        >\n                          🏠 Volver al Inicio\n                        </button>\n                      </div>\n                    </div>\n                  )}\n                </div>\n              </>\n            ) : (\n              <div className=\"no-tournament-selected\">\n                <h2>🏆 Bienvenido al Gestor de Torneos</h2>\n                <p>\n                  Selecciona un torneo del panel izquierdo para comenzar a\n                  gestionar partidos y resultados.\n                </p>\n              </div>\n            )}\n          </div>\n        </div>\n\n        {/* Pantalla de ganador */}\n        {showWinnerScreen && winner && (\n          <div className=\"winner-screen\">\n            <div className=\"winner-content\">\n              <div className=\"winner-celebration\">\n                <h1 className=\"winner-title\">🏆 ¡FELICIDADES! 🏆</h1>\n                <div className=\"winner-names\">\n                  {winner.player1?.name} y {winner.player2?.name}\n                </div>\n                <div className=\"winner-subtitle\">\n                  ¡Son los campeones del torneo!\n                </div>\n                <div className=\"winner-stats\">\n                  <div className=\"stat-item\">\n                    <span className=\"stat-number\">{winner.sets_won}</span>\n                    <span className=\"stat-label\">Sets Ganados</span>\n                  </div>\n                  <div className=\"stat-item\">\n                    <span className=\"stat-number\">{winner.games_won}</span>\n                    <span className=\"stat-label\">Partidos Ganados</span>\n                  </div>\n                  <div className=\"stat-item\">\n                    <span className=\"stat-number\">{winner.points}</span>\n                    <span className=\"stat-label\">Puntos Totales</span>\n                  </div>\n                </div>\n                <button\n                  className=\"back-button\"\n                  onClick={hideWinnerScreenHandler}\n                >\n                  🏠 Volver al Torneo\n                </button>\n              </div>\n            </div>\n          </div>\n        )}\n\n        {/* Modal de resultados de partido */}\n        {showMatchResults && selectedMatchResults && (\n          <MatchResults\n            match={selectedMatchResults}\n            isOpen={showMatchResults}\n            onClose={hideMatchResultsHandler}\n          />\n        )}\n\n        {/* Modal de corrección de marcador */}\n        {showScoreCorrector && selectedCorrectorMatch && (\n          <ScoreCorrector\n            match={selectedCorrectorMatch}\n            onClose={closeScoreCorrector}\n            onUpdate={handleScoreCorrectorUpdate}\n          />\n        )}\n\n        {/* Modal de éxito */}\n        {showSuccessModal && (\n          <SuccessModal\n            title={successModalData.title}\n            message={successModalData.message}\n            icon={successModalData.icon}\n            isOpen={showSuccessModal}\n            onClose={() => setShowSuccessModal(false)}\n          />\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}