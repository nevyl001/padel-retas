{"ast":null,"code":"import React,{useState,useEffect,useCallback,useMemo}from\"react\";import\"./App.css\";import{TournamentManager}from\"./components/TournamentManager\";import{PlayerManager}from\"./components/PlayerManager\";import{PairManager}from\"./components/PairManager\";import{MatchScoreEditor}from\"./components/MatchScoreEditor\";import StandingsTable from\"./components/StandingsTable\";import{SuccessModal}from\"./components/SuccessModal\";import{createPair,getPairs,updatePair,deletePair as deletePairFromDB,createMatch,getMatches,updateMatch,deleteMatchesByTournament,createGame,getGames,updateGame,deleteGame,updateTournament}from\"./lib/database\";import{testConnection}from\"./lib/supabaseClient\";import{FlexibleMatchFinisher}from\"./components/FlexibleMatchFinisher\";import{MatchResultCalculator}from\"./components/MatchResultCalculator\";import{TournamentWinnerCalculator}from\"./components/TournamentWinnerCalculator\";import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";function App(){var _winner$player,_winner$player2,_selectedMatchResults,_selectedMatchResults2,_selectedMatchResults3,_selectedMatchResults4,_selectedMatchResults5,_selectedMatchResults6,_selectedMatchResults7,_selectedMatchResults8,_calculatedMatchResul,_selectedMatchResults9,_calculatedMatchResul2,_selectedMatchResults0,_calculatedMatchResul3,_selectedMatchResults1,_calculatedMatchResul4,_selectedMatchResults10,_calculatedMatchResul5,_selectedMatchResults11,_calculatedMatchResul6,_selectedMatchResults12;const[selectedTournament,setSelectedTournament]=useState(null);const[pairs,setPairs]=useState([]);const[matches,setMatches]=useState([]);const[games,setGames]=useState([]);const[selectedMatchId,setSelectedMatchId]=useState(null);const[error,setError]=useState(\"\");const[loading,setLoading]=useState(false);const[showPlayerManager,setShowPlayerManager]=useState(false);const[showPairManager,setShowPairManager]=useState(false);const[selectedPlayers,setSelectedPlayers]=useState([]);const[showWinnerScreen,setShowWinnerScreen]=useState(false);const[showMatchResults,setShowMatchResults]=useState(false);const[selectedMatchResults,setSelectedMatchResults]=useState(null);const[calculatedMatchResults,setCalculatedMatchResults]=useState(null);const[showScoreCorrector,setShowScoreCorrector]=useState(false);const[selectedCorrectorMatch,setSelectedCorrectorMatch]=useState(null);const[forceRefresh,setForceRefresh]=useState(0);const[showDebugInfo,setShowDebugInfo]=useState(false);const[editingGames,setEditingGames]=useState({});const[editingTieBreaks,setEditingTieBreaks]=useState({});const[showSuccessModal,setShowSuccessModal]=useState(false);const[successModalData,setSuccessModalData]=useState({title:\"\",message:\"\",icon:\"✅\"});// Cargar datos cuando se selecciona un torneo\nuseEffect(()=>{if(selectedTournament){loadTournamentData();}},[selectedTournament===null||selectedTournament===void 0?void 0:selectedTournament.id]);const loadTournamentData=useCallback(async()=>{if(!selectedTournament)return;try{setLoading(true);setError(\"\");console.log(\"Loading tournament data for:\",selectedTournament.name);const[pairsData,matchesData]=await Promise.all([getPairs(selectedTournament.id),getMatches(selectedTournament.id)]);console.log(\"Pairs loaded:\",pairsData.length,\"pairs\");setPairs(pairsData);console.log(\"Matches loaded from database:\",matchesData.length,\"matches\");setMatches(matchesData);}catch(err){console.error(\"Error loading tournament data:\",err);setError(\"Error al cargar los datos del torneo: \"+err.message);}finally{setLoading(false);}},[selectedTournament]);const deletePair=async pairId=>{try{setError(\"\");console.log(\"Eliminando pareja:\",pairId);await deletePairFromDB(pairId);setPairs(pairs.filter(p=>p.id!==pairId));console.log(\"Pareja eliminada exitosamente\");}catch(err){console.error(\"Error eliminando pareja:\",err);setError(\"Error al eliminar la pareja: \"+err.message);}};const updatePairPlayers=async(pairId,player1,player2)=>{try{setError(\"\");console.log(\"Actualizando pareja:\",pairId);console.log(\"Nuevos jugadores:\",player1.name,\"+\",player2.name);// Actualizar la pareja en la base de datos\nawait updatePair(pairId,{player1_id:player1.id,player2_id:player2.id});// Actualizar el estado local\nsetPairs(pairs.map(pair=>{if(pair.id===pairId){return{...pair,player1_id:player1.id,player2_id:player2.id,player1:player1,player2:player2};}return pair;}));console.log(\"Pareja actualizada exitosamente\");}catch(err){console.error(\"Error actualizando pareja:\",err);setError(\"Error al actualizar la pareja: \"+err.message);}};const addPair=async(player1,player2)=>{if(!selectedTournament){setError(\"No hay torneo seleccionado\");return;}try{setError(\"\");// Verificar duplicados en estado local\nconst existingPairLocal=pairs.find(pair=>{var _pair$player,_pair$player2,_pair$player3,_pair$player4;const sameIds=pair.player1_id===player1.id&&pair.player2_id===player2.id||pair.player1_id===player2.id&&pair.player2_id===player1.id;const sameNames=((_pair$player=pair.player1)===null||_pair$player===void 0?void 0:_pair$player.name.toLowerCase())===player1.name.toLowerCase()&&((_pair$player2=pair.player2)===null||_pair$player2===void 0?void 0:_pair$player2.name.toLowerCase())===player2.name.toLowerCase()||((_pair$player3=pair.player1)===null||_pair$player3===void 0?void 0:_pair$player3.name.toLowerCase())===player2.name.toLowerCase()&&((_pair$player4=pair.player2)===null||_pair$player4===void 0?void 0:_pair$player4.name.toLowerCase())===player1.name.toLowerCase();return sameIds||sameNames;});if(existingPairLocal){setError(`La pareja ${player1.name} y ${player2.name} ya está registrada`);return;}const newPair=await createPair(selectedTournament.id,player1.id,player2.id);setPairs([...pairs,newPair]);setSelectedPlayers([]);console.log(\"Pair added successfully\");}catch(err){console.error(\"Error creating pair:\",err);setError(\"Error al crear la pareja: \"+err.message);}};const startTournament=async()=>{if(!selectedTournament||pairs.length<2){setError(\"Se necesitan al menos 2 parejas para iniciar el torneo\");return;}try{setLoading(true);setError(\"\");console.log(\"🚀 Iniciando torneo:\",selectedTournament.name);// Limpiar partidos existentes\nif(matches.length>0){await deleteMatchesByTournament(selectedTournament.id);setMatches([]);}const allPairs=[...pairs];const allCombinations=[];for(let i=0;i<allPairs.length;i++){for(let j=i+1;j<allPairs.length;j++){allCombinations.push({pair1:allPairs[i],pair2:allPairs[j]});}}const finalMatches=[];const remainingCombinations=[...allCombinations];let round=1;while(remainingCombinations.length>0){const roundMatches=[];const usedPairs=new Set();const courtOrder=[];for(let i=0;i<selectedTournament.courts;i++){const rotatedCourt=(round-1+i)%selectedTournament.courts+1;courtOrder.push(rotatedCourt);}for(let courtIndex=0;courtIndex<courtOrder.length;courtIndex++){const court=courtOrder[courtIndex];let bestIndex=-1;let bestScore=-1;for(let i=0;i<remainingCombinations.length;i++){const combo=remainingCombinations[i];if(!usedPairs.has(combo.pair1.id)&&!usedPairs.has(combo.pair2.id)){let score=0;for(let j=0;j<remainingCombinations.length;j++){if(i!==j){const futureCombo=remainingCombinations[j];if(!usedPairs.has(futureCombo.pair1.id)&&!usedPairs.has(futureCombo.pair2.id)&&futureCombo.pair1.id!==combo.pair1.id&&futureCombo.pair1.id!==combo.pair2.id&&futureCombo.pair2.id!==combo.pair1.id&&futureCombo.pair2.id!==combo.pair2.id){score++;}}}if(score>bestScore){bestScore=score;bestIndex=i;}}}if(bestIndex!==-1){const combo=remainingCombinations[bestIndex];const match={pair1:combo.pair1,pair2:combo.pair2,round,court};roundMatches.push(match);usedPairs.add(combo.pair1.id);usedPairs.add(combo.pair2.id);remainingCombinations.splice(bestIndex,1);}else{break;}}if(roundMatches.length>0){finalMatches.push(...roundMatches);}round++;}const createdMatches=[];for(const match of finalMatches){try{const createdMatch=await createMatch(selectedTournament.id,match.pair1.id,match.pair2.id,match.court,match.round);createdMatches.push(createdMatch);}catch(error){console.error(\"Error creating match:\",error);}}await updateTournament(selectedTournament.id,{is_started:true});setSelectedTournament(prev=>prev?{...prev,is_started:true}:null);await loadTournamentData();setSuccessModalData({title:\"¡Torneo Iniciado!\",message:`Se han creado ${createdMatches.length} partidos exitosamente usando ${selectedTournament.courts} canchas. El torneo está listo para comenzar.`,icon:\"🏆\"});setShowSuccessModal(true);}catch(error){console.error(\"Error starting tournament:\",error);setError(\"Error al iniciar el torneo: \"+error.message);}finally{setLoading(false);}};const addGame=async matchId=>{try{setError(\"\");const gameNumber=games.filter(g=>g.match_id===matchId).length+1;const newGame=await createGame(matchId,gameNumber);setGames([...games,newGame]);}catch(err){console.error(\"❌ Error al agregar el juego:\",err);setError(\"Error al agregar el juego\");}};const updateGameScore=useCallback(async(gameId,pair1Games,pair2Games)=>{try{setError(\"\");setGames(prevGames=>prevGames.map(g=>g.id===gameId?{...g,pair1_games:pair1Games,pair2_games:pair2Games}:g));await updateGame(gameId,{pair1_games:pair1Games,pair2_games:pair2Games});}catch(err){console.error(\"❌ Error al actualizar el marcador:\",err);setError(\"Error al actualizar el marcador: \"+err.message);}},[games,selectedTournament]);const handleGameScoreChange=useCallback((gameId,pair1Games,pair2Games)=>{setEditingGames(prev=>({...prev,[gameId]:{pair1:pair1Games,pair2:pair2Games}}));},[]);const handleTieBreakScoreChange=useCallback((gameId,pair1Points,pair2Points)=>{setEditingTieBreaks(prev=>({...prev,[gameId]:{pair1:pair1Points,pair2:pair2Points}}));},[]);const handleGameScoreBlur=useCallback(async gameId=>{const editingGame=editingGames[gameId];if(editingGame){await updateGameScore(gameId,editingGame.pair1,editingGame.pair2);setEditingGames(prev=>{const newState={...prev};delete newState[gameId];return newState;});}},[editingGames]);const handleTieBreakScoreBlur=useCallback(async gameId=>{const editingTieBreak=editingTieBreaks[gameId];if(editingTieBreak){await updateTieBreakScore(gameId,editingTieBreak.pair1,editingTieBreak.pair2);setEditingTieBreaks(prev=>{const newState={...prev};delete newState[gameId];return newState;});}},[editingTieBreaks]);const updateTieBreakScore=async(gameId,pair1Points,pair2Points)=>{try{setError(\"\");setGames(prevGames=>prevGames.map(g=>g.id===gameId?{...g,tie_break_pair1_points:pair1Points,tie_break_pair2_points:pair2Points}:g));await updateGame(gameId,{tie_break_pair1_points:pair1Points,tie_break_pair2_points:pair2Points});}catch(err){console.error(\"❌ Error al actualizar el tie break:\",err);setError(\"Error al actualizar el tie break: \"+err.message);}};const toggleTieBreak=async gameId=>{try{setError(\"\");const game=games.find(g=>g.id===gameId);if(!game)return;const newIsTieBreak=!game.is_tie_break;setGames(prevGames=>prevGames.map(g=>g.id===gameId?{...g,is_tie_break:newIsTieBreak,tie_break_pair1_points:0,tie_break_pair2_points:0}:g));await updateGame(gameId,{is_tie_break:newIsTieBreak,tie_break_pair1_points:0,tie_break_pair2_points:0});}catch(err){setError(\"Error al cambiar el tipo de juego\");console.error(err);}};const removeGame=async gameId=>{try{setError(\"\");await deleteGame(gameId);setGames(games.filter(g=>g.id!==gameId));}catch(err){console.error(\"❌ Error al eliminar el juego:\",err);setError(\"Error al eliminar el juego: \"+err.message);}};const correctGameScore=useCallback(async function(gameId,pair1Games,pair2Games){let pair1TieBreakPoints=arguments.length>3&&arguments[3]!==undefined?arguments[3]:0;let pair2TieBreakPoints=arguments.length>4&&arguments[4]!==undefined?arguments[4]:0;let isTieBreak=arguments.length>5&&arguments[5]!==undefined?arguments[5]:false;try{setError(\"\");setGames(prevGames=>prevGames.map(g=>g.id===gameId?{...g,pair1_games:pair1Games,pair2_games:pair2Games,tie_break_pair1_points:pair1TieBreakPoints,tie_break_pair2_points:pair2TieBreakPoints,is_tie_break:isTieBreak,updated_at:new Date().toISOString()}:g));await updateGame(gameId,{pair1_games:pair1Games,pair2_games:pair2Games,tie_break_pair1_points:pair1TieBreakPoints,tie_break_pair2_points:pair2TieBreakPoints,is_tie_break:isTieBreak});}catch(err){console.error(\"❌ Error al corregir el marcador:\",err);setError(\"Error al corregir el marcador: \"+err.message);}},[]);const finishMatch=async matchId=>{try{setError(\"\");const match=matches.find(m=>m.id===matchId);if(!match){console.error(\"Match not found:\",matchId);return;}const matchGames=games.filter(g=>g.match_id===matchId);if(!FlexibleMatchFinisher.canFinishMatch(matchGames)){setError(\"No se puede finalizar el partido. Verifica que todos los juegos tengan marcadores válidos.\");return;}const result=await FlexibleMatchFinisher.finishMatch(match,matchGames,pairs,async()=>{if(selectedTournament){const pairsData=await getPairs(selectedTournament.id);setPairs(pairsData);setForceRefresh(prev=>prev+1);const matchesData=await getMatches(selectedTournament.id);setMatches(matchesData);}});if(result.success){setMatches(matches.map(m=>m.id===matchId?{...m,winner_id:result.winnerId,is_finished:true}:m));if(selectedTournament){const updatedPairsData=await getPairs(selectedTournament.id);setPairs(updatedPairsData);setForceRefresh(prev=>prev+1);}alert(result.message);}else{setError(result.message);}}catch(err){setError(\"Error al finalizar el partido\");console.error(err);}};const handleMatchSelect=matchId=>{setSelectedMatchId(matchId);loadMatchGames(matchId);};const loadMatchGames=async matchId=>{try{const gamesData=await getGames(matchId);setGames(gamesData);}catch(err){console.error(\"❌ Error al cargar juegos:\",err);}};const selectedMatch=matches.find(match=>match.id===selectedMatchId);const matchesByRound=matches.reduce((acc,match)=>{if(!acc[match.round]){acc[match.round]=[];}acc[match.round].push(match);return acc;},{});const sortedPairs=useMemo(()=>{return[...pairs].sort((a,b)=>{// Criterio 1: Puntos totales (descendente) - CRITERIO PRINCIPAL\nif(a.points!==b.points){return b.points-a.points;}// Criterio 2: Sets ganados (descendente) - CRITERIO DE DESEMPATE\nif(a.sets_won!==b.sets_won){return b.sets_won-a.sets_won;}// Criterio 3: Juegos ganados (descendente)\nif(a.games_won!==b.games_won){return b.games_won-a.games_won;}// Criterio 4: Menos partidos jugados (mejor eficiencia)\nreturn a.matches_played-b.matches_played;});},[pairs,forceRefresh]);const isTournamentFinished=useMemo(()=>{return matches.length>0&&matches.every(match=>match.is_finished);},[matches]);const[tournamentWinner,setTournamentWinner]=useState(null);const winner=useMemo(()=>{return tournamentWinner?tournamentWinner.pair:sortedPairs.length>0?sortedPairs[0]:null;},[tournamentWinner,sortedPairs]);const showWinnerScreenHandler=async()=>{try{console.log(\"🏆 Calculando ganador del torneo...\");const winner=await TournamentWinnerCalculator.calculateTournamentWinner(pairs,matches);setTournamentWinner(winner);setShowWinnerScreen(true);}catch(error){console.error(\"❌ Error al calcular ganador:\",error);setShowWinnerScreen(true);}};const hideWinnerScreenHandler=()=>{setShowWinnerScreen(false);};const showMatchResultsHandler=async match=>{try{// Obtener los juegos del partido\nconst matchGames=await getGames(match.id);// Calcular estadísticas en tiempo real\nconst stats=MatchResultCalculator.calculateMatchStatistics(match,matchGames);// Crear un objeto con los resultados calculados\nconst calculatedMatch={...match,pair1:{...match.pair1,games_won:stats.pair1GamesWon,sets_won:stats.pair1SetsWon,points:stats.pair1TotalPoints},pair2:{...match.pair2,games_won:stats.pair2GamesWon,sets_won:stats.pair2SetsWon,points:stats.pair2TotalPoints},winner_id:stats.isTie?undefined:stats.pair1TotalPoints>stats.pair2TotalPoints?match.pair1_id:match.pair2_id};setSelectedMatchResults(match);setCalculatedMatchResults(calculatedMatch);setShowMatchResults(true);}catch(error){console.error(\"Error al calcular resultados:\",error);// Fallback al comportamiento original\nsetSelectedMatchResults(match);setShowMatchResults(true);}};const hideMatchResultsHandler=()=>{setShowMatchResults(false);setSelectedMatchResults(null);setCalculatedMatchResults(null);};const handleViewTournamentResults=async tournament=>{try{setSelectedTournament(tournament);await loadTournamentData();alert(`✅ Torneo \"${tournament.name}\" seleccionado\\n\\nAhora puedes ver todos los partidos y resultados en el panel derecho.`);}catch(err){console.error(\"❌ Error al cargar resultados del torneo:\",err);alert(\"Error al cargar los resultados del torneo. Inténtalo de nuevo.\");}};const recalculateMatchWinner=async matchId=>{try{const match=matches.find(m=>m.id===matchId);if(!match){console.error(\"Match not found:\",matchId);return;}const matchGames=await getGames(matchId);if(matchGames.length===0){console.log(\"No hay juegos para recalcular\");return;}let pair1Games=0;let pair2Games=0;matchGames.forEach(game=>{if(game.is_tie_break){if(game.tie_break_pair1_points>=10&&game.tie_break_pair1_points-game.tie_break_pair2_points>=2){pair1Games++;}else if(game.tie_break_pair2_points>=10&&game.tie_break_pair2_points-game.tie_break_pair1_points>=2){pair2Games++;}}else{if(game.pair1_games>game.pair2_games){pair1Games++;}else if(game.pair2_games>game.pair1_games){pair2Games++;}}});const isTie=pair1Games===pair2Games;const winnerId=isTie?undefined:pair1Games>pair2Games?match.pair1_id:match.pair2_id;await updateMatch(matchId,{winner_id:winnerId,is_finished:true});console.log(\"✅ Ganador recalculado y actualizado en la base de datos\");}catch(error){console.error(\"Error recalculating match winner:\",error);}};const handleBackToHome=()=>{setSelectedTournament(null);setPairs([]);setMatches([]);setGames([]);setSelectedMatchId(null);setError(\"\");setShowWinnerScreen(false);setShowMatchResults(false);setSelectedMatchResults(null);setShowScoreCorrector(false);setSelectedCorrectorMatch(null);setForceRefresh(0);setShowDebugInfo(false);setEditingGames({});setEditingTieBreaks({});setShowSuccessModal(false);setSuccessModalData({title:\"\",message:\"\",icon:\"✅\"});};const openScoreCorrector=async match=>{try{// Recargar los juegos del partido antes de abrir el editor\nconst matchGames=await getGames(match.id);setGames(prevGames=>{const otherGames=prevGames.filter(g=>g.match_id!==match.id);return[...otherGames,...matchGames];});}catch(error){console.error(\"Error al cargar juegos:\",error);}setSelectedCorrectorMatch(match);setShowScoreCorrector(true);};const closeScoreCorrector=()=>{setShowScoreCorrector(false);setSelectedCorrectorMatch(null);};// Función para cuando se corrige un juego (NO incrementa forceRefresh)\nconst handleGameCorrection=async()=>{if(selectedTournament){console.log(\"🔄 Juego corregido - NO actualizando tabla de clasificación\");// NO incrementar forceRefresh cuando se corrige un juego\n// Solo cerrar el editor\nconsole.log(\"✅ Solo se corrigió el juego - NO se actualizó la tabla\");}closeScoreCorrector();};// Función para cuando se finaliza un partido (SÍ incrementa forceRefresh)\nconst handleScoreCorrectorUpdate=async()=>{if(selectedTournament){console.log(\"🏆 Actualizando tabla de clasificación después de FINALIZAR partido...\");// SOLO incrementar forceRefresh cuando se FINALIZA un partido\nsetForceRefresh(prev=>{console.log(`🏆 Incrementando forceRefresh de ${prev} a ${prev+1} (FINALIZACIÓN)`);return prev+1;});console.log(\"✅ Tabla de clasificación actualizada después de finalizar partido\");}closeScoreCorrector();};return/*#__PURE__*/_jsx(\"div\",{className:\"App\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"container\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"\\uD83C\\uDFC6 Gesti\\xF3n de Torneos Express y Retas\"}),error&&/*#__PURE__*/_jsxs(\"div\",{className:\"error\",children:[/*#__PURE__*/_jsx(\"h4\",{children:\"\\u274C Error\"}),/*#__PURE__*/_jsx(\"p\",{children:error}),/*#__PURE__*/_jsxs(\"div\",{className:\"error-help\",children:[/*#__PURE__*/_jsx(\"h5\",{children:\"\\uD83D\\uDCA1 Ayuda:\"}),/*#__PURE__*/_jsxs(\"ol\",{children:[/*#__PURE__*/_jsx(\"li\",{children:\"Verifica tu conexi\\xF3n a internet\"}),/*#__PURE__*/_jsx(\"li\",{children:\"Intenta recargar la p\\xE1gina\"}),/*#__PURE__*/_jsx(\"li\",{children:\"Si el problema persiste, contacta al administrador\"})]})]})]}),loading&&/*#__PURE__*/_jsx(\"div\",{className:\"loading\",children:/*#__PURE__*/_jsx(\"p\",{children:\"\\u23F3 Cargando...\"})}),/*#__PURE__*/_jsxs(\"div\",{className:\"main-layout\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"left-panel\",children:/*#__PURE__*/_jsx(TournamentManager,{selectedTournament:selectedTournament||undefined,onTournamentSelect:setSelectedTournament,onViewResults:handleViewTournamentResults})}),/*#__PURE__*/_jsx(\"div\",{className:\"right-panel\",children:selectedTournament?/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsxs(\"div\",{className:\"tournament-details\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"player-management-section\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"player-management-header\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"\\uD83D\\uDC65 Gesti\\xF3n de Jugadores\"}),/*#__PURE__*/_jsx(\"button\",{className:\"toggle-player-manager-btn\",onClick:()=>setShowPlayerManager(!showPlayerManager),children:showPlayerManager?\"👥 Ocultar Gestión de Jugadores\":\"👥 Mostrar Gestión de Jugadores\"})]}),showPlayerManager&&/*#__PURE__*/_jsx(\"div\",{className:\"player-manager-container\",children:/*#__PURE__*/_jsx(PlayerManager,{playersInPairs:pairs.flatMap(pair=>[pair.player1_id,pair.player2_id]),onPlayerSelect:players=>{console.log(\"=== SELECCIÓN DE JUGADORES ===\");console.log(\"Players selected:\",players.length);players.forEach((player,index)=>{console.log(`Player ${index+1}:`,player.name,\"(ID:\",player.id+\")\");});// Validación: Verificar si algún jugador ya está en una pareja\nconst playersInPairs=players.filter(player=>{const isInPair=pairs.some(pair=>pair.player1_id===player.id||pair.player2_id===player.id);if(isInPair){var _existingPair$player,_existingPair$player2,_existingPair$player3;const existingPair=pairs.find(pair=>pair.player1_id===player.id||pair.player2_id===player.id);console.log(`🚨 JUGADOR YA EN PAREJA: ${player.name} está en pareja con ${(existingPair===null||existingPair===void 0?void 0:(_existingPair$player=existingPair.player1)===null||_existingPair$player===void 0?void 0:_existingPair$player.id)===player.id?existingPair===null||existingPair===void 0?void 0:(_existingPair$player2=existingPair.player2)===null||_existingPair$player2===void 0?void 0:_existingPair$player2.name:existingPair===null||existingPair===void 0?void 0:(_existingPair$player3=existingPair.player1)===null||_existingPair$player3===void 0?void 0:_existingPair$player3.name}`);}return isInPair;});if(playersInPairs.length>0){const playerNames=playersInPairs.map(p=>p.name).join(\", \");console.log(\"🚨 ERROR: Jugadores ya están en parejas:\",playerNames);setError(`Los jugadores ${playerNames} ya están en parejas existentes. Debes eliminar sus parejas actuales antes de poder seleccionarlos nuevamente.`);return;}// Validación: No permitir jugadores con nombres iguales\nif(players.length===2){const player1=players[0];const player2=players[1];if(player1.name.toLowerCase()===player2.name.toLowerCase()){console.log(\"🚨 ERROR: Jugadores con nombres iguales detectados\");console.log(\"Player 1:\",player1.name,\"(ID:\",player1.id+\")\");console.log(\"Player 2:\",player2.name,\"(ID:\",player2.id+\")\");setError(\"No puedes seleccionar dos jugadores con el mismo nombre\");return;}// Validación: Verificar si ya existe una pareja con estos jugadores\nconst existingPair=pairs.find(pair=>{var _pair$player5,_pair$player6,_pair$player7,_pair$player8;const sameIds=pair.player1_id===player1.id&&pair.player2_id===player2.id||pair.player1_id===player2.id&&pair.player2_id===player1.id;const sameNames=((_pair$player5=pair.player1)===null||_pair$player5===void 0?void 0:_pair$player5.name.toLowerCase())===player1.name.toLowerCase()&&((_pair$player6=pair.player2)===null||_pair$player6===void 0?void 0:_pair$player6.name.toLowerCase())===player2.name.toLowerCase()||((_pair$player7=pair.player1)===null||_pair$player7===void 0?void 0:_pair$player7.name.toLowerCase())===player2.name.toLowerCase()&&((_pair$player8=pair.player2)===null||_pair$player8===void 0?void 0:_pair$player8.name.toLowerCase())===player1.name.toLowerCase();if(sameIds||sameNames){console.log(\"🚨 PAREJA DUPLICADA DETECTADA:\",player1.name,\"+\",player2.name);console.log(\"Existing pair:\",existingPair);}return sameIds||sameNames;});if(existingPair){console.log(\"🚨 ERROR: Pareja ya existe en la base de datos\");setError(`La pareja ${player1.name} + ${player2.name} ya existe en el torneo`);return;}// Si llegamos aquí, la pareja es válida\nconsole.log(\"✅ PAREJA VÁLIDA:\",player1.name,\"+\",player2.name);addPair(player1,player2);setSelectedPlayers([]);// Limpiar selección después de crear la pareja\n}else{setSelectedPlayers(players);}},selectedPlayers:selectedPlayers,allowMultipleSelection:true})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"pair-management-section\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"pair-management-header\",children:/*#__PURE__*/_jsx(\"button\",{className:\"toggle-pair-manager-btn\",onClick:()=>setShowPairManager(!showPairManager),children:showPairManager?\"✏️ Ocultar Gestión de Parejas\":\"✏️ Mostrar Gestión de Parejas\"})}),showPairManager&&/*#__PURE__*/_jsx(\"div\",{className:\"pair-manager-container\",children:/*#__PURE__*/_jsx(PairManager,{pairs:pairs,onPairUpdate:updatePairPlayers,onPairDelete:deletePair})})]}),!selectedTournament.is_started?/*#__PURE__*/_jsxs(\"div\",{className:\"start-tournament-section\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"\\uD83D\\uDE80 Iniciar Torneo\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"tournament-info\",children:[/*#__PURE__*/_jsxs(\"p\",{children:[\"Tienes \",pairs.length,\" parejas registradas\"]}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Se crear\\xE1n \",pairs.length*(pairs.length-1)/2,\" \",\"partidos (round-robin completo - todas las parejas se enfrentan)\"]}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Estado del torneo:\",\" \",selectedTournament.is_started?\"Iniciado\":\"Pendiente\"]})]}),/*#__PURE__*/_jsx(\"button\",{className:\"start-button\",onClick:startTournament,disabled:loading||pairs.length<2,children:loading?\"⏳ Iniciando...\":selectedTournament.is_started?\"🏆 Torneo Ya Iniciado\":pairs.length<2?\"❌ Necesitas al menos 2 parejas\":\"🚀 ¡Iniciar Torneo!\"})]}):/*#__PURE__*/_jsxs(\"div\",{className:\"tournament-status-section\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"\\uD83C\\uDFC6 Torneo en Progreso\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"tournament-info\",children:[/*#__PURE__*/_jsx(\"p\",{children:\"El torneo ya est\\xE1 iniciado y en progreso\"}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Tienes \",pairs.length,\" parejas registradas\"]}),/*#__PURE__*/_jsx(\"p\",{children:\"Estado del torneo: Iniciado\"})]}),/*#__PURE__*/_jsx(\"button\",{className:\"reset-button\",onClick:async()=>{if(window.confirm(\"¿Estás seguro de que quieres resetear el torneo? Esto eliminará todos los partidos existentes.\")){try{setLoading(true);await deleteMatchesByTournament(selectedTournament.id);await updateTournament(selectedTournament.id,{is_started:false});setSelectedTournament(prev=>prev?{...prev,is_started:false}:null);setMatches([]);await loadTournamentData();setSuccessModalData({title:\"¡Torneo Reseteado!\",message:\"El torneo ha sido reseteado y está listo para iniciar nuevamente.\",icon:\"🔄\"});setShowSuccessModal(true);}catch(error){setError(\"Error al resetear el torneo: \"+error.message);}finally{setLoading(false);}}},disabled:loading,children:loading?\"⏳ Reseteando...\":\"🔄 Resetear Torneo\"})]}),selectedTournament&&/*#__PURE__*/_jsxs(\"div\",{className:\"debug-section\",children:[/*#__PURE__*/_jsxs(\"button\",{className:\"debug-toggle-btn\",onClick:()=>setShowDebugInfo(!showDebugInfo),children:[showDebugInfo?\"🔽\":\"🔼\",\" Debug Info\"]}),showDebugInfo&&/*#__PURE__*/_jsxs(\"div\",{className:\"debug-info\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"debug-header\",children:[/*#__PURE__*/_jsx(\"h4\",{children:\"\\uD83D\\uDD27 Informaci\\xF3n de Debug\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"debug-stats\",children:[/*#__PURE__*/_jsxs(\"span\",{children:[\"Estado:\",\" \",selectedTournament.is_started?\"✅ Iniciado\":\"⏳ Pendiente\"]}),/*#__PURE__*/_jsxs(\"span\",{children:[\"Parejas: \",pairs.length]}),/*#__PURE__*/_jsxs(\"span\",{children:[\"Partidos: \",matches.length]})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"debug-buttons\",children:[/*#__PURE__*/_jsx(\"button\",{onClick:async()=>{console.log(\"=== PROBAR CONEXIÓN ===\");const isConnected=await testConnection();if(isConnected){setError(\"\");}else{setError(\"❌ Error de conexión a Supabase. Verifica tu configuración.\");}},className:\"debug-btn connection-btn\",children:\"\\uD83D\\uDD0C Probar Conexi\\xF3n\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>{console.log(\"=== FORZANDO RECARGA DE DATOS ===\");loadTournamentData();},className:\"debug-btn reload-btn\",children:\"\\uD83D\\uDD04 Recargar Datos\"}),/*#__PURE__*/_jsx(\"button\",{onClick:async()=>{console.log(\"=== VERIFICANDO ESTADO DEL TORNEO ===\");try{console.log(\"Estado actual del torneo:\",selectedTournament);console.log(\"Parejas en estado:\",pairs.length);console.log(\"Partidos en estado:\",matches.length);const dbPairs=await getPairs(selectedTournament.id);const dbMatches=await getMatches(selectedTournament.id);console.log(\"Parejas en BD:\",dbPairs.length);console.log(\"Partidos en BD:\",dbMatches.length);alert(`Estado del torneo:\\n\\nParejas: ${pairs.length} (estado) / ${dbPairs.length} (BD)\\nPartidos: ${matches.length} (estado) / ${dbMatches.length} (BD)\\n\\nTorneo iniciado: ${selectedTournament.is_started?\"Sí\":\"No\"}`);}catch(error){console.error(\"Error verificando estado:\",error);}},className:\"debug-btn status-btn\",children:\"\\uD83D\\uDD0D Verificar Estado\"})]})]})]}),pairs.length>0&&/*#__PURE__*/_jsxs(\"div\",{className:\"pairs-display\",children:[/*#__PURE__*/_jsxs(\"h3\",{children:[\"\\uD83D\\uDC65 Parejas Registradas (\",pairs.length,\")\"]}),/*#__PURE__*/_jsx(\"div\",{className:\"pairs-grid\",children:pairs.map((pair,index)=>{var _pair$player9,_pair$player0;return/*#__PURE__*/_jsxs(\"div\",{className:\"pair-display-card\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"pair-number\",children:[\"#\",index+1]}),/*#__PURE__*/_jsxs(\"div\",{className:\"pair-names\",children:[(_pair$player9=pair.player1)===null||_pair$player9===void 0?void 0:_pair$player9.name,\" y \",(_pair$player0=pair.player2)===null||_pair$player0===void 0?void 0:_pair$player0.name]}),/*#__PURE__*/_jsxs(\"div\",{className:\"pair-stats\",children:[/*#__PURE__*/_jsxs(\"span\",{children:[\"Sets: \",pair.sets_won]}),/*#__PURE__*/_jsxs(\"span\",{children:[\"Partidos: \",pair.matches_played]}),/*#__PURE__*/_jsxs(\"span\",{children:[\"Puntos: \",pair.points]})]}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>{var _pair$player1,_pair$player10;if(window.confirm(`¿Estás seguro de que quieres eliminar la pareja \"${(_pair$player1=pair.player1)===null||_pair$player1===void 0?void 0:_pair$player1.name} y ${(_pair$player10=pair.player2)===null||_pair$player10===void 0?void 0:_pair$player10.name}\"?`)){deletePair(pair.id);}},className:\"delete-pair-btn\",title:\"Eliminar pareja\",children:\"\\uD83D\\uDDD1\\uFE0F\"})]},pair.id);})})]}),selectedTournament.is_started&&/*#__PURE__*/_jsxs(\"div\",{className:\"tournament-content\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"matches-section\",children:[/*#__PURE__*/_jsxs(\"h3\",{children:[\"\\uD83C\\uDFBE Partidos (\",matches.length,\" total)\"]}),matches.length===0?/*#__PURE__*/_jsxs(\"div\",{className:\"no-matches\",children:[/*#__PURE__*/_jsx(\"p\",{children:\"\\uD83D\\uDCDD No hay partidos programados a\\xFAn\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Inicia el torneo para generar los partidos autom\\xE1ticamente\"})]}):Object.entries(matchesByRound).map(_ref=>{let[round,roundMatches]=_ref;return/*#__PURE__*/_jsxs(\"div\",{className:\"round-section\",children:[/*#__PURE__*/_jsxs(\"h4\",{children:[\"\\uD83D\\uDD04 Ronda \",round,\" (\",roundMatches.length,\" \",\"partidos)\"]}),/*#__PURE__*/_jsx(\"div\",{className:\"matches-container\",children:roundMatches.map(match=>{var _match$pair,_match$pair$player,_match$pair2,_match$pair2$player,_match$pair3,_match$pair3$player,_match$pair4,_match$pair4$player,_match$pair5,_match$pair5$player,_match$pair6,_match$pair6$player,_match$pair7,_match$pair7$player,_match$pair8,_match$pair8$player;return/*#__PURE__*/_jsxs(\"div\",{className:`match-card ${selectedMatchId===match.id?\"selected\":\"\"}`,onClick:()=>handleMatchSelect(match.id),children:[/*#__PURE__*/_jsxs(\"div\",{className:\"match-header\",children:[/*#__PURE__*/_jsxs(\"h5\",{children:[(_match$pair=match.pair1)===null||_match$pair===void 0?void 0:(_match$pair$player=_match$pair.player1)===null||_match$pair$player===void 0?void 0:_match$pair$player.name,\" y\",\" \",(_match$pair2=match.pair1)===null||_match$pair2===void 0?void 0:(_match$pair2$player=_match$pair2.player2)===null||_match$pair2$player===void 0?void 0:_match$pair2$player.name,\" vs\",\" \",(_match$pair3=match.pair2)===null||_match$pair3===void 0?void 0:(_match$pair3$player=_match$pair3.player1)===null||_match$pair3$player===void 0?void 0:_match$pair3$player.name,\" y\",\" \",(_match$pair4=match.pair2)===null||_match$pair4===void 0?void 0:(_match$pair4$player=_match$pair4.player2)===null||_match$pair4$player===void 0?void 0:_match$pair4$player.name]}),/*#__PURE__*/_jsxs(\"div\",{className:\"match-info\",children:[/*#__PURE__*/_jsxs(\"span\",{className:\"court-badge\",children:[\"\\uD83C\\uDFDF\\uFE0F Cancha \",match.court]}),/*#__PURE__*/_jsxs(\"span\",{className:\"round-badge\",children:[\"\\uD83D\\uDD04 Ronda \",match.round]})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"match-details\",children:[/*#__PURE__*/_jsxs(\"p\",{className:\"match-pairs\",children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Pareja 1:\"}),\" \",(_match$pair5=match.pair1)===null||_match$pair5===void 0?void 0:(_match$pair5$player=_match$pair5.player1)===null||_match$pair5$player===void 0?void 0:_match$pair5$player.name,\" y\",\" \",(_match$pair6=match.pair1)===null||_match$pair6===void 0?void 0:(_match$pair6$player=_match$pair6.player2)===null||_match$pair6$player===void 0?void 0:_match$pair6$player.name]}),/*#__PURE__*/_jsxs(\"p\",{className:\"match-pairs\",children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Pareja 2:\"}),\" \",(_match$pair7=match.pair2)===null||_match$pair7===void 0?void 0:(_match$pair7$player=_match$pair7.player1)===null||_match$pair7$player===void 0?void 0:_match$pair7$player.name,\" y\",\" \",(_match$pair8=match.pair2)===null||_match$pair8===void 0?void 0:(_match$pair8$player=_match$pair8.player2)===null||_match$pair8$player===void 0?void 0:_match$pair8$player.name]})]}),(()=>{// Calcular el ganador en tiempo real\nconst matchGames=games.filter(g=>g.match_id===match.id);if(matchGames.length>0){const stats=MatchResultCalculator.calculateMatchStatistics(match,matchGames);const isTie=stats.isTie;if(isTie){return/*#__PURE__*/_jsxs(\"div\",{className:\"winner\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"winner-icon\",children:\"\\uD83E\\uDD1D\"}),\"Empate (\",stats.pair1TotalPoints,\"-\",stats.pair2TotalPoints,\" \",\"puntos)\"]});}else{var _match$pair9,_match$pair9$player,_match$pair0,_match$pair0$player,_match$pair1,_match$pair1$player,_match$pair10,_match$pair10$player;const winnerId=stats.pair1TotalPoints>stats.pair2TotalPoints?match.pair1_id:match.pair2_id;return/*#__PURE__*/_jsxs(\"div\",{className:\"winner\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"winner-icon\",children:\"\\uD83C\\uDFC6\"}),\"Ganador:\",\" \",winnerId===match.pair1_id?`${(_match$pair9=match.pair1)===null||_match$pair9===void 0?void 0:(_match$pair9$player=_match$pair9.player1)===null||_match$pair9$player===void 0?void 0:_match$pair9$player.name} y ${(_match$pair0=match.pair1)===null||_match$pair0===void 0?void 0:(_match$pair0$player=_match$pair0.player2)===null||_match$pair0$player===void 0?void 0:_match$pair0$player.name}`:`${(_match$pair1=match.pair2)===null||_match$pair1===void 0?void 0:(_match$pair1$player=_match$pair1.player1)===null||_match$pair1$player===void 0?void 0:_match$pair1$player.name} y ${(_match$pair10=match.pair2)===null||_match$pair10===void 0?void 0:(_match$pair10$player=_match$pair10.player2)===null||_match$pair10$player===void 0?void 0:_match$pair10$player.name}`]});}}else{// Fallback a los datos de la base de datos\nif(match.winner_id){var _match$pair11,_match$pair11$player,_match$pair12,_match$pair12$player,_match$pair13,_match$pair13$player,_match$pair14,_match$pair14$player;return/*#__PURE__*/_jsxs(\"div\",{className:\"winner\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"winner-icon\",children:\"\\uD83C\\uDFC6\"}),\"Ganador:\",\" \",match.winner_id===match.pair1_id?`${(_match$pair11=match.pair1)===null||_match$pair11===void 0?void 0:(_match$pair11$player=_match$pair11.player1)===null||_match$pair11$player===void 0?void 0:_match$pair11$player.name} y ${(_match$pair12=match.pair1)===null||_match$pair12===void 0?void 0:(_match$pair12$player=_match$pair12.player2)===null||_match$pair12$player===void 0?void 0:_match$pair12$player.name}`:`${(_match$pair13=match.pair2)===null||_match$pair13===void 0?void 0:(_match$pair13$player=_match$pair13.player1)===null||_match$pair13$player===void 0?void 0:_match$pair13$player.name} y ${(_match$pair14=match.pair2)===null||_match$pair14===void 0?void 0:(_match$pair14$player=_match$pair14.player2)===null||_match$pair14$player===void 0?void 0:_match$pair14$player.name}`]});}else if(match.is_finished){return/*#__PURE__*/_jsxs(\"div\",{className:\"winner\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"winner-icon\",children:\"\\uD83E\\uDD1D\"}),\"Empate\"]});}}return null;})(),/*#__PURE__*/_jsx(\"div\",{className:\"match-status\",children:match.is_finished?/*#__PURE__*/_jsx(\"span\",{className:\"status-finished\",children:\"\\u2714 Finalizado\"}):/*#__PURE__*/_jsx(\"span\",{className:\"status-pending\",children:\"\\u23F3 Pendiente\"})}),/*#__PURE__*/_jsxs(\"div\",{className:\"match-actions\",children:[/*#__PURE__*/_jsx(\"button\",{onClick:e=>{e.stopPropagation();showMatchResultsHandler(match);},className:\"view-results-btn\",children:\"\\uD83D\\uDCCA Ver Resultados\"}),/*#__PURE__*/_jsx(\"button\",{onClick:e=>{e.stopPropagation();openScoreCorrector(match);},className:\"correct-result-btn\",children:\"\\u270F\\uFE0F Marcador\"})]})]},match.id);})})]},round);})]}),/*#__PURE__*/_jsx(StandingsTable,{tournamentId:selectedTournament.id,forceRefresh:forceRefresh}),isTournamentFinished&&winner&&/*#__PURE__*/_jsx(\"div\",{className:\"winner-button-container\",children:/*#__PURE__*/_jsx(\"button\",{className:\"show-winner-button\",onClick:showWinnerScreenHandler,children:\"\\uD83C\\uDFC6 \\xA1Ver Ganador!\"})}),/*#__PURE__*/_jsx(\"div\",{className:\"back-home-button-container\",children:/*#__PURE__*/_jsx(\"button\",{className:\"back-home-button\",onClick:handleBackToHome,children:\"\\uD83C\\uDFE0 Volver al Inicio\"})})]})]})}):/*#__PURE__*/_jsxs(\"div\",{className:\"no-tournament-selected\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"\\uD83C\\uDFC6 Bienvenido al Gestor de Torneos\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Selecciona un torneo del panel izquierdo para comenzar a gestionar partidos y resultados.\"})]})})]}),showWinnerScreen&&winner&&/*#__PURE__*/_jsx(\"div\",{className:\"winner-screen\",children:/*#__PURE__*/_jsx(\"div\",{className:\"winner-content\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"winner-celebration\",children:[/*#__PURE__*/_jsx(\"h1\",{className:\"winner-title\",children:\"\\uD83C\\uDFC6 \\xA1FELICIDADES! \\uD83C\\uDFC6\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"winner-names\",children:[(_winner$player=winner.player1)===null||_winner$player===void 0?void 0:_winner$player.name,\" y \",(_winner$player2=winner.player2)===null||_winner$player2===void 0?void 0:_winner$player2.name]}),/*#__PURE__*/_jsx(\"div\",{className:\"winner-subtitle\",children:\"\\xA1Son los campeones del torneo!\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"winner-stats\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"stat-item\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"stat-number\",children:tournamentWinner?tournamentWinner.totalSets:winner.sets_won}),/*#__PURE__*/_jsx(\"span\",{className:\"stat-label\",children:\"Sets Ganados\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"stat-item\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"stat-number\",children:tournamentWinner?tournamentWinner.matchesPlayed:winner.games_won}),/*#__PURE__*/_jsx(\"span\",{className:\"stat-label\",children:\"Partidos Ganados\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"stat-item\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"stat-number\",children:tournamentWinner?tournamentWinner.totalPoints:winner.points}),/*#__PURE__*/_jsx(\"span\",{className:\"stat-label\",children:\"Puntos Totales\"})]})]}),/*#__PURE__*/_jsx(\"button\",{className:\"back-button\",onClick:hideWinnerScreenHandler,children:\"\\uD83C\\uDFE0 Volver al Torneo\"})]})})}),showMatchResults&&selectedMatchResults&&/*#__PURE__*/_jsx(\"div\",{className:\"match-results-modal\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"match-results-content\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"match-results-header\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"\\uD83D\\uDCCA Resultados del Partido\"}),/*#__PURE__*/_jsx(\"button\",{onClick:hideMatchResultsHandler,className:\"close-btn\",children:\"\\u2715\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"match-results-info\",children:[/*#__PURE__*/_jsxs(\"h4\",{children:[\"Partido \",selectedMatchResults.court,\" - Ronda\",\" \",selectedMatchResults.round]}),/*#__PURE__*/_jsxs(\"div\",{className:\"pairs-info\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"pair-info\",children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Pareja 1:\"}),\" \",(_selectedMatchResults=selectedMatchResults.pair1)===null||_selectedMatchResults===void 0?void 0:(_selectedMatchResults2=_selectedMatchResults.player1)===null||_selectedMatchResults2===void 0?void 0:_selectedMatchResults2.name,\" y\",\" \",(_selectedMatchResults3=selectedMatchResults.pair1)===null||_selectedMatchResults3===void 0?void 0:(_selectedMatchResults4=_selectedMatchResults3.player2)===null||_selectedMatchResults4===void 0?void 0:_selectedMatchResults4.name]}),/*#__PURE__*/_jsxs(\"div\",{className:\"pair-info\",children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Pareja 2:\"}),\" \",(_selectedMatchResults5=selectedMatchResults.pair2)===null||_selectedMatchResults5===void 0?void 0:(_selectedMatchResults6=_selectedMatchResults5.player1)===null||_selectedMatchResults6===void 0?void 0:_selectedMatchResults6.name,\" y\",\" \",(_selectedMatchResults7=selectedMatchResults.pair2)===null||_selectedMatchResults7===void 0?void 0:(_selectedMatchResults8=_selectedMatchResults7.player2)===null||_selectedMatchResults8===void 0?void 0:_selectedMatchResults8.name]})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"match-results-details\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"result-summary\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"result-item\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"result-label\",children:\"Juegos Ganados:\"}),/*#__PURE__*/_jsxs(\"span\",{className:\"result-value\",children:[(calculatedMatchResults===null||calculatedMatchResults===void 0?void 0:(_calculatedMatchResul=calculatedMatchResults.pair1)===null||_calculatedMatchResul===void 0?void 0:_calculatedMatchResul.games_won)||((_selectedMatchResults9=selectedMatchResults.pair1)===null||_selectedMatchResults9===void 0?void 0:_selectedMatchResults9.games_won)||0,\" \",\"-\",\" \",(calculatedMatchResults===null||calculatedMatchResults===void 0?void 0:(_calculatedMatchResul2=calculatedMatchResults.pair2)===null||_calculatedMatchResul2===void 0?void 0:_calculatedMatchResul2.games_won)||((_selectedMatchResults0=selectedMatchResults.pair2)===null||_selectedMatchResults0===void 0?void 0:_selectedMatchResults0.games_won)||0]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"result-item\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"result-label\",children:\"Sets Ganados:\"}),/*#__PURE__*/_jsxs(\"span\",{className:\"result-value\",children:[(calculatedMatchResults===null||calculatedMatchResults===void 0?void 0:(_calculatedMatchResul3=calculatedMatchResults.pair1)===null||_calculatedMatchResul3===void 0?void 0:_calculatedMatchResul3.sets_won)||((_selectedMatchResults1=selectedMatchResults.pair1)===null||_selectedMatchResults1===void 0?void 0:_selectedMatchResults1.sets_won)||0,\" \",\"-\",\" \",(calculatedMatchResults===null||calculatedMatchResults===void 0?void 0:(_calculatedMatchResul4=calculatedMatchResults.pair2)===null||_calculatedMatchResul4===void 0?void 0:_calculatedMatchResul4.sets_won)||((_selectedMatchResults10=selectedMatchResults.pair2)===null||_selectedMatchResults10===void 0?void 0:_selectedMatchResults10.sets_won)||0]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"result-item\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"result-label\",children:\"Puntos Totales:\"}),/*#__PURE__*/_jsxs(\"span\",{className:\"result-value\",children:[(calculatedMatchResults===null||calculatedMatchResults===void 0?void 0:(_calculatedMatchResul5=calculatedMatchResults.pair1)===null||_calculatedMatchResul5===void 0?void 0:_calculatedMatchResul5.points)||((_selectedMatchResults11=selectedMatchResults.pair1)===null||_selectedMatchResults11===void 0?void 0:_selectedMatchResults11.points)||0,\" \",\"-\",\" \",(calculatedMatchResults===null||calculatedMatchResults===void 0?void 0:(_calculatedMatchResul6=calculatedMatchResults.pair2)===null||_calculatedMatchResul6===void 0?void 0:_calculatedMatchResul6.points)||((_selectedMatchResults12=selectedMatchResults.pair2)===null||_selectedMatchResults12===void 0?void 0:_selectedMatchResults12.points)||0]})]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"match-winner\",children:((_calculatedMatchResul7,_selectedMatchResults13,_calculatedMatchResul8,_selectedMatchResults14)=>{// Verificar si es empate basado en los puntos totales\nconst pair1Points=(calculatedMatchResults===null||calculatedMatchResults===void 0?void 0:(_calculatedMatchResul7=calculatedMatchResults.pair1)===null||_calculatedMatchResul7===void 0?void 0:_calculatedMatchResul7.points)||((_selectedMatchResults13=selectedMatchResults.pair1)===null||_selectedMatchResults13===void 0?void 0:_selectedMatchResults13.points)||0;const pair2Points=(calculatedMatchResults===null||calculatedMatchResults===void 0?void 0:(_calculatedMatchResul8=calculatedMatchResults.pair2)===null||_calculatedMatchResul8===void 0?void 0:_calculatedMatchResul8.points)||((_selectedMatchResults14=selectedMatchResults.pair2)===null||_selectedMatchResults14===void 0?void 0:_selectedMatchResults14.points)||0;const isTie=pair1Points===pair2Points;if(isTie){return/*#__PURE__*/_jsxs(\"div\",{className:\"tie-display\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"tie-icon\",children:\"\\uD83E\\uDD1D\"}),/*#__PURE__*/_jsxs(\"span\",{className:\"tie-text\",children:[\"Empate (\",pair1Points,\"-\",pair2Points,\" puntos totales)\"]})]});}else{const winnerId=(calculatedMatchResults===null||calculatedMatchResults===void 0?void 0:calculatedMatchResults.winner_id)||selectedMatchResults.winner_id;if(winnerId){var _selectedMatchResults15,_selectedMatchResults16,_selectedMatchResults17,_selectedMatchResults18,_selectedMatchResults19,_selectedMatchResults20,_selectedMatchResults21,_selectedMatchResults22,_selectedMatchResults23;return/*#__PURE__*/_jsxs(\"div\",{className:\"winner-display\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"winner-icon\",children:\"\\uD83C\\uDFC6\"}),/*#__PURE__*/_jsxs(\"span\",{className:\"winner-text\",children:[\"Ganador:\",\" \",winnerId===((_selectedMatchResults15=selectedMatchResults.pair1)===null||_selectedMatchResults15===void 0?void 0:_selectedMatchResults15.id)?`${(_selectedMatchResults16=selectedMatchResults.pair1)===null||_selectedMatchResults16===void 0?void 0:(_selectedMatchResults17=_selectedMatchResults16.player1)===null||_selectedMatchResults17===void 0?void 0:_selectedMatchResults17.name} y ${(_selectedMatchResults18=selectedMatchResults.pair1)===null||_selectedMatchResults18===void 0?void 0:(_selectedMatchResults19=_selectedMatchResults18.player2)===null||_selectedMatchResults19===void 0?void 0:_selectedMatchResults19.name}`:`${(_selectedMatchResults20=selectedMatchResults.pair2)===null||_selectedMatchResults20===void 0?void 0:(_selectedMatchResults21=_selectedMatchResults20.player1)===null||_selectedMatchResults21===void 0?void 0:_selectedMatchResults21.name} y ${(_selectedMatchResults22=selectedMatchResults.pair2)===null||_selectedMatchResults22===void 0?void 0:(_selectedMatchResults23=_selectedMatchResults22.player2)===null||_selectedMatchResults23===void 0?void 0:_selectedMatchResults23.name}`]})]});}else{return/*#__PURE__*/_jsxs(\"div\",{className:\"tie-display\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"tie-icon\",children:\"\\uD83E\\uDD1D\"}),/*#__PURE__*/_jsx(\"span\",{className:\"tie-text\",children:\"Empate\"})]});}}})()})]}),/*#__PURE__*/_jsx(\"div\",{className:\"match-results-actions\",children:/*#__PURE__*/_jsx(\"button\",{onClick:hideMatchResultsHandler,className:\"close-results-btn\",children:\"Cerrar\"})})]})}),showScoreCorrector&&selectedCorrectorMatch&&/*#__PURE__*/_jsx(MatchScoreEditor,{match:selectedCorrectorMatch,onClose:closeScoreCorrector,onMatchFinish:handleScoreCorrectorUpdate}),showSuccessModal&&/*#__PURE__*/_jsx(SuccessModal,{title:successModalData.title,message:successModalData.message,icon:successModalData.icon,isOpen:showSuccessModal,onClose:()=>setShowSuccessModal(false)})]})});}export default App;","map":{"version":3,"names":["React","useState","useEffect","useCallback","useMemo","TournamentManager","PlayerManager","PairManager","MatchScoreEditor","StandingsTable","SuccessModal","createPair","getPairs","updatePair","deletePair","deletePairFromDB","createMatch","getMatches","updateMatch","deleteMatchesByTournament","createGame","getGames","updateGame","deleteGame","updateTournament","testConnection","FlexibleMatchFinisher","MatchResultCalculator","TournamentWinnerCalculator","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","App","_winner$player","_winner$player2","_selectedMatchResults","_selectedMatchResults2","_selectedMatchResults3","_selectedMatchResults4","_selectedMatchResults5","_selectedMatchResults6","_selectedMatchResults7","_selectedMatchResults8","_calculatedMatchResul","_selectedMatchResults9","_calculatedMatchResul2","_selectedMatchResults0","_calculatedMatchResul3","_selectedMatchResults1","_calculatedMatchResul4","_selectedMatchResults10","_calculatedMatchResul5","_selectedMatchResults11","_calculatedMatchResul6","_selectedMatchResults12","selectedTournament","setSelectedTournament","pairs","setPairs","matches","setMatches","games","setGames","selectedMatchId","setSelectedMatchId","error","setError","loading","setLoading","showPlayerManager","setShowPlayerManager","showPairManager","setShowPairManager","selectedPlayers","setSelectedPlayers","showWinnerScreen","setShowWinnerScreen","showMatchResults","setShowMatchResults","selectedMatchResults","setSelectedMatchResults","calculatedMatchResults","setCalculatedMatchResults","showScoreCorrector","setShowScoreCorrector","selectedCorrectorMatch","setSelectedCorrectorMatch","forceRefresh","setForceRefresh","showDebugInfo","setShowDebugInfo","editingGames","setEditingGames","editingTieBreaks","setEditingTieBreaks","showSuccessModal","setShowSuccessModal","successModalData","setSuccessModalData","title","message","icon","loadTournamentData","id","console","log","name","pairsData","matchesData","Promise","all","length","err","pairId","filter","p","updatePairPlayers","player1","player2","player1_id","player2_id","map","pair","addPair","existingPairLocal","find","_pair$player","_pair$player2","_pair$player3","_pair$player4","sameIds","sameNames","toLowerCase","newPair","startTournament","allPairs","allCombinations","i","j","push","pair1","pair2","finalMatches","remainingCombinations","round","roundMatches","usedPairs","Set","courtOrder","courts","rotatedCourt","courtIndex","court","bestIndex","bestScore","combo","has","score","futureCombo","match","add","splice","createdMatches","createdMatch","is_started","prev","addGame","matchId","gameNumber","g","match_id","newGame","updateGameScore","gameId","pair1Games","pair2Games","prevGames","pair1_games","pair2_games","handleGameScoreChange","handleTieBreakScoreChange","pair1Points","pair2Points","handleGameScoreBlur","editingGame","newState","handleTieBreakScoreBlur","editingTieBreak","updateTieBreakScore","tie_break_pair1_points","tie_break_pair2_points","toggleTieBreak","game","newIsTieBreak","is_tie_break","removeGame","correctGameScore","pair1TieBreakPoints","arguments","undefined","pair2TieBreakPoints","isTieBreak","updated_at","Date","toISOString","finishMatch","m","matchGames","canFinishMatch","result","success","winner_id","winnerId","is_finished","updatedPairsData","alert","handleMatchSelect","loadMatchGames","gamesData","selectedMatch","matchesByRound","reduce","acc","sortedPairs","sort","a","b","points","sets_won","games_won","matches_played","isTournamentFinished","every","tournamentWinner","setTournamentWinner","winner","showWinnerScreenHandler","calculateTournamentWinner","hideWinnerScreenHandler","showMatchResultsHandler","stats","calculateMatchStatistics","calculatedMatch","pair1GamesWon","pair1SetsWon","pair1TotalPoints","pair2GamesWon","pair2SetsWon","pair2TotalPoints","isTie","pair1_id","pair2_id","hideMatchResultsHandler","handleViewTournamentResults","tournament","recalculateMatchWinner","forEach","handleBackToHome","openScoreCorrector","otherGames","closeScoreCorrector","handleGameCorrection","handleScoreCorrectorUpdate","className","children","onTournamentSelect","onViewResults","onClick","playersInPairs","flatMap","onPlayerSelect","players","player","index","isInPair","some","_existingPair$player","_existingPair$player2","_existingPair$player3","existingPair","playerNames","join","_pair$player5","_pair$player6","_pair$player7","_pair$player8","allowMultipleSelection","onPairUpdate","onPairDelete","disabled","window","confirm","isConnected","dbPairs","dbMatches","_pair$player9","_pair$player0","_pair$player1","_pair$player10","Object","entries","_ref","_match$pair","_match$pair$player","_match$pair2","_match$pair2$player","_match$pair3","_match$pair3$player","_match$pair4","_match$pair4$player","_match$pair5","_match$pair5$player","_match$pair6","_match$pair6$player","_match$pair7","_match$pair7$player","_match$pair8","_match$pair8$player","_match$pair9","_match$pair9$player","_match$pair0","_match$pair0$player","_match$pair1","_match$pair1$player","_match$pair10","_match$pair10$player","_match$pair11","_match$pair11$player","_match$pair12","_match$pair12$player","_match$pair13","_match$pair13$player","_match$pair14","_match$pair14$player","e","stopPropagation","tournamentId","totalSets","matchesPlayed","totalPoints","_calculatedMatchResul7","_selectedMatchResults13","_calculatedMatchResul8","_selectedMatchResults14","_selectedMatchResults15","_selectedMatchResults16","_selectedMatchResults17","_selectedMatchResults18","_selectedMatchResults19","_selectedMatchResults20","_selectedMatchResults21","_selectedMatchResults22","_selectedMatchResults23","onClose","onMatchFinish","isOpen"],"sources":["/Users/nedev/padel-tournament-app/src/App.tsx"],"sourcesContent":["import React, { useState, useEffect, useCallback, useMemo } from \"react\";\nimport \"./App.css\";\nimport { TournamentManager } from \"./components/TournamentManager\";\nimport { PlayerManager } from \"./components/PlayerManager\";\nimport { PairManager } from \"./components/PairManager\";\nimport { MatchScoreEditor } from \"./components/MatchScoreEditor\";\nimport StandingsTable from \"./components/StandingsTable\";\nimport { SuccessModal } from \"./components/SuccessModal\";\n\nimport {\n  Tournament,\n  Player,\n  Pair,\n  Match,\n  Game,\n  createPair,\n  getPairs,\n  updatePair,\n  deletePair as deletePairFromDB,\n  deletePairsByTournament,\n  createMatch,\n  getMatches,\n  updateMatch,\n  deleteMatchesByTournament,\n  createGame,\n  getGames,\n  updateGame,\n  deleteGame,\n  updateTournament,\n} from \"./lib/database\";\nimport { testConnection } from \"./lib/supabaseClient\";\nimport { FlexibleMatchFinisher } from \"./components/FlexibleMatchFinisher\";\nimport { MatchResultCalculator } from \"./components/MatchResultCalculator\";\nimport {\n  TournamentWinnerCalculator,\n  TournamentWinner,\n} from \"./components/TournamentWinnerCalculator\";\n\nfunction App() {\n  const [selectedTournament, setSelectedTournament] =\n    useState<Tournament | null>(null);\n  const [pairs, setPairs] = useState<Pair[]>([]);\n  const [matches, setMatches] = useState<Match[]>([]);\n  const [games, setGames] = useState<Game[]>([]);\n  const [selectedMatchId, setSelectedMatchId] = useState<string | null>(null);\n  const [error, setError] = useState<string>(\"\");\n  const [loading, setLoading] = useState(false);\n  const [showPlayerManager, setShowPlayerManager] = useState(false);\n  const [showPairManager, setShowPairManager] = useState(false);\n  const [selectedPlayers, setSelectedPlayers] = useState<Player[]>([]);\n  const [showWinnerScreen, setShowWinnerScreen] = useState(false);\n  const [showMatchResults, setShowMatchResults] = useState(false);\n  const [selectedMatchResults, setSelectedMatchResults] =\n    useState<Match | null>(null);\n  const [calculatedMatchResults, setCalculatedMatchResults] =\n    useState<any>(null);\n  const [showScoreCorrector, setShowScoreCorrector] = useState(false);\n  const [selectedCorrectorMatch, setSelectedCorrectorMatch] =\n    useState<Match | null>(null);\n  const [forceRefresh, setForceRefresh] = useState(0);\n  const [showDebugInfo, setShowDebugInfo] = useState(false);\n  const [editingGames, setEditingGames] = useState<{\n    [key: string]: { pair1: number; pair2: number };\n  }>({});\n  const [editingTieBreaks, setEditingTieBreaks] = useState<{\n    [key: string]: { pair1: number; pair2: number };\n  }>({});\n\n  const [showSuccessModal, setShowSuccessModal] = useState(false);\n  const [successModalData, setSuccessModalData] = useState({\n    title: \"\",\n    message: \"\",\n    icon: \"✅\",\n  });\n\n  // Cargar datos cuando se selecciona un torneo\n  useEffect(() => {\n    if (selectedTournament) {\n      loadTournamentData();\n    }\n  }, [selectedTournament?.id]);\n\n  const loadTournamentData = useCallback(async () => {\n    if (!selectedTournament) return;\n\n    try {\n      setLoading(true);\n      setError(\"\");\n      console.log(\"Loading tournament data for:\", selectedTournament.name);\n\n      const [pairsData, matchesData] = await Promise.all([\n        getPairs(selectedTournament.id),\n        getMatches(selectedTournament.id),\n      ]);\n\n      console.log(\"Pairs loaded:\", pairsData.length, \"pairs\");\n      setPairs(pairsData);\n\n      console.log(\n        \"Matches loaded from database:\",\n        matchesData.length,\n        \"matches\"\n      );\n      setMatches(matchesData);\n    } catch (err) {\n      console.error(\"Error loading tournament data:\", err);\n      setError(\n        \"Error al cargar los datos del torneo: \" + (err as Error).message\n      );\n    } finally {\n      setLoading(false);\n    }\n  }, [selectedTournament]);\n\n  const deletePair = async (pairId: string) => {\n    try {\n      setError(\"\");\n      console.log(\"Eliminando pareja:\", pairId);\n\n      await deletePairFromDB(pairId);\n      setPairs(pairs.filter((p) => p.id !== pairId));\n\n      console.log(\"Pareja eliminada exitosamente\");\n    } catch (err) {\n      console.error(\"Error eliminando pareja:\", err);\n      setError(\"Error al eliminar la pareja: \" + (err as Error).message);\n    }\n  };\n\n  const updatePairPlayers = async (\n    pairId: string,\n    player1: Player,\n    player2: Player\n  ) => {\n    try {\n      setError(\"\");\n      console.log(\"Actualizando pareja:\", pairId);\n      console.log(\"Nuevos jugadores:\", player1.name, \"+\", player2.name);\n\n      // Actualizar la pareja en la base de datos\n      await updatePair(pairId, {\n        player1_id: player1.id,\n        player2_id: player2.id,\n      });\n\n      // Actualizar el estado local\n      setPairs(\n        pairs.map((pair) => {\n          if (pair.id === pairId) {\n            return {\n              ...pair,\n              player1_id: player1.id,\n              player2_id: player2.id,\n              player1: player1,\n              player2: player2,\n            };\n          }\n          return pair;\n        })\n      );\n\n      console.log(\"Pareja actualizada exitosamente\");\n    } catch (err) {\n      console.error(\"Error actualizando pareja:\", err);\n      setError(\"Error al actualizar la pareja: \" + (err as Error).message);\n    }\n  };\n\n  const addPair = async (player1: Player, player2: Player) => {\n    if (!selectedTournament) {\n      setError(\"No hay torneo seleccionado\");\n      return;\n    }\n\n    try {\n      setError(\"\");\n\n      // Verificar duplicados en estado local\n      const existingPairLocal = pairs.find((pair) => {\n        const sameIds =\n          (pair.player1_id === player1.id && pair.player2_id === player2.id) ||\n          (pair.player1_id === player2.id && pair.player2_id === player1.id);\n\n        const sameNames =\n          (pair.player1?.name.toLowerCase() === player1.name.toLowerCase() &&\n            pair.player2?.name.toLowerCase() === player2.name.toLowerCase()) ||\n          (pair.player1?.name.toLowerCase() === player2.name.toLowerCase() &&\n            pair.player2?.name.toLowerCase() === player1.name.toLowerCase());\n\n        return sameIds || sameNames;\n      });\n\n      if (existingPairLocal) {\n        setError(\n          `La pareja ${player1.name} y ${player2.name} ya está registrada`\n        );\n        return;\n      }\n\n      const newPair = await createPair(\n        selectedTournament.id,\n        player1.id,\n        player2.id\n      );\n\n      setPairs([...pairs, newPair]);\n      setSelectedPlayers([]);\n\n      console.log(\"Pair added successfully\");\n    } catch (err) {\n      console.error(\"Error creating pair:\", err);\n      setError(\"Error al crear la pareja: \" + (err as Error).message);\n    }\n  };\n\n  const startTournament = async () => {\n    if (!selectedTournament || pairs.length < 2) {\n      setError(\"Se necesitan al menos 2 parejas para iniciar el torneo\");\n      return;\n    }\n\n    try {\n      setLoading(true);\n      setError(\"\");\n\n      console.log(\"🚀 Iniciando torneo:\", selectedTournament.name);\n\n      // Limpiar partidos existentes\n      if (matches.length > 0) {\n        await deleteMatchesByTournament(selectedTournament.id);\n        setMatches([]);\n      }\n\n      const allPairs = [...pairs];\n      const allCombinations = [];\n\n      for (let i = 0; i < allPairs.length; i++) {\n        for (let j = i + 1; j < allPairs.length; j++) {\n          allCombinations.push({\n            pair1: allPairs[i],\n            pair2: allPairs[j],\n          });\n        }\n      }\n\n      const finalMatches = [];\n      const remainingCombinations = [...allCombinations];\n      let round = 1;\n\n      while (remainingCombinations.length > 0) {\n        const roundMatches = [];\n        const usedPairs = new Set();\n        const courtOrder = [];\n\n        for (let i = 0; i < selectedTournament.courts; i++) {\n          const rotatedCourt =\n            ((round - 1 + i) % selectedTournament.courts) + 1;\n          courtOrder.push(rotatedCourt);\n        }\n\n        for (let courtIndex = 0; courtIndex < courtOrder.length; courtIndex++) {\n          const court = courtOrder[courtIndex];\n          let bestIndex = -1;\n          let bestScore = -1;\n\n          for (let i = 0; i < remainingCombinations.length; i++) {\n            const combo = remainingCombinations[i];\n\n            if (\n              !usedPairs.has(combo.pair1.id) &&\n              !usedPairs.has(combo.pair2.id)\n            ) {\n              let score = 0;\n\n              for (let j = 0; j < remainingCombinations.length; j++) {\n                if (i !== j) {\n                  const futureCombo = remainingCombinations[j];\n                  if (\n                    !usedPairs.has(futureCombo.pair1.id) &&\n                    !usedPairs.has(futureCombo.pair2.id) &&\n                    futureCombo.pair1.id !== combo.pair1.id &&\n                    futureCombo.pair1.id !== combo.pair2.id &&\n                    futureCombo.pair2.id !== combo.pair1.id &&\n                    futureCombo.pair2.id !== combo.pair2.id\n                  ) {\n                    score++;\n                  }\n                }\n              }\n\n              if (score > bestScore) {\n                bestScore = score;\n                bestIndex = i;\n              }\n            }\n          }\n\n          if (bestIndex !== -1) {\n            const combo = remainingCombinations[bestIndex];\n\n            const match = {\n              pair1: combo.pair1,\n              pair2: combo.pair2,\n              round,\n              court,\n            };\n\n            roundMatches.push(match);\n            usedPairs.add(combo.pair1.id);\n            usedPairs.add(combo.pair2.id);\n            remainingCombinations.splice(bestIndex, 1);\n          } else {\n            break;\n          }\n        }\n\n        if (roundMatches.length > 0) {\n          finalMatches.push(...roundMatches);\n        }\n\n        round++;\n      }\n\n      const createdMatches = [];\n\n      for (const match of finalMatches) {\n        try {\n          const createdMatch = await createMatch(\n            selectedTournament.id,\n            match.pair1.id,\n            match.pair2.id,\n            match.court,\n            match.round\n          );\n          createdMatches.push(createdMatch);\n        } catch (error) {\n          console.error(\"Error creating match:\", error);\n        }\n      }\n\n      await updateTournament(selectedTournament.id, { is_started: true });\n      setSelectedTournament((prev) =>\n        prev ? { ...prev, is_started: true } : null\n      );\n\n      await loadTournamentData();\n\n      setSuccessModalData({\n        title: \"¡Torneo Iniciado!\",\n        message: `Se han creado ${createdMatches.length} partidos exitosamente usando ${selectedTournament.courts} canchas. El torneo está listo para comenzar.`,\n        icon: \"🏆\",\n      });\n      setShowSuccessModal(true);\n    } catch (error) {\n      console.error(\"Error starting tournament:\", error);\n      setError(\"Error al iniciar el torneo: \" + (error as Error).message);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const addGame = async (matchId: string) => {\n    try {\n      setError(\"\");\n      const gameNumber = games.filter((g) => g.match_id === matchId).length + 1;\n\n      const newGame = await createGame(matchId, gameNumber);\n      setGames([...games, newGame]);\n    } catch (err) {\n      console.error(\"❌ Error al agregar el juego:\", err);\n      setError(\"Error al agregar el juego\");\n    }\n  };\n\n  const updateGameScore = useCallback(\n    async (gameId: string, pair1Games: number, pair2Games: number) => {\n      try {\n        setError(\"\");\n\n        setGames((prevGames) =>\n          prevGames.map((g) =>\n            g.id === gameId\n              ? { ...g, pair1_games: pair1Games, pair2_games: pair2Games }\n              : g\n          )\n        );\n\n        await updateGame(gameId, {\n          pair1_games: pair1Games,\n          pair2_games: pair2Games,\n        });\n      } catch (err) {\n        console.error(\"❌ Error al actualizar el marcador:\", err);\n        setError(\"Error al actualizar el marcador: \" + (err as Error).message);\n      }\n    },\n    [games, selectedTournament]\n  );\n\n  const handleGameScoreChange = useCallback(\n    (gameId: string, pair1Games: number, pair2Games: number) => {\n      setEditingGames((prev) => ({\n        ...prev,\n        [gameId]: { pair1: pair1Games, pair2: pair2Games },\n      }));\n    },\n    []\n  );\n\n  const handleTieBreakScoreChange = useCallback(\n    (gameId: string, pair1Points: number, pair2Points: number) => {\n      setEditingTieBreaks((prev) => ({\n        ...prev,\n        [gameId]: { pair1: pair1Points, pair2: pair2Points },\n      }));\n    },\n    []\n  );\n\n  const handleGameScoreBlur = useCallback(\n    async (gameId: string) => {\n      const editingGame = editingGames[gameId];\n      if (editingGame) {\n        await updateGameScore(gameId, editingGame.pair1, editingGame.pair2);\n        setEditingGames((prev) => {\n          const newState = { ...prev };\n          delete newState[gameId];\n          return newState;\n        });\n      }\n    },\n    [editingGames]\n  );\n\n  const handleTieBreakScoreBlur = useCallback(\n    async (gameId: string) => {\n      const editingTieBreak = editingTieBreaks[gameId];\n      if (editingTieBreak) {\n        await updateTieBreakScore(\n          gameId,\n          editingTieBreak.pair1,\n          editingTieBreak.pair2\n        );\n        setEditingTieBreaks((prev) => {\n          const newState = { ...prev };\n          delete newState[gameId];\n          return newState;\n        });\n      }\n    },\n    [editingTieBreaks]\n  );\n\n  const updateTieBreakScore = async (\n    gameId: string,\n    pair1Points: number,\n    pair2Points: number\n  ) => {\n    try {\n      setError(\"\");\n\n      setGames((prevGames) =>\n        prevGames.map((g) =>\n          g.id === gameId\n            ? {\n                ...g,\n                tie_break_pair1_points: pair1Points,\n                tie_break_pair2_points: pair2Points,\n              }\n            : g\n        )\n      );\n\n      await updateGame(gameId, {\n        tie_break_pair1_points: pair1Points,\n        tie_break_pair2_points: pair2Points,\n      });\n    } catch (err) {\n      console.error(\"❌ Error al actualizar el tie break:\", err);\n      setError(\"Error al actualizar el tie break: \" + (err as Error).message);\n    }\n  };\n\n  const toggleTieBreak = async (gameId: string) => {\n    try {\n      setError(\"\");\n      const game = games.find((g) => g.id === gameId);\n      if (!game) return;\n\n      const newIsTieBreak = !game.is_tie_break;\n\n      setGames((prevGames) =>\n        prevGames.map((g) =>\n          g.id === gameId\n            ? {\n                ...g,\n                is_tie_break: newIsTieBreak,\n                tie_break_pair1_points: 0,\n                tie_break_pair2_points: 0,\n              }\n            : g\n        )\n      );\n\n      await updateGame(gameId, {\n        is_tie_break: newIsTieBreak,\n        tie_break_pair1_points: 0,\n        tie_break_pair2_points: 0,\n      });\n    } catch (err) {\n      setError(\"Error al cambiar el tipo de juego\");\n      console.error(err);\n    }\n  };\n\n  const removeGame = async (gameId: string) => {\n    try {\n      setError(\"\");\n\n      await deleteGame(gameId);\n      setGames(games.filter((g) => g.id !== gameId));\n    } catch (err) {\n      console.error(\"❌ Error al eliminar el juego:\", err);\n      setError(\"Error al eliminar el juego: \" + (err as Error).message);\n    }\n  };\n\n  const correctGameScore = useCallback(\n    async (\n      gameId: string,\n      pair1Games: number,\n      pair2Games: number,\n      pair1TieBreakPoints: number = 0,\n      pair2TieBreakPoints: number = 0,\n      isTieBreak: boolean = false\n    ) => {\n      try {\n        setError(\"\");\n\n        setGames((prevGames) =>\n          prevGames.map((g) =>\n            g.id === gameId\n              ? {\n                  ...g,\n                  pair1_games: pair1Games,\n                  pair2_games: pair2Games,\n                  tie_break_pair1_points: pair1TieBreakPoints,\n                  tie_break_pair2_points: pair2TieBreakPoints,\n                  is_tie_break: isTieBreak,\n                  updated_at: new Date().toISOString(),\n                }\n              : g\n          )\n        );\n\n        await updateGame(gameId, {\n          pair1_games: pair1Games,\n          pair2_games: pair2Games,\n          tie_break_pair1_points: pair1TieBreakPoints,\n          tie_break_pair2_points: pair2TieBreakPoints,\n          is_tie_break: isTieBreak,\n        });\n      } catch (err) {\n        console.error(\"❌ Error al corregir el marcador:\", err);\n        setError(\"Error al corregir el marcador: \" + (err as Error).message);\n      }\n    },\n    []\n  );\n\n  const finishMatch = async (matchId: string) => {\n    try {\n      setError(\"\");\n      const match = matches.find((m) => m.id === matchId);\n      if (!match) {\n        console.error(\"Match not found:\", matchId);\n        return;\n      }\n\n      const matchGames = games.filter((g) => g.match_id === matchId);\n\n      if (!FlexibleMatchFinisher.canFinishMatch(matchGames)) {\n        setError(\n          \"No se puede finalizar el partido. Verifica que todos los juegos tengan marcadores válidos.\"\n        );\n        return;\n      }\n\n      const result = await FlexibleMatchFinisher.finishMatch(\n        match,\n        matchGames,\n        pairs,\n        async () => {\n          if (selectedTournament) {\n            const pairsData = await getPairs(selectedTournament.id);\n            setPairs(pairsData);\n            setForceRefresh((prev) => prev + 1);\n            const matchesData = await getMatches(selectedTournament.id);\n            setMatches(matchesData);\n          }\n        }\n      );\n\n      if (result.success) {\n        setMatches(\n          matches.map((m) =>\n            m.id === matchId\n              ? { ...m, winner_id: result.winnerId, is_finished: true }\n              : m\n          )\n        );\n\n        if (selectedTournament) {\n          const updatedPairsData = await getPairs(selectedTournament.id);\n          setPairs(updatedPairsData);\n          setForceRefresh((prev) => prev + 1);\n        }\n\n        alert(result.message);\n      } else {\n        setError(result.message);\n      }\n    } catch (err) {\n      setError(\"Error al finalizar el partido\");\n      console.error(err);\n    }\n  };\n\n  const handleMatchSelect = (matchId: string) => {\n    setSelectedMatchId(matchId);\n    loadMatchGames(matchId);\n  };\n\n  const loadMatchGames = async (matchId: string) => {\n    try {\n      const gamesData = await getGames(matchId);\n      setGames(gamesData);\n    } catch (err) {\n      console.error(\"❌ Error al cargar juegos:\", err);\n    }\n  };\n\n  const selectedMatch = matches.find((match) => match.id === selectedMatchId);\n\n  const matchesByRound = matches.reduce((acc, match) => {\n    if (!acc[match.round]) {\n      acc[match.round] = [];\n    }\n    acc[match.round].push(match);\n    return acc;\n  }, {} as Record<number, Match[]>);\n\n  const sortedPairs = useMemo(() => {\n    return [...pairs].sort((a, b) => {\n      // Criterio 1: Puntos totales (descendente) - CRITERIO PRINCIPAL\n      if (a.points !== b.points) {\n        return b.points - a.points;\n      }\n      // Criterio 2: Sets ganados (descendente) - CRITERIO DE DESEMPATE\n      if (a.sets_won !== b.sets_won) {\n        return b.sets_won - a.sets_won;\n      }\n      // Criterio 3: Juegos ganados (descendente)\n      if (a.games_won !== b.games_won) {\n        return b.games_won - a.games_won;\n      }\n      // Criterio 4: Menos partidos jugados (mejor eficiencia)\n      return a.matches_played - b.matches_played;\n    });\n  }, [pairs, forceRefresh]);\n\n  const isTournamentFinished = useMemo(() => {\n    return matches.length > 0 && matches.every((match) => match.is_finished);\n  }, [matches]);\n\n  const [tournamentWinner, setTournamentWinner] =\n    useState<TournamentWinner | null>(null);\n\n  const winner = useMemo(() => {\n    return tournamentWinner\n      ? tournamentWinner.pair\n      : sortedPairs.length > 0\n      ? sortedPairs[0]\n      : null;\n  }, [tournamentWinner, sortedPairs]);\n\n  const showWinnerScreenHandler = async () => {\n    try {\n      console.log(\"🏆 Calculando ganador del torneo...\");\n      const winner = await TournamentWinnerCalculator.calculateTournamentWinner(\n        pairs,\n        matches\n      );\n      setTournamentWinner(winner);\n      setShowWinnerScreen(true);\n    } catch (error) {\n      console.error(\"❌ Error al calcular ganador:\", error);\n      setShowWinnerScreen(true);\n    }\n  };\n\n  const hideWinnerScreenHandler = () => {\n    setShowWinnerScreen(false);\n  };\n\n  const showMatchResultsHandler = async (match: Match) => {\n    try {\n      // Obtener los juegos del partido\n      const matchGames = await getGames(match.id);\n\n      // Calcular estadísticas en tiempo real\n      const stats = MatchResultCalculator.calculateMatchStatistics(\n        match,\n        matchGames\n      );\n\n      // Crear un objeto con los resultados calculados\n      const calculatedMatch = {\n        ...match,\n        pair1: {\n          ...match.pair1,\n          games_won: stats.pair1GamesWon,\n          sets_won: stats.pair1SetsWon,\n          points: stats.pair1TotalPoints,\n        },\n        pair2: {\n          ...match.pair2,\n          games_won: stats.pair2GamesWon,\n          sets_won: stats.pair2SetsWon,\n          points: stats.pair2TotalPoints,\n        },\n        winner_id: stats.isTie\n          ? undefined\n          : stats.pair1TotalPoints > stats.pair2TotalPoints\n          ? match.pair1_id\n          : match.pair2_id,\n      };\n\n      setSelectedMatchResults(match);\n      setCalculatedMatchResults(calculatedMatch);\n      setShowMatchResults(true);\n    } catch (error) {\n      console.error(\"Error al calcular resultados:\", error);\n      // Fallback al comportamiento original\n      setSelectedMatchResults(match);\n      setShowMatchResults(true);\n    }\n  };\n\n  const hideMatchResultsHandler = () => {\n    setShowMatchResults(false);\n    setSelectedMatchResults(null);\n    setCalculatedMatchResults(null);\n  };\n\n  const handleViewTournamentResults = async (tournament: Tournament) => {\n    try {\n      setSelectedTournament(tournament);\n      await loadTournamentData();\n      alert(\n        `✅ Torneo \"${tournament.name}\" seleccionado\\n\\nAhora puedes ver todos los partidos y resultados en el panel derecho.`\n      );\n    } catch (err) {\n      console.error(\"❌ Error al cargar resultados del torneo:\", err);\n      alert(\"Error al cargar los resultados del torneo. Inténtalo de nuevo.\");\n    }\n  };\n\n  const recalculateMatchWinner = async (matchId: string) => {\n    try {\n      const match = matches.find((m) => m.id === matchId);\n      if (!match) {\n        console.error(\"Match not found:\", matchId);\n        return;\n      }\n\n      const matchGames = await getGames(matchId);\n\n      if (matchGames.length === 0) {\n        console.log(\"No hay juegos para recalcular\");\n        return;\n      }\n\n      let pair1Games = 0;\n      let pair2Games = 0;\n\n      matchGames.forEach((game) => {\n        if (game.is_tie_break) {\n          if (\n            game.tie_break_pair1_points >= 10 &&\n            game.tie_break_pair1_points - game.tie_break_pair2_points >= 2\n          ) {\n            pair1Games++;\n          } else if (\n            game.tie_break_pair2_points >= 10 &&\n            game.tie_break_pair2_points - game.tie_break_pair1_points >= 2\n          ) {\n            pair2Games++;\n          }\n        } else {\n          if (game.pair1_games > game.pair2_games) {\n            pair1Games++;\n          } else if (game.pair2_games > game.pair1_games) {\n            pair2Games++;\n          }\n        }\n      });\n\n      const isTie = pair1Games === pair2Games;\n      const winnerId = isTie\n        ? undefined\n        : pair1Games > pair2Games\n        ? match.pair1_id\n        : match.pair2_id;\n\n      await updateMatch(matchId, {\n        winner_id: winnerId,\n        is_finished: true,\n      });\n\n      console.log(\"✅ Ganador recalculado y actualizado en la base de datos\");\n    } catch (error) {\n      console.error(\"Error recalculating match winner:\", error);\n    }\n  };\n\n  const handleBackToHome = () => {\n    setSelectedTournament(null);\n    setPairs([]);\n    setMatches([]);\n    setGames([]);\n    setSelectedMatchId(null);\n    setError(\"\");\n    setShowWinnerScreen(false);\n    setShowMatchResults(false);\n    setSelectedMatchResults(null);\n    setShowScoreCorrector(false);\n    setSelectedCorrectorMatch(null);\n    setForceRefresh(0);\n    setShowDebugInfo(false);\n    setEditingGames({});\n    setEditingTieBreaks({});\n    setShowSuccessModal(false);\n    setSuccessModalData({\n      title: \"\",\n      message: \"\",\n      icon: \"✅\",\n    });\n  };\n\n  const openScoreCorrector = async (match: Match) => {\n    try {\n      // Recargar los juegos del partido antes de abrir el editor\n      const matchGames = await getGames(match.id);\n      setGames((prevGames) => {\n        const otherGames = prevGames.filter((g) => g.match_id !== match.id);\n        return [...otherGames, ...matchGames];\n      });\n    } catch (error) {\n      console.error(\"Error al cargar juegos:\", error);\n    }\n    setSelectedCorrectorMatch(match);\n    setShowScoreCorrector(true);\n  };\n\n  const closeScoreCorrector = () => {\n    setShowScoreCorrector(false);\n    setSelectedCorrectorMatch(null);\n  };\n\n  // Función para cuando se corrige un juego (NO incrementa forceRefresh)\n  const handleGameCorrection = async () => {\n    if (selectedTournament) {\n      console.log(\n        \"🔄 Juego corregido - NO actualizando tabla de clasificación\"\n      );\n\n      // NO incrementar forceRefresh cuando se corrige un juego\n      // Solo cerrar el editor\n      console.log(\"✅ Solo se corrigió el juego - NO se actualizó la tabla\");\n    }\n    closeScoreCorrector();\n  };\n\n  // Función para cuando se finaliza un partido (SÍ incrementa forceRefresh)\n  const handleScoreCorrectorUpdate = async () => {\n    if (selectedTournament) {\n      console.log(\n        \"🏆 Actualizando tabla de clasificación después de FINALIZAR partido...\"\n      );\n\n      // SOLO incrementar forceRefresh cuando se FINALIZA un partido\n      setForceRefresh((prev) => {\n        console.log(\n          `🏆 Incrementando forceRefresh de ${prev} a ${\n            prev + 1\n          } (FINALIZACIÓN)`\n        );\n        return prev + 1;\n      });\n\n      console.log(\n        \"✅ Tabla de clasificación actualizada después de finalizar partido\"\n      );\n    }\n    closeScoreCorrector();\n  };\n\n  return (\n    <div className=\"App\">\n      <div className=\"container\">\n        <h1>🏆 Gestión de Torneos Express y Retas</h1>\n\n        {error && (\n          <div className=\"error\">\n            <h4>❌ Error</h4>\n            <p>{error}</p>\n            <div className=\"error-help\">\n              <h5>💡 Ayuda:</h5>\n              <ol>\n                <li>Verifica tu conexión a internet</li>\n                <li>Intenta recargar la página</li>\n                <li>Si el problema persiste, contacta al administrador</li>\n              </ol>\n            </div>\n          </div>\n        )}\n\n        {loading && (\n          <div className=\"loading\">\n            <p>⏳ Cargando...</p>\n          </div>\n        )}\n\n        <div className=\"main-layout\">\n          <div className=\"left-panel\">\n            <TournamentManager\n              selectedTournament={selectedTournament || undefined}\n              onTournamentSelect={setSelectedTournament}\n              onViewResults={handleViewTournamentResults}\n            />\n          </div>\n\n          <div className=\"right-panel\">\n            {selectedTournament ? (\n              <>\n                <div className=\"tournament-details\">\n\n                  {/* Gestión de Jugadores - MOVIDA AQUÍ */}\n                  <div className=\"player-management-section\">\n                    <div className=\"player-management-header\">\n                      <h3>👥 Gestión de Jugadores</h3>\n                      <button\n                        className=\"toggle-player-manager-btn\"\n                        onClick={() => setShowPlayerManager(!showPlayerManager)}\n                      >\n                        {showPlayerManager\n                          ? \"👥 Ocultar Gestión de Jugadores\"\n                          : \"👥 Mostrar Gestión de Jugadores\"}\n                      </button>\n                    </div>\n\n                    {showPlayerManager && (\n                      <div className=\"player-manager-container\">\n                        <PlayerManager\n                          playersInPairs={pairs.flatMap((pair) => [\n                            pair.player1_id,\n                            pair.player2_id,\n                          ])}\n                          onPlayerSelect={(players) => {\n                            console.log(\"=== SELECCIÓN DE JUGADORES ===\");\n                            console.log(\"Players selected:\", players.length);\n                            players.forEach((player, index) => {\n                              console.log(\n                                `Player ${index + 1}:`,\n                                player.name,\n                                \"(ID:\",\n                                player.id + \")\"\n                              );\n                            });\n\n                            // Validación: Verificar si algún jugador ya está en una pareja\n                            const playersInPairs = players.filter((player) => {\n                              const isInPair = pairs.some(\n                                (pair) =>\n                                  pair.player1_id === player.id ||\n                                  pair.player2_id === player.id\n                              );\n\n                              if (isInPair) {\n                                const existingPair = pairs.find(\n                                  (pair) =>\n                                    pair.player1_id === player.id ||\n                                    pair.player2_id === player.id\n                                );\n                                console.log(\n                                  `🚨 JUGADOR YA EN PAREJA: ${\n                                    player.name\n                                  } está en pareja con ${\n                                    existingPair?.player1?.id === player.id\n                                      ? existingPair?.player2?.name\n                                      : existingPair?.player1?.name\n                                  }`\n                                );\n                              }\n\n                              return isInPair;\n                            });\n\n                            if (playersInPairs.length > 0) {\n                              const playerNames = playersInPairs\n                                .map((p) => p.name)\n                                .join(\", \");\n                              console.log(\n                                \"🚨 ERROR: Jugadores ya están en parejas:\",\n                                playerNames\n                              );\n                              setError(\n                                `Los jugadores ${playerNames} ya están en parejas existentes. Debes eliminar sus parejas actuales antes de poder seleccionarlos nuevamente.`\n                              );\n                              return;\n                            }\n\n                            // Validación: No permitir jugadores con nombres iguales\n                            if (players.length === 2) {\n                              const player1 = players[0];\n                              const player2 = players[1];\n\n                              if (\n                                player1.name.toLowerCase() ===\n                                player2.name.toLowerCase()\n                              ) {\n                                console.log(\n                                  \"🚨 ERROR: Jugadores con nombres iguales detectados\"\n                                );\n                                console.log(\n                                  \"Player 1:\",\n                                  player1.name,\n                                  \"(ID:\",\n                                  player1.id + \")\"\n                                );\n                                console.log(\n                                  \"Player 2:\",\n                                  player2.name,\n                                  \"(ID:\",\n                                  player2.id + \")\"\n                                );\n                                setError(\n                                  \"No puedes seleccionar dos jugadores con el mismo nombre\"\n                                );\n                                return;\n                              }\n\n                              // Validación: Verificar si ya existe una pareja con estos jugadores\n                              const existingPair = pairs.find((pair) => {\n                                const sameIds =\n                                  (pair.player1_id === player1.id &&\n                                    pair.player2_id === player2.id) ||\n                                  (pair.player1_id === player2.id &&\n                                    pair.player2_id === player1.id);\n\n                                const sameNames =\n                                  (pair.player1?.name.toLowerCase() ===\n                                    player1.name.toLowerCase() &&\n                                    pair.player2?.name.toLowerCase() ===\n                                      player2.name.toLowerCase()) ||\n                                  (pair.player1?.name.toLowerCase() ===\n                                    player2.name.toLowerCase() &&\n                                    pair.player2?.name.toLowerCase() ===\n                                      player1.name.toLowerCase());\n\n                                if (sameIds || sameNames) {\n                                  console.log(\n                                    \"🚨 PAREJA DUPLICADA DETECTADA:\",\n                                    player1.name,\n                                    \"+\",\n                                    player2.name\n                                  );\n                                  console.log(\"Existing pair:\", existingPair);\n                                }\n\n                                return sameIds || sameNames;\n                              });\n\n                              if (existingPair) {\n                                console.log(\n                                  \"🚨 ERROR: Pareja ya existe en la base de datos\"\n                                );\n                                setError(\n                                  `La pareja ${player1.name} + ${player2.name} ya existe en el torneo`\n                                );\n                                return;\n                              }\n\n                              // Si llegamos aquí, la pareja es válida\n                              console.log(\n                                \"✅ PAREJA VÁLIDA:\",\n                                player1.name,\n                                \"+\",\n                                player2.name\n                              );\n                              addPair(player1, player2);\n                              setSelectedPlayers([]); // Limpiar selección después de crear la pareja\n                            } else {\n                              setSelectedPlayers(players);\n                            }\n                          }}\n                          selectedPlayers={selectedPlayers}\n                          allowMultipleSelection={true}\n                        />\n                      </div>\n                    )}\n                  </div>\n\n                  {/* Gestión de Parejas - NUEVO COMPONENTE */}\n                  <div className=\"pair-management-section\">\n                    <div className=\"pair-management-header\">\n                      <button\n                        className=\"toggle-pair-manager-btn\"\n                        onClick={() => setShowPairManager(!showPairManager)}\n                      >\n                        {showPairManager\n                          ? \"✏️ Ocultar Gestión de Parejas\"\n                          : \"✏️ Mostrar Gestión de Parejas\"}\n                      </button>\n                    </div>\n\n                    {showPairManager && (\n                      <div className=\"pair-manager-container\">\n                        <PairManager\n                          pairs={pairs}\n                          onPairUpdate={updatePairPlayers}\n                          onPairDelete={deletePair}\n                        />\n                      </div>\n                    )}\n                  </div>\n\n                  {!selectedTournament.is_started ? (\n                    <div className=\"start-tournament-section\">\n                      <h3>🚀 Iniciar Torneo</h3>\n                      <div className=\"tournament-info\">\n                        <p>Tienes {pairs.length} parejas registradas</p>\n                        <p>\n                          Se crearán {(pairs.length * (pairs.length - 1)) / 2}{\" \"}\n                          partidos (round-robin completo - todas las parejas se\n                          enfrentan)\n                        </p>\n                        <p>\n                          Estado del torneo:{\" \"}\n                          {selectedTournament.is_started\n                            ? \"Iniciado\"\n                            : \"Pendiente\"}\n                        </p>\n                      </div>\n                      <button\n                        className=\"start-button\"\n                        onClick={startTournament}\n                        disabled={loading || pairs.length < 2}\n                      >\n                        {loading\n                          ? \"⏳ Iniciando...\"\n                          : selectedTournament.is_started\n                          ? \"🏆 Torneo Ya Iniciado\"\n                          : pairs.length < 2\n                          ? \"❌ Necesitas al menos 2 parejas\"\n                          : \"🚀 ¡Iniciar Torneo!\"}\n                      </button>\n                    </div>\n                  ) : (\n                    <div className=\"tournament-status-section\">\n                      <h3>🏆 Torneo en Progreso</h3>\n                      <div className=\"tournament-info\">\n                        <p>El torneo ya está iniciado y en progreso</p>\n                        <p>Tienes {pairs.length} parejas registradas</p>\n                        <p>Estado del torneo: Iniciado</p>\n                      </div>\n                      <button\n                        className=\"reset-button\"\n                        onClick={async () => {\n                          if (\n                            window.confirm(\n                              \"¿Estás seguro de que quieres resetear el torneo? Esto eliminará todos los partidos existentes.\"\n                            )\n                          ) {\n                            try {\n                              setLoading(true);\n                              await deleteMatchesByTournament(\n                                selectedTournament.id\n                              );\n                              await updateTournament(selectedTournament.id, {\n                                is_started: false,\n                              });\n                              setSelectedTournament((prev) =>\n                                prev ? { ...prev, is_started: false } : null\n                              );\n                              setMatches([]);\n                              await loadTournamentData();\n                              setSuccessModalData({\n                                title: \"¡Torneo Reseteado!\",\n                                message:\n                                  \"El torneo ha sido reseteado y está listo para iniciar nuevamente.\",\n                                icon: \"🔄\",\n                              });\n                              setShowSuccessModal(true);\n                            } catch (error) {\n                              setError(\n                                \"Error al resetear el torneo: \" +\n                                  (error as Error).message\n                              );\n                            } finally {\n                              setLoading(false);\n                            }\n                          }\n                        }}\n                        disabled={loading}\n                      >\n                        {loading ? \"⏳ Reseteando...\" : \"🔄 Resetear Torneo\"}\n                      </button>\n                    </div>\n                  )}\n\n                  {/* Debug info - COLAPSIBLE */}\n                  {selectedTournament && (\n                    <div className=\"debug-section\">\n                      <button\n                        className=\"debug-toggle-btn\"\n                        onClick={() => setShowDebugInfo(!showDebugInfo)}\n                      >\n                        {showDebugInfo ? \"🔽\" : \"🔼\"} Debug Info\n                      </button>\n\n                      {showDebugInfo && (\n                        <div className=\"debug-info\">\n                          <div className=\"debug-header\">\n                            <h4>🔧 Información de Debug</h4>\n                            <div className=\"debug-stats\">\n                              <span>\n                                Estado:{\" \"}\n                                {selectedTournament.is_started\n                                  ? \"✅ Iniciado\"\n                                  : \"⏳ Pendiente\"}\n                              </span>\n                              <span>Parejas: {pairs.length}</span>\n                              <span>Partidos: {matches.length}</span>\n                            </div>\n                          </div>\n\n                          <div className=\"debug-buttons\">\n                            <button\n                              onClick={async () => {\n                                console.log(\"=== PROBAR CONEXIÓN ===\");\n                                const isConnected = await testConnection();\n                                if (isConnected) {\n                                  setError(\"\");\n                                } else {\n                                  setError(\n                                    \"❌ Error de conexión a Supabase. Verifica tu configuración.\"\n                                  );\n                                }\n                              }}\n                              className=\"debug-btn connection-btn\"\n                            >\n                              🔌 Probar Conexión\n                            </button>\n\n                            <button\n                              onClick={() => {\n                                console.log(\n                                  \"=== FORZANDO RECARGA DE DATOS ===\"\n                                );\n                                loadTournamentData();\n                              }}\n                              className=\"debug-btn reload-btn\"\n                            >\n                              🔄 Recargar Datos\n                            </button>\n\n                            <button\n                              onClick={async () => {\n                                console.log(\n                                  \"=== VERIFICANDO ESTADO DEL TORNEO ===\"\n                                );\n                                try {\n                                  console.log(\n                                    \"Estado actual del torneo:\",\n                                    selectedTournament\n                                  );\n                                  console.log(\n                                    \"Parejas en estado:\",\n                                    pairs.length\n                                  );\n                                  console.log(\n                                    \"Partidos en estado:\",\n                                    matches.length\n                                  );\n\n                                  const dbPairs = await getPairs(\n                                    selectedTournament.id\n                                  );\n                                  const dbMatches = await getMatches(\n                                    selectedTournament.id\n                                  );\n\n                                  console.log(\"Parejas en BD:\", dbPairs.length);\n                                  console.log(\n                                    \"Partidos en BD:\",\n                                    dbMatches.length\n                                  );\n\n                                  alert(\n                                    `Estado del torneo:\\n\\nParejas: ${\n                                      pairs.length\n                                    } (estado) / ${\n                                      dbPairs.length\n                                    } (BD)\\nPartidos: ${\n                                      matches.length\n                                    } (estado) / ${\n                                      dbMatches.length\n                                    } (BD)\\n\\nTorneo iniciado: ${\n                                      selectedTournament.is_started\n                                        ? \"Sí\"\n                                        : \"No\"\n                                    }`\n                                  );\n                                } catch (error) {\n                                  console.error(\n                                    \"Error verificando estado:\",\n                                    error\n                                  );\n                                }\n                              }}\n                              className=\"debug-btn status-btn\"\n                            >\n                              🔍 Verificar Estado\n                            </button>\n                          </div>\n                        </div>\n                      )}\n                    </div>\n                  )}\n\n                  {/* Mostrar parejas creadas */}\n                  {pairs.length > 0 && (\n                    <div className=\"pairs-display\">\n                      <h3>👥 Parejas Registradas ({pairs.length})</h3>\n                      <div className=\"pairs-grid\">\n                        {pairs.map((pair, index) => (\n                          <div key={pair.id} className=\"pair-display-card\">\n                            <div className=\"pair-number\">#{index + 1}</div>\n                            <div className=\"pair-names\">\n                              {pair.player1?.name} y {pair.player2?.name}\n                            </div>\n                            <div className=\"pair-stats\">\n                              <span>Sets: {pair.sets_won}</span>\n                              <span>Partidos: {pair.matches_played}</span>\n                              <span>Puntos: {pair.points}</span>\n                            </div>\n                            <button\n                              onClick={() => {\n                                if (\n                                  window.confirm(\n                                    `¿Estás seguro de que quieres eliminar la pareja \"${pair.player1?.name} y ${pair.player2?.name}\"?`\n                                  )\n                                ) {\n                                  deletePair(pair.id);\n                                }\n                              }}\n                              className=\"delete-pair-btn\"\n                              title=\"Eliminar pareja\"\n                            >\n                              🗑️\n                            </button>\n                          </div>\n                        ))}\n                      </div>\n                    </div>\n                  )}\n\n                  {selectedTournament.is_started && (\n                    <div className=\"tournament-content\">\n                      {/* Lista de partidos */}\n                      <div className=\"matches-section\">\n                        <h3>🎾 Partidos ({matches.length} total)</h3>\n                        {matches.length === 0 ? (\n                          <div className=\"no-matches\">\n                            <p>📝 No hay partidos programados aún</p>\n                            <p>\n                              Inicia el torneo para generar los partidos\n                              automáticamente\n                            </p>\n                          </div>\n                        ) : (\n                          Object.entries(matchesByRound).map(\n                            ([round, roundMatches]) => (\n                              <div key={round} className=\"round-section\">\n                                <h4>\n                                  🔄 Ronda {round} ({roundMatches.length}{\" \"}\n                                  partidos)\n                                </h4>\n                                <div className=\"matches-container\">\n                                  {roundMatches.map((match) => (\n                                    <div\n                                      key={match.id}\n                                      className={`match-card ${\n                                        selectedMatchId === match.id\n                                          ? \"selected\"\n                                          : \"\"\n                                      }`}\n                                      onClick={() =>\n                                        handleMatchSelect(match.id)\n                                      }\n                                    >\n                                      <div className=\"match-header\">\n                                        <h5>\n                                          {match.pair1?.player1?.name} y{\" \"}\n                                          {match.pair1?.player2?.name} vs{\" \"}\n                                          {match.pair2?.player1?.name} y{\" \"}\n                                          {match.pair2?.player2?.name}\n                                        </h5>\n                                        <div className=\"match-info\">\n                                          <span className=\"court-badge\">\n                                            🏟️ Cancha {match.court}\n                                          </span>\n                                          <span className=\"round-badge\">\n                                            🔄 Ronda {match.round}\n                                          </span>\n                                        </div>\n                                      </div>\n                                      <div className=\"match-details\">\n                                        <p className=\"match-pairs\">\n                                          <strong>Pareja 1:</strong>{\" \"}\n                                          {match.pair1?.player1?.name} y{\" \"}\n                                          {match.pair1?.player2?.name}\n                                        </p>\n                                        <p className=\"match-pairs\">\n                                          <strong>Pareja 2:</strong>{\" \"}\n                                          {match.pair2?.player1?.name} y{\" \"}\n                                          {match.pair2?.player2?.name}\n                                        </p>\n                                      </div>\n                                      {(() => {\n                                        // Calcular el ganador en tiempo real\n                                        const matchGames = games.filter(\n                                          (g) => g.match_id === match.id\n                                        );\n                                        if (matchGames.length > 0) {\n                                          const stats =\n                                            MatchResultCalculator.calculateMatchStatistics(\n                                              match,\n                                              matchGames\n                                            );\n                                          const isTie = stats.isTie;\n\n                                          if (isTie) {\n                                            return (\n                                              <div className=\"winner\">\n                                                <span className=\"winner-icon\">\n                                                  🤝\n                                                </span>\n                                                Empate ({stats.pair1TotalPoints}\n                                                -{stats.pair2TotalPoints}{\" \"}\n                                                puntos)\n                                              </div>\n                                            );\n                                          } else {\n                                            const winnerId =\n                                              stats.pair1TotalPoints >\n                                              stats.pair2TotalPoints\n                                                ? match.pair1_id\n                                                : match.pair2_id;\n\n                                            return (\n                                              <div className=\"winner\">\n                                                <span className=\"winner-icon\">\n                                                  🏆\n                                                </span>\n                                                Ganador:{\" \"}\n                                                {winnerId === match.pair1_id\n                                                  ? `${match.pair1?.player1?.name} y ${match.pair1?.player2?.name}`\n                                                  : `${match.pair2?.player1?.name} y ${match.pair2?.player2?.name}`}\n                                              </div>\n                                            );\n                                          }\n                                        } else {\n                                          // Fallback a los datos de la base de datos\n                                          if (match.winner_id) {\n                                            return (\n                                              <div className=\"winner\">\n                                                <span className=\"winner-icon\">\n                                                  🏆\n                                                </span>\n                                                Ganador:{\" \"}\n                                                {match.winner_id ===\n                                                match.pair1_id\n                                                  ? `${match.pair1?.player1?.name} y ${match.pair1?.player2?.name}`\n                                                  : `${match.pair2?.player1?.name} y ${match.pair2?.player2?.name}`}\n                                              </div>\n                                            );\n                                          } else if (match.is_finished) {\n                                            return (\n                                              <div className=\"winner\">\n                                                <span className=\"winner-icon\">\n                                                  🤝\n                                                </span>\n                                                Empate\n                                              </div>\n                                            );\n                                          }\n                                        }\n                                        return null;\n                                      })()}\n                                      <div className=\"match-status\">\n                                        {match.is_finished ? (\n                                          <span className=\"status-finished\">\n                                            ✔ Finalizado\n                                          </span>\n                                        ) : (\n                                          <span className=\"status-pending\">\n                                            ⏳ Pendiente\n                                          </span>\n                                        )}\n                                      </div>\n                                      <div className=\"match-actions\">\n                                        <button\n                                          onClick={(e) => {\n                                            e.stopPropagation();\n                                            showMatchResultsHandler(match);\n                                          }}\n                                          className=\"view-results-btn\"\n                                        >\n                                          📊 Ver Resultados\n                                        </button>\n                                        <button\n                                          onClick={(e) => {\n                                            e.stopPropagation();\n                                            openScoreCorrector(match);\n                                          }}\n                                          className=\"correct-result-btn\"\n                                        >\n                                          ✏️ Marcador\n                                        </button>\n                                      </div>\n                                    </div>\n                                  ))}\n                                </div>\n                              </div>\n                            )\n                          )\n                        )}\n                      </div>\n\n                      {/* Tabla de clasificación */}\n                      <StandingsTable\n                        tournamentId={selectedTournament.id}\n                        forceRefresh={forceRefresh}\n                      />\n\n                      {/* Botón para mostrar ganador */}\n                      {isTournamentFinished && winner && (\n                        <div className=\"winner-button-container\">\n                          <button\n                            className=\"show-winner-button\"\n                            onClick={showWinnerScreenHandler}\n                          >\n                            🏆 ¡Ver Ganador!\n                          </button>\n                        </div>\n                      )}\n\n                      {/* Botón para volver al inicio */}\n                      <div className=\"back-home-button-container\">\n                        <button\n                          className=\"back-home-button\"\n                          onClick={handleBackToHome}\n                        >\n                          🏠 Volver al Inicio\n                        </button>\n                      </div>\n                    </div>\n                  )}\n                </div>\n              </>\n            ) : (\n              <div className=\"no-tournament-selected\">\n                <h2>🏆 Bienvenido al Gestor de Torneos</h2>\n                <p>\n                  Selecciona un torneo del panel izquierdo para comenzar a\n                  gestionar partidos y resultados.\n                </p>\n              </div>\n            )}\n          </div>\n        </div>\n\n        {/* Pantalla de ganador */}\n        {showWinnerScreen && winner && (\n          <div className=\"winner-screen\">\n            <div className=\"winner-content\">\n              <div className=\"winner-celebration\">\n                <h1 className=\"winner-title\">🏆 ¡FELICIDADES! 🏆</h1>\n                <div className=\"winner-names\">\n                  {winner.player1?.name} y {winner.player2?.name}\n                </div>\n                <div className=\"winner-subtitle\">\n                  ¡Son los campeones del torneo!\n                </div>\n                <div className=\"winner-stats\">\n                  <div className=\"stat-item\">\n                    <span className=\"stat-number\">\n                      {tournamentWinner\n                        ? tournamentWinner.totalSets\n                        : winner.sets_won}\n                    </span>\n                    <span className=\"stat-label\">Sets Ganados</span>\n                  </div>\n                  <div className=\"stat-item\">\n                    <span className=\"stat-number\">\n                      {tournamentWinner\n                        ? tournamentWinner.matchesPlayed\n                        : winner.games_won}\n                    </span>\n                    <span className=\"stat-label\">Partidos Ganados</span>\n                  </div>\n                  <div className=\"stat-item\">\n                    <span className=\"stat-number\">\n                      {tournamentWinner\n                        ? tournamentWinner.totalPoints\n                        : winner.points}\n                    </span>\n                    <span className=\"stat-label\">Puntos Totales</span>\n                  </div>\n                </div>\n                <button\n                  className=\"back-button\"\n                  onClick={hideWinnerScreenHandler}\n                >\n                  🏠 Volver al Torneo\n                </button>\n              </div>\n            </div>\n          </div>\n        )}\n\n        {/* Modal de resultados de partido */}\n        {showMatchResults && selectedMatchResults && (\n          <div className=\"match-results-modal\">\n            <div className=\"match-results-content\">\n              <div className=\"match-results-header\">\n                <h3>📊 Resultados del Partido</h3>\n                <button onClick={hideMatchResultsHandler} className=\"close-btn\">\n                  ✕\n                </button>\n              </div>\n\n              <div className=\"match-results-info\">\n                <h4>\n                  Partido {selectedMatchResults.court} - Ronda{\" \"}\n                  {selectedMatchResults.round}\n                </h4>\n                <div className=\"pairs-info\">\n                  <div className=\"pair-info\">\n                    <strong>Pareja 1:</strong>{\" \"}\n                    {selectedMatchResults.pair1?.player1?.name} y{\" \"}\n                    {selectedMatchResults.pair1?.player2?.name}\n                  </div>\n                  <div className=\"pair-info\">\n                    <strong>Pareja 2:</strong>{\" \"}\n                    {selectedMatchResults.pair2?.player1?.name} y{\" \"}\n                    {selectedMatchResults.pair2?.player2?.name}\n                  </div>\n                </div>\n              </div>\n\n              <div className=\"match-results-details\">\n                <div className=\"result-summary\">\n                  <div className=\"result-item\">\n                    <span className=\"result-label\">Juegos Ganados:</span>\n                    <span className=\"result-value\">\n                      {calculatedMatchResults?.pair1?.games_won ||\n                        selectedMatchResults.pair1?.games_won ||\n                        0}{\" \"}\n                      -{\" \"}\n                      {calculatedMatchResults?.pair2?.games_won ||\n                        selectedMatchResults.pair2?.games_won ||\n                        0}\n                    </span>\n                  </div>\n                  <div className=\"result-item\">\n                    <span className=\"result-label\">Sets Ganados:</span>\n                    <span className=\"result-value\">\n                      {calculatedMatchResults?.pair1?.sets_won ||\n                        selectedMatchResults.pair1?.sets_won ||\n                        0}{\" \"}\n                      -{\" \"}\n                      {calculatedMatchResults?.pair2?.sets_won ||\n                        selectedMatchResults.pair2?.sets_won ||\n                        0}\n                    </span>\n                  </div>\n                  <div className=\"result-item\">\n                    <span className=\"result-label\">Puntos Totales:</span>\n                    <span className=\"result-value\">\n                      {calculatedMatchResults?.pair1?.points ||\n                        selectedMatchResults.pair1?.points ||\n                        0}{\" \"}\n                      -{\" \"}\n                      {calculatedMatchResults?.pair2?.points ||\n                        selectedMatchResults.pair2?.points ||\n                        0}\n                    </span>\n                  </div>\n                </div>\n\n                <div className=\"match-winner\">\n                  {(() => {\n                    // Verificar si es empate basado en los puntos totales\n                    const pair1Points =\n                      calculatedMatchResults?.pair1?.points ||\n                      selectedMatchResults.pair1?.points ||\n                      0;\n                    const pair2Points =\n                      calculatedMatchResults?.pair2?.points ||\n                      selectedMatchResults.pair2?.points ||\n                      0;\n                    const isTie = pair1Points === pair2Points;\n\n                    if (isTie) {\n                      return (\n                        <div className=\"tie-display\">\n                          <span className=\"tie-icon\">🤝</span>\n                          <span className=\"tie-text\">\n                            Empate ({pair1Points}-{pair2Points} puntos totales)\n                          </span>\n                        </div>\n                      );\n                    } else {\n                      const winnerId =\n                        calculatedMatchResults?.winner_id ||\n                        selectedMatchResults.winner_id;\n                      if (winnerId) {\n                        return (\n                          <div className=\"winner-display\">\n                            <span className=\"winner-icon\">🏆</span>\n                            <span className=\"winner-text\">\n                              Ganador:{\" \"}\n                              {winnerId === selectedMatchResults.pair1?.id\n                                ? `${selectedMatchResults.pair1?.player1?.name} y ${selectedMatchResults.pair1?.player2?.name}`\n                                : `${selectedMatchResults.pair2?.player1?.name} y ${selectedMatchResults.pair2?.player2?.name}`}\n                            </span>\n                          </div>\n                        );\n                      } else {\n                        return (\n                          <div className=\"tie-display\">\n                            <span className=\"tie-icon\">🤝</span>\n                            <span className=\"tie-text\">Empate</span>\n                          </div>\n                        );\n                      }\n                    }\n                  })()}\n                </div>\n              </div>\n\n              <div className=\"match-results-actions\">\n                <button\n                  onClick={hideMatchResultsHandler}\n                  className=\"close-results-btn\"\n                >\n                  Cerrar\n                </button>\n              </div>\n            </div>\n          </div>\n        )}\n\n        {/* Modal de corrección de marcador */}\n        {showScoreCorrector && selectedCorrectorMatch && (\n          <MatchScoreEditor\n            match={selectedCorrectorMatch}\n            onClose={closeScoreCorrector}\n            onMatchFinish={handleScoreCorrectorUpdate}\n          />\n        )}\n\n        {/* Modal de éxito */}\n        {showSuccessModal && (\n          <SuccessModal\n            title={successModalData.title}\n            message={successModalData.message}\n            icon={successModalData.icon}\n            isOpen={showSuccessModal}\n            onClose={() => setShowSuccessModal(false)}\n          />\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}