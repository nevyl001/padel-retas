{"ast":null,"code":"import React,{useState,useEffect}from\"react\";import{getGames,createGame,updateGame,deleteGame,getPairs}from\"../lib/database\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";export const MatchScoreEditor=_ref=>{let{match,onClose,onMatchFinish}=_ref;const[games,setGames]=useState([]);const[pairs,setPairs]=useState([]);const[loading,setLoading]=useState(false);const[error,setError]=useState(\"\");// Cargar juegos y parejas al montar el componente\nuseEffect(()=>{const loadData=async()=>{try{console.log(\"🔄 Cargando datos del editor de marcador...\");// Cargar juegos del partido\nconst matchGames=await getGames(match.id);console.log(`📊 Juegos cargados: ${matchGames.length}`);setGames(matchGames);// Cargar parejas del torneo\nconst allPairs=await getPairs(match.tournament_id);console.log(`👥 Parejas cargadas: ${allPairs.length}`);setPairs(allPairs);}catch(err){console.error(\"❌ Error cargando datos:\",err);setError(\"Error al cargar los datos\");}};loadData();},[match.id,match.tournament_id]);// Agregar nuevo juego\nconst addGame=async()=>{try{setLoading(true);setError(\"\");console.log(`➕ Agregando juego ${games.length+1} al partido ${match.id}`);const newGame=await createGame(match.id,games.length+1);console.log(`✅ Juego creado: ${newGame.id}`);setGames(prevGames=>{const updatedGames=[...prevGames,newGame];console.log(`📊 Total de juegos después de agregar: ${updatedGames.length}`);return updatedGames;});}catch(err){console.error(\"❌ Error agregando juego:\",err);setError(\"Error al agregar juego\");}finally{setLoading(false);}};// CORREGIR puntuación de un juego específico (NO acumula estadísticas)\nconst correctGameScore=async function(gameId,pair1Games,pair2Games){let isTieBreak=arguments.length>3&&arguments[3]!==undefined?arguments[3]:false;try{console.log(`🔄 CORRIGIENDO juego ${gameId}: ${pair1Games}-${pair2Games}`);console.log(`📊 Juegos antes de corregir: ${games.length}`);// SOLO actualizar el juego en la base de datos\nawait updateGame(gameId,{pair1_games:pair1Games,pair2_games:pair2Games,is_tie_break:isTieBreak});// Actualizar estado local\nsetGames(prevGames=>{const updatedGames=prevGames.map(game=>game.id===gameId?{...game,pair1_games:pair1Games,pair2_games:pair2Games,is_tie_break:isTieBreak}:game);console.log(`📊 Juegos después de corregir: ${updatedGames.length}`);console.log(`✅ Juego ${gameId} corregido correctamente - NO se acumularon estadísticas`);return updatedGames;});}catch(err){console.error(\"❌ Error corrigiendo juego:\",err);setError(\"Error al corregir puntuación\");}};// Eliminar juego\nconst removeGame=async gameId=>{try{setLoading(true);setError(\"\");console.log(`🗑️ Eliminando juego ${gameId}`);await deleteGame(gameId);setGames(prevGames=>{const updatedGames=prevGames.filter(game=>game.id!==gameId);console.log(`📊 Juegos después de eliminar: ${updatedGames.length}`);return updatedGames;});}catch(err){console.error(\"❌ Error eliminando juego:\",err);setError(\"Error al eliminar juego\");}finally{setLoading(false);}};// Cambiar tipo de juego (normal/tie-break)\nconst toggleTieBreak=async gameId=>{const game=games.find(g=>g.id===gameId);if(game){await correctGameScore(gameId,game.pair1_games,game.pair2_games,!game.is_tie_break);}};// FINALIZAR partido (SÍ acumula estadísticas)\nconst finishMatch=async()=>{try{setLoading(true);setError(\"\");console.log(\"🏆 FINALIZANDO partido...\");// Calcular estadísticas del partido\nlet pair1TotalPoints=0;let pair2TotalPoints=0;let pair1GamesWon=0;let pair2GamesWon=0;let pair1SetsWon=0;let pair2SetsWon=0;games.forEach((game,index)=>{console.log(`📊 Procesando juego ${index+1}: ${game.pair1_games}-${game.pair2_games}`);if(game.is_tie_break){// Tie-break\nif(game.tie_break_pair1_points>game.tie_break_pair2_points){pair1GamesWon++;}else if(game.tie_break_pair2_points>game.tie_break_pair1_points){pair2GamesWon++;}pair1TotalPoints+=game.tie_break_pair1_points||0;pair2TotalPoints+=game.tie_break_pair2_points||0;}else{// Juego normal\nif(game.pair1_games>game.pair2_games){pair1GamesWon++;}else if(game.pair2_games>game.pair1_games){pair2GamesWon++;}pair1TotalPoints+=game.pair1_games;pair2TotalPoints+=game.pair2_games;// Sets (6 puntos = 1 set)\nif(game.pair1_games>=6){pair1SetsWon++;}if(game.pair2_games>=6){pair2SetsWon++;}}});console.log(\"📊 Estadísticas finales del partido:\");console.log(`📊 Pareja 1: ${pair1GamesWon} juegos, ${pair1SetsWon} sets, ${pair1TotalPoints} puntos`);console.log(`📊 Pareja 2: ${pair2GamesWon} juegos, ${pair2SetsWon} sets, ${pair2TotalPoints} puntos`);// ACUMULAR estadísticas en la base de datos\nconst pair1=pairs.find(p=>p.id===match.pair1_id);const pair2=pairs.find(p=>p.id===match.pair2_id);if(pair1){var _pair1$player,_pair1$player2;console.log(`📊 Acumulando Pareja 1: ${(_pair1$player=pair1.player1)===null||_pair1$player===void 0?void 0:_pair1$player.name} y ${(_pair1$player2=pair1.player2)===null||_pair1$player2===void 0?void 0:_pair1$player2.name}`);console.log(`📊 Estadísticas actuales: ${pair1.games_won} juegos, ${pair1.sets_won} sets, ${pair1.points} puntos, ${pair1.matches_played} partidos`);const{updatePair}=await import(\"../lib/database\");await updatePair(pair1.id,{games_won:pair1.games_won+pair1GamesWon,sets_won:pair1.sets_won+pair1SetsWon,points:pair1.points+pair1TotalPoints,matches_played:pair1.matches_played+1});console.log(`✅ Pareja 1 acumulada: ${pair1.games_won+pair1GamesWon} juegos, ${pair1.sets_won+pair1SetsWon} sets, ${pair1.points+pair1TotalPoints} puntos, ${pair1.matches_played+1} partidos`);}if(pair2){var _pair2$player,_pair2$player2;console.log(`📊 Acumulando Pareja 2: ${(_pair2$player=pair2.player1)===null||_pair2$player===void 0?void 0:_pair2$player.name} y ${(_pair2$player2=pair2.player2)===null||_pair2$player2===void 0?void 0:_pair2$player2.name}`);console.log(`📊 Estadísticas actuales: ${pair2.games_won} juegos, ${pair2.sets_won} sets, ${pair2.points} puntos, ${pair2.matches_played} partidos`);const{updatePair}=await import(\"../lib/database\");await updatePair(pair2.id,{games_won:pair2.games_won+pair2GamesWon,sets_won:pair2.sets_won+pair2SetsWon,points:pair2.points+pair2TotalPoints,matches_played:pair2.matches_played+1});console.log(`✅ Pareja 2 acumulada: ${pair2.games_won+pair2GamesWon} juegos, ${pair2.sets_won+pair2SetsWon} sets, ${pair2.points+pair2TotalPoints} puntos, ${pair2.matches_played+1} partidos`);}// Determinar ganador\nlet winnerId;const isTie=pair1TotalPoints===pair2TotalPoints;if(isTie){winnerId=undefined;console.log(\"🤝 Partido terminó en EMPATE\");}else if(pair1TotalPoints>pair2TotalPoints){winnerId=match.pair1_id;console.log(\"🏆 Pareja 1 gana por puntos totales\");}else{winnerId=match.pair2_id;console.log(\"🏆 Pareja 2 gana por puntos totales\");}// Marcar partido como finalizado\nconst{updateMatch}=await import(\"../lib/database\");await updateMatch(match.id,{winner_id:winnerId,is_finished:true});console.log(\"✅ Partido finalizado correctamente\");// Notificar actualización SOLO cuando se finaliza el partido\nonMatchFinish();onClose();}catch(err){console.error(\"❌ Error finalizando partido:\",err);setError(\"Error al finalizar partido\");}finally{setLoading(false);}};// Obtener nombres de pareja\nconst getPairNames=pairId=>{const pair=pairs.find(p=>p.id===pairId);if(pair){var _pair$player,_pair$player2;return`${((_pair$player=pair.player1)===null||_pair$player===void 0?void 0:_pair$player.name)||\"Jugador 1\"} y ${((_pair$player2=pair.player2)===null||_pair$player2===void 0?void 0:_pair$player2.name)||\"Jugador 2\"}`;}return\"Pareja desconocida\";};return/*#__PURE__*/_jsx(\"div\",{className:\"match-score-editor-overlay\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"match-score-editor-modal\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"match-score-editor-header\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"match-score-editor-title\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"match-score-editor-icon\",children:\"\\uD83C\\uDFBE\"}),/*#__PURE__*/_jsx(\"h3\",{children:\"Editor de Marcador\"})]}),/*#__PURE__*/_jsx(\"button\",{className:\"match-score-editor-close-btn\",onClick:onClose,children:\"\\u2715\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"match-score-editor-content\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"match-score-editor-info\",children:[/*#__PURE__*/_jsxs(\"h4\",{children:[\"Partido \",match.court,\" - Ronda \",match.round]}),/*#__PURE__*/_jsxs(\"div\",{className:\"match-score-editor-pairs\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"match-score-editor-pair\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"match-score-editor-pair-label\",children:\"\\uD83C\\uDFC6 Pareja 1:\"}),/*#__PURE__*/_jsx(\"span\",{className:\"match-score-editor-pair-names\",children:getPairNames(match.pair1_id)})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"match-score-editor-pair\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"match-score-editor-pair-label\",children:\"\\uD83C\\uDFC6 Pareja 2:\"}),/*#__PURE__*/_jsx(\"span\",{className:\"match-score-editor-pair-names\",children:getPairNames(match.pair2_id)})]})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"match-score-editor-rules\",children:[/*#__PURE__*/_jsx(\"h5\",{children:\"\\uD83D\\uDCCB Reglas del Juego:\"}),/*#__PURE__*/_jsxs(\"ul\",{children:[/*#__PURE__*/_jsxs(\"li\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Juegos:\"}),\" La pareja que haga m\\xE1s puntos gana el juego\"]}),/*#__PURE__*/_jsxs(\"li\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Sets:\"}),\" La pareja que llegue a 6 puntos gana 1 set\"]}),/*#__PURE__*/_jsxs(\"li\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Empates:\"}),\" Si ambas parejas tienen los mismos puntos, es empate\"]}),/*#__PURE__*/_jsxs(\"li\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Tie-Breaks:\"}),\" Se pueden activar para desempates especiales\"]})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"match-score-editor-games-section\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"match-score-editor-games-header\",children:[/*#__PURE__*/_jsxs(\"h5\",{children:[\"\\uD83C\\uDFBE Juegos (\",games.length,\")\"]}),/*#__PURE__*/_jsx(\"button\",{className:\"match-score-editor-add-game-btn\",onClick:addGame,disabled:loading,children:\"+ Agregar Juego\"})]}),games.length===0?/*#__PURE__*/_jsx(\"div\",{className:\"match-score-editor-no-games\",children:/*#__PURE__*/_jsx(\"p\",{children:\"No hay juegos registrados. Haz clic en \\\"Agregar Juego\\\" para comenzar.\"})}):/*#__PURE__*/_jsx(\"div\",{className:\"match-score-editor-games-list\",children:games.map((game,index)=>/*#__PURE__*/_jsxs(\"div\",{className:\"match-score-editor-game-card\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"match-score-editor-game-header\",children:[/*#__PURE__*/_jsxs(\"h6\",{children:[\"Juego \",index+1]}),/*#__PURE__*/_jsxs(\"div\",{className:\"match-score-editor-game-actions\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"match-score-editor-tie-break-btn\",onClick:()=>toggleTieBreak(game.id),children:game.is_tie_break?\"🔗 Tie-Break\":\"🔗 Normal\"}),/*#__PURE__*/_jsx(\"button\",{className:\"match-score-editor-remove-game-btn\",onClick:()=>removeGame(game.id),children:\"\\uD83D\\uDDD1\\uFE0F Eliminar\"})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"match-score-editor-game-scores\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"match-score-editor-score-input\",children:[/*#__PURE__*/_jsx(\"label\",{className:\"match-score-editor-pair-name-label\",children:getPairNames(match.pair1_id)}),/*#__PURE__*/_jsx(\"input\",{type:\"number\",min:\"0\",value:game.pair1_games,onChange:e=>correctGameScore(game.id,parseInt(e.target.value)||0,game.pair2_games,game.is_tie_break)})]}),/*#__PURE__*/_jsx(\"div\",{className:\"match-score-editor-score-separator\",children:\"-\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"match-score-editor-score-input\",children:[/*#__PURE__*/_jsx(\"label\",{className:\"match-score-editor-pair-name-label\",children:getPairNames(match.pair2_id)}),/*#__PURE__*/_jsx(\"input\",{type:\"number\",min:\"0\",value:game.pair2_games,onChange:e=>correctGameScore(game.id,game.pair1_games,parseInt(e.target.value)||0,game.is_tie_break)})]})]})]},game.id))})]}),error&&/*#__PURE__*/_jsx(\"div\",{className:\"match-score-editor-error\",children:/*#__PURE__*/_jsxs(\"p\",{children:[\"\\u274C \",error]})}),/*#__PURE__*/_jsxs(\"div\",{className:\"match-score-editor-actions\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"match-score-editor-finish-btn\",onClick:finishMatch,disabled:loading||games.length===0,children:loading?\"⏳ Finalizando...\":\"🏆 Finalizar Partido\"}),/*#__PURE__*/_jsx(\"button\",{className:\"match-score-editor-cancel-btn\",onClick:onClose,children:\"\\u274C Cancelar\"})]})]})]})});};","map":{"version":3,"names":["React","useState","useEffect","getGames","createGame","updateGame","deleteGame","getPairs","jsx","_jsx","jsxs","_jsxs","MatchScoreEditor","_ref","match","onClose","onMatchFinish","games","setGames","pairs","setPairs","loading","setLoading","error","setError","loadData","console","log","matchGames","id","length","allPairs","tournament_id","err","addGame","newGame","prevGames","updatedGames","correctGameScore","gameId","pair1Games","pair2Games","isTieBreak","arguments","undefined","pair1_games","pair2_games","is_tie_break","map","game","removeGame","filter","toggleTieBreak","find","g","finishMatch","pair1TotalPoints","pair2TotalPoints","pair1GamesWon","pair2GamesWon","pair1SetsWon","pair2SetsWon","forEach","index","tie_break_pair1_points","tie_break_pair2_points","pair1","p","pair1_id","pair2","pair2_id","_pair1$player","_pair1$player2","player1","name","player2","games_won","sets_won","points","matches_played","updatePair","_pair2$player","_pair2$player2","winnerId","isTie","updateMatch","winner_id","is_finished","getPairNames","pairId","pair","_pair$player","_pair$player2","className","children","onClick","court","round","disabled","type","min","value","onChange","e","parseInt","target"],"sources":["/Users/nedev/padel-tournament-app/src/components/MatchScoreEditor.tsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Match, Game, Pair } from \"../lib/database\";\nimport { getGames, createGame, updateGame, deleteGame, getPairs } from \"../lib/database\";\n\ninterface MatchScoreEditorProps {\n  match: Match;\n  onClose: () => void;\n  onMatchFinish: () => void;\n}\n\nexport const MatchScoreEditor: React.FC<MatchScoreEditorProps> = ({\n  match,\n  onClose,\n  onMatchFinish,\n}) => {\n  const [games, setGames] = useState<Game[]>([]);\n  const [pairs, setPairs] = useState<Pair[]>([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState<string>(\"\");\n\n  // Cargar juegos y parejas al montar el componente\n  useEffect(() => {\n    const loadData = async () => {\n      try {\n        console.log(\"🔄 Cargando datos del editor de marcador...\");\n        \n        // Cargar juegos del partido\n        const matchGames = await getGames(match.id);\n        console.log(`📊 Juegos cargados: ${matchGames.length}`);\n        setGames(matchGames);\n        \n        // Cargar parejas del torneo\n        const allPairs = await getPairs(match.tournament_id);\n        console.log(`👥 Parejas cargadas: ${allPairs.length}`);\n        setPairs(allPairs);\n        \n      } catch (err) {\n        console.error(\"❌ Error cargando datos:\", err);\n        setError(\"Error al cargar los datos\");\n      }\n    };\n\n    loadData();\n  }, [match.id, match.tournament_id]);\n\n  // Agregar nuevo juego\n  const addGame = async () => {\n    try {\n      setLoading(true);\n      setError(\"\");\n      \n      console.log(`➕ Agregando juego ${games.length + 1} al partido ${match.id}`);\n      \n      const newGame = await createGame(match.id, games.length + 1);\n      console.log(`✅ Juego creado: ${newGame.id}`);\n      \n      setGames(prevGames => {\n        const updatedGames = [...prevGames, newGame];\n        console.log(`📊 Total de juegos después de agregar: ${updatedGames.length}`);\n        return updatedGames;\n      });\n      \n    } catch (err) {\n      console.error(\"❌ Error agregando juego:\", err);\n      setError(\"Error al agregar juego\");\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // CORREGIR puntuación de un juego específico (NO acumula estadísticas)\n  const correctGameScore = async (\n    gameId: string,\n    pair1Games: number,\n    pair2Games: number,\n    isTieBreak: boolean = false\n  ) => {\n    try {\n      console.log(`🔄 CORRIGIENDO juego ${gameId}: ${pair1Games}-${pair2Games}`);\n      console.log(`📊 Juegos antes de corregir: ${games.length}`);\n\n      // SOLO actualizar el juego en la base de datos\n      await updateGame(gameId, {\n        pair1_games: pair1Games,\n        pair2_games: pair2Games,\n        is_tie_break: isTieBreak,\n      });\n\n      // Actualizar estado local\n      setGames(prevGames => {\n        const updatedGames = prevGames.map(game => \n          game.id === gameId \n            ? {\n                ...game,\n                pair1_games: pair1Games,\n                pair2_games: pair2Games,\n                is_tie_break: isTieBreak,\n              }\n            : game\n        );\n        \n        console.log(`📊 Juegos después de corregir: ${updatedGames.length}`);\n        console.log(`✅ Juego ${gameId} corregido correctamente - NO se acumularon estadísticas`);\n        \n        return updatedGames;\n      });\n      \n    } catch (err) {\n      console.error(\"❌ Error corrigiendo juego:\", err);\n      setError(\"Error al corregir puntuación\");\n    }\n  };\n\n  // Eliminar juego\n  const removeGame = async (gameId: string) => {\n    try {\n      setLoading(true);\n      setError(\"\");\n      \n      console.log(`🗑️ Eliminando juego ${gameId}`);\n      \n      await deleteGame(gameId);\n      \n      setGames(prevGames => {\n        const updatedGames = prevGames.filter(game => game.id !== gameId);\n        console.log(`📊 Juegos después de eliminar: ${updatedGames.length}`);\n        return updatedGames;\n      });\n      \n    } catch (err) {\n      console.error(\"❌ Error eliminando juego:\", err);\n      setError(\"Error al eliminar juego\");\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Cambiar tipo de juego (normal/tie-break)\n  const toggleTieBreak = async (gameId: string) => {\n    const game = games.find(g => g.id === gameId);\n    if (game) {\n      await correctGameScore(\n        gameId,\n        game.pair1_games,\n        game.pair2_games,\n        !game.is_tie_break\n      );\n    }\n  };\n\n  // FINALIZAR partido (SÍ acumula estadísticas)\n  const finishMatch = async () => {\n    try {\n      setLoading(true);\n      setError(\"\");\n      \n      console.log(\"🏆 FINALIZANDO partido...\");\n\n      // Calcular estadísticas del partido\n      let pair1TotalPoints = 0;\n      let pair2TotalPoints = 0;\n      let pair1GamesWon = 0;\n      let pair2GamesWon = 0;\n      let pair1SetsWon = 0;\n      let pair2SetsWon = 0;\n\n      games.forEach((game, index) => {\n        console.log(`📊 Procesando juego ${index + 1}: ${game.pair1_games}-${game.pair2_games}`);\n        \n        if (game.is_tie_break) {\n          // Tie-break\n          if (game.tie_break_pair1_points > game.tie_break_pair2_points) {\n            pair1GamesWon++;\n          } else if (game.tie_break_pair2_points > game.tie_break_pair1_points) {\n            pair2GamesWon++;\n          }\n          pair1TotalPoints += game.tie_break_pair1_points || 0;\n          pair2TotalPoints += game.tie_break_pair2_points || 0;\n        } else {\n          // Juego normal\n          if (game.pair1_games > game.pair2_games) {\n            pair1GamesWon++;\n          } else if (game.pair2_games > game.pair1_games) {\n            pair2GamesWon++;\n          }\n          pair1TotalPoints += game.pair1_games;\n          pair2TotalPoints += game.pair2_games;\n          \n          // Sets (6 puntos = 1 set)\n          if (game.pair1_games >= 6) {\n            pair1SetsWon++;\n          }\n          if (game.pair2_games >= 6) {\n            pair2SetsWon++;\n          }\n        }\n      });\n\n      console.log(\"📊 Estadísticas finales del partido:\");\n      console.log(`📊 Pareja 1: ${pair1GamesWon} juegos, ${pair1SetsWon} sets, ${pair1TotalPoints} puntos`);\n      console.log(`📊 Pareja 2: ${pair2GamesWon} juegos, ${pair2SetsWon} sets, ${pair2TotalPoints} puntos`);\n\n      // ACUMULAR estadísticas en la base de datos\n      const pair1 = pairs.find(p => p.id === match.pair1_id);\n      const pair2 = pairs.find(p => p.id === match.pair2_id);\n\n      if (pair1) {\n        console.log(`📊 Acumulando Pareja 1: ${pair1.player1?.name} y ${pair1.player2?.name}`);\n        console.log(`📊 Estadísticas actuales: ${pair1.games_won} juegos, ${pair1.sets_won} sets, ${pair1.points} puntos, ${pair1.matches_played} partidos`);\n        \n        const { updatePair } = await import(\"../lib/database\");\n        await updatePair(pair1.id, {\n          games_won: pair1.games_won + pair1GamesWon,\n          sets_won: pair1.sets_won + pair1SetsWon,\n          points: pair1.points + pair1TotalPoints,\n          matches_played: pair1.matches_played + 1,\n        });\n        \n        console.log(`✅ Pareja 1 acumulada: ${pair1.games_won + pair1GamesWon} juegos, ${pair1.sets_won + pair1SetsWon} sets, ${pair1.points + pair1TotalPoints} puntos, ${pair1.matches_played + 1} partidos`);\n      }\n\n      if (pair2) {\n        console.log(`📊 Acumulando Pareja 2: ${pair2.player1?.name} y ${pair2.player2?.name}`);\n        console.log(`📊 Estadísticas actuales: ${pair2.games_won} juegos, ${pair2.sets_won} sets, ${pair2.points} puntos, ${pair2.matches_played} partidos`);\n        \n        const { updatePair } = await import(\"../lib/database\");\n        await updatePair(pair2.id, {\n          games_won: pair2.games_won + pair2GamesWon,\n          sets_won: pair2.sets_won + pair2SetsWon,\n          points: pair2.points + pair2TotalPoints,\n          matches_played: pair2.matches_played + 1,\n        });\n        \n        console.log(`✅ Pareja 2 acumulada: ${pair2.games_won + pair2GamesWon} juegos, ${pair2.sets_won + pair2SetsWon} sets, ${pair2.points + pair2TotalPoints} puntos, ${pair2.matches_played + 1} partidos`);\n      }\n\n      // Determinar ganador\n      let winnerId: string | undefined;\n      const isTie = pair1TotalPoints === pair2TotalPoints;\n\n      if (isTie) {\n        winnerId = undefined;\n        console.log(\"🤝 Partido terminó en EMPATE\");\n      } else if (pair1TotalPoints > pair2TotalPoints) {\n        winnerId = match.pair1_id;\n        console.log(\"🏆 Pareja 1 gana por puntos totales\");\n      } else {\n        winnerId = match.pair2_id;\n        console.log(\"🏆 Pareja 2 gana por puntos totales\");\n      }\n\n      // Marcar partido como finalizado\n      const { updateMatch } = await import(\"../lib/database\");\n      await updateMatch(match.id, {\n        winner_id: winnerId,\n        is_finished: true,\n      });\n\n      console.log(\"✅ Partido finalizado correctamente\");\n\n      // Notificar actualización SOLO cuando se finaliza el partido\n      onMatchFinish();\n      onClose();\n      \n    } catch (err) {\n      console.error(\"❌ Error finalizando partido:\", err);\n      setError(\"Error al finalizar partido\");\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Obtener nombres de pareja\n  const getPairNames = (pairId: string) => {\n    const pair = pairs.find(p => p.id === pairId);\n    if (pair) {\n      return `${pair.player1?.name || \"Jugador 1\"} y ${pair.player2?.name || \"Jugador 2\"}`;\n    }\n    return \"Pareja desconocida\";\n  };\n\n  return (\n    <div className=\"match-score-editor-overlay\">\n      <div className=\"match-score-editor-modal\">\n        {/* Header */}\n        <div className=\"match-score-editor-header\">\n          <div className=\"match-score-editor-title\">\n            <span className=\"match-score-editor-icon\">🎾</span>\n            <h3>Editor de Marcador</h3>\n          </div>\n          <button className=\"match-score-editor-close-btn\" onClick={onClose}>\n            ✕\n          </button>\n        </div>\n\n        {/* Contenido */}\n        <div className=\"match-score-editor-content\">\n          {/* Información del partido */}\n          <div className=\"match-score-editor-info\">\n            <h4>\n              Partido {match.court} - Ronda {match.round}\n            </h4>\n            <div className=\"match-score-editor-pairs\">\n              <div className=\"match-score-editor-pair\">\n                <span className=\"match-score-editor-pair-label\">\n                  🏆 Pareja 1:\n                </span>\n                <span className=\"match-score-editor-pair-names\">\n                  {getPairNames(match.pair1_id)}\n                </span>\n              </div>\n              <div className=\"match-score-editor-pair\">\n                <span className=\"match-score-editor-pair-label\">\n                  🏆 Pareja 2:\n                </span>\n                <span className=\"match-score-editor-pair-names\">\n                  {getPairNames(match.pair2_id)}\n                </span>\n              </div>\n            </div>\n          </div>\n\n          {/* Reglas */}\n          <div className=\"match-score-editor-rules\">\n            <h5>📋 Reglas del Juego:</h5>\n            <ul>\n              <li>\n                <strong>Juegos:</strong> La pareja que haga más puntos gana el\n                juego\n              </li>\n              <li>\n                <strong>Sets:</strong> La pareja que llegue a 6 puntos gana 1\n                set\n              </li>\n              <li>\n                <strong>Empates:</strong> Si ambas parejas tienen los mismos\n                puntos, es empate\n              </li>\n              <li>\n                <strong>Tie-Breaks:</strong> Se pueden activar para desempates\n                especiales\n              </li>\n            </ul>\n          </div>\n\n          {/* Sección de juegos */}\n          <div className=\"match-score-editor-games-section\">\n            <div className=\"match-score-editor-games-header\">\n              <h5>🎾 Juegos ({games.length})</h5>\n              <button\n                className=\"match-score-editor-add-game-btn\"\n                onClick={addGame}\n                disabled={loading}\n              >\n                + Agregar Juego\n              </button>\n            </div>\n\n            {games.length === 0 ? (\n              <div className=\"match-score-editor-no-games\">\n                <p>\n                  No hay juegos registrados. Haz clic en \"Agregar Juego\" para\n                  comenzar.\n                </p>\n              </div>\n            ) : (\n              <div className=\"match-score-editor-games-list\">\n                {games.map((game, index) => (\n                  <div key={game.id} className=\"match-score-editor-game-card\">\n                    <div className=\"match-score-editor-game-header\">\n                      <h6>Juego {index + 1}</h6>\n                      <div className=\"match-score-editor-game-actions\">\n                        <button\n                          className=\"match-score-editor-tie-break-btn\"\n                          onClick={() => toggleTieBreak(game.id)}\n                        >\n                          {game.is_tie_break ? \"🔗 Tie-Break\" : \"🔗 Normal\"}\n                        </button>\n                        <button\n                          className=\"match-score-editor-remove-game-btn\"\n                          onClick={() => removeGame(game.id)}\n                        >\n                          🗑️ Eliminar\n                        </button>\n                      </div>\n                    </div>\n\n                    <div className=\"match-score-editor-game-scores\">\n                      <div className=\"match-score-editor-score-input\">\n                        <label className=\"match-score-editor-pair-name-label\">\n                          {getPairNames(match.pair1_id)}\n                        </label>\n                        <input\n                          type=\"number\"\n                          min=\"0\"\n                          value={game.pair1_games}\n                          onChange={(e) =>\n                            correctGameScore(\n                              game.id,\n                              parseInt(e.target.value) || 0,\n                              game.pair2_games,\n                              game.is_tie_break\n                            )\n                          }\n                        />\n                      </div>\n\n                      <div className=\"match-score-editor-score-separator\">\n                        -\n                      </div>\n\n                      <div className=\"match-score-editor-score-input\">\n                        <label className=\"match-score-editor-pair-name-label\">\n                          {getPairNames(match.pair2_id)}\n                        </label>\n                        <input\n                          type=\"number\"\n                          min=\"0\"\n                          value={game.pair2_games}\n                          onChange={(e) =>\n                            correctGameScore(\n                              game.id,\n                              game.pair1_games,\n                              parseInt(e.target.value) || 0,\n                              game.is_tie_break\n                            )\n                          }\n                        />\n                      </div>\n                    </div>\n                  </div>\n                ))}\n              </div>\n            )}\n          </div>\n\n          {/* Mensaje de error */}\n          {error && (\n            <div className=\"match-score-editor-error\">\n              <p>❌ {error}</p>\n            </div>\n          )}\n\n          {/* Botones de acción */}\n          <div className=\"match-score-editor-actions\">\n            <button\n              className=\"match-score-editor-finish-btn\"\n              onClick={finishMatch}\n              disabled={loading || games.length === 0}\n            >\n              {loading ? \"⏳ Finalizando...\" : \"🏆 Finalizar Partido\"}\n            </button>\n            <button className=\"match-score-editor-cancel-btn\" onClick={onClose}>\n              ❌ Cancelar\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}