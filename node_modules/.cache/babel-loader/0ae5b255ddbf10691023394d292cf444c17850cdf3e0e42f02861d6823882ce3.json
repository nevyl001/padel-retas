{"ast":null,"code":"var _jsxFileName = \"/Users/nedev/padel-tournament-app/src/App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback, useMemo } from \"react\";\nimport \"./App.css\";\nimport { TournamentManager } from \"./components/TournamentManager\";\nimport { PlayerManager } from \"./components/PlayerManager\";\nimport { PairManager } from \"./components/PairManager\";\nimport ScoreCorrector from \"./components/ScoreCorrector\";\nimport StandingsTable from \"./components/StandingsTable\";\nimport { SuccessModal } from \"./components/SuccessModal\";\nimport MatchResults from \"./components/MatchResults\";\nimport { createPair, getPairs, updatePair, deletePair as deletePairFromDB, createMatch, getMatches, updateMatch, deleteMatchesByTournament, createGame, getGames, updateGame, deleteGame, updateTournament } from \"./lib/database\";\nimport { testConnection } from \"./lib/supabaseClient\";\nimport { FlexibleMatchFinisher } from \"./components/FlexibleMatchFinisher\";\nimport MatchStatusDisplay from \"./components/MatchStatusDisplay\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  var _winner$player, _winner$player2;\n  const [selectedTournament, setSelectedTournament] = useState(null);\n  const [pairs, setPairs] = useState([]);\n  const [matches, setMatches] = useState([]);\n  const [games, setGames] = useState([]);\n  const [selectedMatchId, setSelectedMatchId] = useState(null);\n  const [error, setError] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [showPlayerManager, setShowPlayerManager] = useState(false);\n  const [showPairManager, setShowPairManager] = useState(false);\n  const [selectedPlayers, setSelectedPlayers] = useState([]);\n  const [showWinnerScreen, setShowWinnerScreen] = useState(false);\n  const [showMatchResults, setShowMatchResults] = useState(false);\n  const [selectedMatchResults, setSelectedMatchResults] = useState(null);\n  const [showScoreCorrector, setShowScoreCorrector] = useState(false);\n  const [selectedCorrectorMatch, setSelectedCorrectorMatch] = useState(null);\n  const [forceRefresh, setForceRefresh] = useState(0);\n  const [showDebugInfo, setShowDebugInfo] = useState(false);\n  const [editingGames, setEditingGames] = useState({});\n  const [editingTieBreaks, setEditingTieBreaks] = useState({});\n  const [showSuccessModal, setShowSuccessModal] = useState(false);\n  const [successModalData, setSuccessModalData] = useState({\n    title: \"\",\n    message: \"\",\n    icon: \"✅\"\n  });\n\n  // Cargar datos cuando se selecciona un torneo\n  useEffect(() => {\n    if (selectedTournament) {\n      loadTournamentData();\n    }\n  }, [selectedTournament === null || selectedTournament === void 0 ? void 0 : selectedTournament.id]);\n  const loadTournamentData = useCallback(async () => {\n    if (!selectedTournament) return;\n    try {\n      setLoading(true);\n      setError(\"\");\n      console.log(\"Loading tournament data for:\", selectedTournament.name);\n      const [pairsData, matchesData] = await Promise.all([getPairs(selectedTournament.id), getMatches(selectedTournament.id)]);\n      console.log(\"Pairs loaded:\", pairsData.length, \"pairs\");\n      setPairs(pairsData);\n      console.log(\"Matches loaded from database:\", matchesData.length, \"matches\");\n      setMatches(matchesData);\n    } catch (err) {\n      console.error(\"Error loading tournament data:\", err);\n      setError(\"Error al cargar los datos del torneo: \" + err.message);\n    } finally {\n      setLoading(false);\n    }\n  }, [selectedTournament]);\n  const deletePair = async pairId => {\n    try {\n      setError(\"\");\n      console.log(\"Eliminando pareja:\", pairId);\n      await deletePairFromDB(pairId);\n      setPairs(pairs.filter(p => p.id !== pairId));\n      console.log(\"Pareja eliminada exitosamente\");\n    } catch (err) {\n      console.error(\"Error eliminando pareja:\", err);\n      setError(\"Error al eliminar la pareja: \" + err.message);\n    }\n  };\n  const updatePairPlayers = async (pairId, player1, player2) => {\n    try {\n      setError(\"\");\n      console.log(\"Actualizando pareja:\", pairId);\n      console.log(\"Nuevos jugadores:\", player1.name, \"+\", player2.name);\n\n      // Actualizar la pareja en la base de datos\n      await updatePair(pairId, {\n        player1_id: player1.id,\n        player2_id: player2.id\n      });\n\n      // Actualizar el estado local\n      setPairs(pairs.map(pair => {\n        if (pair.id === pairId) {\n          return {\n            ...pair,\n            player1_id: player1.id,\n            player2_id: player2.id,\n            player1: player1,\n            player2: player2\n          };\n        }\n        return pair;\n      }));\n      console.log(\"Pareja actualizada exitosamente\");\n    } catch (err) {\n      console.error(\"Error actualizando pareja:\", err);\n      setError(\"Error al actualizar la pareja: \" + err.message);\n    }\n  };\n  const addPair = async (player1, player2) => {\n    if (!selectedTournament) {\n      setError(\"No hay torneo seleccionado\");\n      return;\n    }\n    try {\n      setError(\"\");\n\n      // Verificar duplicados en estado local\n      const existingPairLocal = pairs.find(pair => {\n        var _pair$player, _pair$player2, _pair$player3, _pair$player4;\n        const sameIds = pair.player1_id === player1.id && pair.player2_id === player2.id || pair.player1_id === player2.id && pair.player2_id === player1.id;\n        const sameNames = ((_pair$player = pair.player1) === null || _pair$player === void 0 ? void 0 : _pair$player.name.toLowerCase()) === player1.name.toLowerCase() && ((_pair$player2 = pair.player2) === null || _pair$player2 === void 0 ? void 0 : _pair$player2.name.toLowerCase()) === player2.name.toLowerCase() || ((_pair$player3 = pair.player1) === null || _pair$player3 === void 0 ? void 0 : _pair$player3.name.toLowerCase()) === player2.name.toLowerCase() && ((_pair$player4 = pair.player2) === null || _pair$player4 === void 0 ? void 0 : _pair$player4.name.toLowerCase()) === player1.name.toLowerCase();\n        return sameIds || sameNames;\n      });\n      if (existingPairLocal) {\n        setError(`La pareja ${player1.name} y ${player2.name} ya está registrada`);\n        return;\n      }\n      const newPair = await createPair(selectedTournament.id, player1.id, player2.id);\n      setPairs([...pairs, newPair]);\n      setSelectedPlayers([]);\n      console.log(\"Pair added successfully\");\n    } catch (err) {\n      console.error(\"Error creating pair:\", err);\n      setError(\"Error al crear la pareja: \" + err.message);\n    }\n  };\n  const startTournament = async () => {\n    if (!selectedTournament || pairs.length < 2) {\n      setError(\"Se necesitan al menos 2 parejas para iniciar el torneo\");\n      return;\n    }\n    try {\n      setLoading(true);\n      setError(\"\");\n      console.log(\"🚀 Iniciando torneo:\", selectedTournament.name);\n\n      // Limpiar partidos existentes\n      if (matches.length > 0) {\n        await deleteMatchesByTournament(selectedTournament.id);\n        setMatches([]);\n      }\n      const allPairs = [...pairs];\n      const allCombinations = [];\n      for (let i = 0; i < allPairs.length; i++) {\n        for (let j = i + 1; j < allPairs.length; j++) {\n          allCombinations.push({\n            pair1: allPairs[i],\n            pair2: allPairs[j]\n          });\n        }\n      }\n      const finalMatches = [];\n      const remainingCombinations = [...allCombinations];\n      let round = 1;\n      while (remainingCombinations.length > 0) {\n        const roundMatches = [];\n        const usedPairs = new Set();\n        const courtOrder = [];\n        for (let i = 0; i < selectedTournament.courts; i++) {\n          const rotatedCourt = (round - 1 + i) % selectedTournament.courts + 1;\n          courtOrder.push(rotatedCourt);\n        }\n        for (let courtIndex = 0; courtIndex < courtOrder.length; courtIndex++) {\n          const court = courtOrder[courtIndex];\n          let bestIndex = -1;\n          let bestScore = -1;\n          for (let i = 0; i < remainingCombinations.length; i++) {\n            const combo = remainingCombinations[i];\n            if (!usedPairs.has(combo.pair1.id) && !usedPairs.has(combo.pair2.id)) {\n              let score = 0;\n              for (let j = 0; j < remainingCombinations.length; j++) {\n                if (i !== j) {\n                  const futureCombo = remainingCombinations[j];\n                  if (!usedPairs.has(futureCombo.pair1.id) && !usedPairs.has(futureCombo.pair2.id) && futureCombo.pair1.id !== combo.pair1.id && futureCombo.pair1.id !== combo.pair2.id && futureCombo.pair2.id !== combo.pair1.id && futureCombo.pair2.id !== combo.pair2.id) {\n                    score++;\n                  }\n                }\n              }\n              if (score > bestScore) {\n                bestScore = score;\n                bestIndex = i;\n              }\n            }\n          }\n          if (bestIndex !== -1) {\n            const combo = remainingCombinations[bestIndex];\n            const match = {\n              pair1: combo.pair1,\n              pair2: combo.pair2,\n              round,\n              court\n            };\n            roundMatches.push(match);\n            usedPairs.add(combo.pair1.id);\n            usedPairs.add(combo.pair2.id);\n            remainingCombinations.splice(bestIndex, 1);\n          } else {\n            break;\n          }\n        }\n        if (roundMatches.length > 0) {\n          finalMatches.push(...roundMatches);\n        }\n        round++;\n      }\n      const createdMatches = [];\n      for (const match of finalMatches) {\n        try {\n          const createdMatch = await createMatch(selectedTournament.id, match.pair1.id, match.pair2.id, match.court, match.round);\n          createdMatches.push(createdMatch);\n        } catch (error) {\n          console.error(\"Error creating match:\", error);\n        }\n      }\n      await updateTournament(selectedTournament.id, {\n        is_started: true\n      });\n      setSelectedTournament(prev => prev ? {\n        ...prev,\n        is_started: true\n      } : null);\n      await loadTournamentData();\n      setSuccessModalData({\n        title: \"¡Torneo Iniciado!\",\n        message: `Se han creado ${createdMatches.length} partidos exitosamente usando ${selectedTournament.courts} canchas. El torneo está listo para comenzar.`,\n        icon: \"🏆\"\n      });\n      setShowSuccessModal(true);\n    } catch (error) {\n      console.error(\"Error starting tournament:\", error);\n      setError(\"Error al iniciar el torneo: \" + error.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const addGame = async matchId => {\n    try {\n      setError(\"\");\n      const gameNumber = games.filter(g => g.match_id === matchId).length + 1;\n      const newGame = await createGame(matchId, gameNumber);\n      setGames([...games, newGame]);\n    } catch (err) {\n      console.error(\"❌ Error al agregar el juego:\", err);\n      setError(\"Error al agregar el juego\");\n    }\n  };\n  const updateGameScore = useCallback(async (gameId, pair1Games, pair2Games) => {\n    try {\n      setError(\"\");\n      setGames(prevGames => prevGames.map(g => g.id === gameId ? {\n        ...g,\n        pair1_games: pair1Games,\n        pair2_games: pair2Games\n      } : g));\n      await updateGame(gameId, {\n        pair1_games: pair1Games,\n        pair2_games: pair2Games\n      });\n    } catch (err) {\n      console.error(\"❌ Error al actualizar el marcador:\", err);\n      setError(\"Error al actualizar el marcador: \" + err.message);\n    }\n  }, [games, selectedTournament]);\n  const handleGameScoreChange = useCallback((gameId, pair1Games, pair2Games) => {\n    setEditingGames(prev => ({\n      ...prev,\n      [gameId]: {\n        pair1: pair1Games,\n        pair2: pair2Games\n      }\n    }));\n  }, []);\n  const handleTieBreakScoreChange = useCallback((gameId, pair1Points, pair2Points) => {\n    setEditingTieBreaks(prev => ({\n      ...prev,\n      [gameId]: {\n        pair1: pair1Points,\n        pair2: pair2Points\n      }\n    }));\n  }, []);\n  const handleGameScoreBlur = useCallback(async gameId => {\n    const editingGame = editingGames[gameId];\n    if (editingGame) {\n      await updateGameScore(gameId, editingGame.pair1, editingGame.pair2);\n      setEditingGames(prev => {\n        const newState = {\n          ...prev\n        };\n        delete newState[gameId];\n        return newState;\n      });\n    }\n  }, [editingGames]);\n  const handleTieBreakScoreBlur = useCallback(async gameId => {\n    const editingTieBreak = editingTieBreaks[gameId];\n    if (editingTieBreak) {\n      await updateTieBreakScore(gameId, editingTieBreak.pair1, editingTieBreak.pair2);\n      setEditingTieBreaks(prev => {\n        const newState = {\n          ...prev\n        };\n        delete newState[gameId];\n        return newState;\n      });\n    }\n  }, [editingTieBreaks]);\n  const updateTieBreakScore = async (gameId, pair1Points, pair2Points) => {\n    try {\n      setError(\"\");\n      setGames(prevGames => prevGames.map(g => g.id === gameId ? {\n        ...g,\n        tie_break_pair1_points: pair1Points,\n        tie_break_pair2_points: pair2Points\n      } : g));\n      await updateGame(gameId, {\n        tie_break_pair1_points: pair1Points,\n        tie_break_pair2_points: pair2Points\n      });\n    } catch (err) {\n      console.error(\"❌ Error al actualizar el tie break:\", err);\n      setError(\"Error al actualizar el tie break: \" + err.message);\n    }\n  };\n  const toggleTieBreak = async gameId => {\n    try {\n      setError(\"\");\n      const game = games.find(g => g.id === gameId);\n      if (!game) return;\n      const newIsTieBreak = !game.is_tie_break;\n      setGames(prevGames => prevGames.map(g => g.id === gameId ? {\n        ...g,\n        is_tie_break: newIsTieBreak,\n        tie_break_pair1_points: 0,\n        tie_break_pair2_points: 0\n      } : g));\n      await updateGame(gameId, {\n        is_tie_break: newIsTieBreak,\n        tie_break_pair1_points: 0,\n        tie_break_pair2_points: 0\n      });\n    } catch (err) {\n      setError(\"Error al cambiar el tipo de juego\");\n      console.error(err);\n    }\n  };\n  const removeGame = async gameId => {\n    try {\n      setError(\"\");\n      await deleteGame(gameId);\n      setGames(games.filter(g => g.id !== gameId));\n    } catch (err) {\n      console.error(\"❌ Error al eliminar el juego:\", err);\n      setError(\"Error al eliminar el juego: \" + err.message);\n    }\n  };\n  const correctGameScore = useCallback(async (gameId, pair1Games, pair2Games, pair1TieBreakPoints = 0, pair2TieBreakPoints = 0, isTieBreak = false) => {\n    try {\n      setError(\"\");\n      setGames(prevGames => prevGames.map(g => g.id === gameId ? {\n        ...g,\n        pair1_games: pair1Games,\n        pair2_games: pair2Games,\n        tie_break_pair1_points: pair1TieBreakPoints,\n        tie_break_pair2_points: pair2TieBreakPoints,\n        is_tie_break: isTieBreak,\n        updated_at: new Date().toISOString()\n      } : g));\n      await updateGame(gameId, {\n        pair1_games: pair1Games,\n        pair2_games: pair2Games,\n        tie_break_pair1_points: pair1TieBreakPoints,\n        tie_break_pair2_points: pair2TieBreakPoints,\n        is_tie_break: isTieBreak\n      });\n    } catch (err) {\n      console.error(\"❌ Error al corregir el marcador:\", err);\n      setError(\"Error al corregir el marcador: \" + err.message);\n    }\n  }, []);\n  const finishMatch = async matchId => {\n    try {\n      setError(\"\");\n      const match = matches.find(m => m.id === matchId);\n      if (!match) {\n        console.error(\"Match not found:\", matchId);\n        return;\n      }\n      const matchGames = games.filter(g => g.match_id === matchId);\n      if (!FlexibleMatchFinisher.canFinishMatch(matchGames)) {\n        setError(\"No se puede finalizar el partido. Verifica que todos los juegos tengan marcadores válidos.\");\n        return;\n      }\n      const result = await FlexibleMatchFinisher.finishMatch(match, matchGames, pairs, async () => {\n        if (selectedTournament) {\n          const pairsData = await getPairs(selectedTournament.id);\n          setPairs(pairsData);\n          setForceRefresh(prev => prev + 1);\n          const matchesData = await getMatches(selectedTournament.id);\n          setMatches(matchesData);\n        }\n      });\n      if (result.success) {\n        setMatches(matches.map(m => m.id === matchId ? {\n          ...m,\n          winner_id: result.winnerId,\n          is_finished: true\n        } : m));\n        if (selectedTournament) {\n          const updatedPairsData = await getPairs(selectedTournament.id);\n          setPairs(updatedPairsData);\n          setForceRefresh(prev => prev + 1);\n        }\n        alert(result.message);\n      } else {\n        setError(result.message);\n      }\n    } catch (err) {\n      setError(\"Error al finalizar el partido\");\n      console.error(err);\n    }\n  };\n  const handleMatchSelect = matchId => {\n    setSelectedMatchId(matchId);\n    loadMatchGames(matchId);\n  };\n  const loadMatchGames = async matchId => {\n    try {\n      const gamesData = await getGames(matchId);\n      setGames(gamesData);\n    } catch (err) {\n      console.error(\"❌ Error al cargar juegos:\", err);\n    }\n  };\n  const selectedMatch = matches.find(match => match.id === selectedMatchId);\n  const matchesByRound = matches.reduce((acc, match) => {\n    if (!acc[match.round]) {\n      acc[match.round] = [];\n    }\n    acc[match.round].push(match);\n    return acc;\n  }, {});\n  const sortedPairs = useMemo(() => {\n    return [...pairs].sort((a, b) => {\n      if (a.sets_won !== b.sets_won) {\n        return b.sets_won - a.sets_won;\n      }\n      if (a.games_won !== b.games_won) {\n        return b.games_won - a.games_won;\n      }\n      return b.points - a.points;\n    });\n  }, [pairs, forceRefresh]);\n  const isTournamentFinished = useMemo(() => {\n    return matches.length > 0 && matches.every(match => match.is_finished);\n  }, [matches]);\n  const winner = useMemo(() => {\n    return sortedPairs.length > 0 ? sortedPairs[0] : null;\n  }, [sortedPairs]);\n  const showWinnerScreenHandler = () => {\n    setShowWinnerScreen(true);\n  };\n  const hideWinnerScreenHandler = () => {\n    setShowWinnerScreen(false);\n  };\n  const showMatchResultsHandler = match => {\n    setSelectedMatchResults(match);\n    setShowMatchResults(true);\n  };\n  const hideMatchResultsHandler = () => {\n    setShowMatchResults(false);\n    setSelectedMatchResults(null);\n  };\n  const handleViewTournamentResults = async tournament => {\n    try {\n      setSelectedTournament(tournament);\n      await loadTournamentData();\n      alert(`✅ Torneo \"${tournament.name}\" seleccionado\\n\\nAhora puedes ver todos los partidos y resultados en el panel derecho.`);\n    } catch (err) {\n      console.error(\"❌ Error al cargar resultados del torneo:\", err);\n      alert(\"Error al cargar los resultados del torneo. Inténtalo de nuevo.\");\n    }\n  };\n  const recalculateMatchWinner = async matchId => {\n    try {\n      const match = matches.find(m => m.id === matchId);\n      if (!match) {\n        console.error(\"Match not found:\", matchId);\n        return;\n      }\n      const matchGames = await getGames(matchId);\n      if (matchGames.length === 0) {\n        console.log(\"No hay juegos para recalcular\");\n        return;\n      }\n      let pair1Games = 0;\n      let pair2Games = 0;\n      matchGames.forEach(game => {\n        if (game.is_tie_break) {\n          if (game.tie_break_pair1_points >= 10 && game.tie_break_pair1_points - game.tie_break_pair2_points >= 2) {\n            pair1Games++;\n          } else if (game.tie_break_pair2_points >= 10 && game.tie_break_pair2_points - game.tie_break_pair1_points >= 2) {\n            pair2Games++;\n          }\n        } else {\n          if (game.pair1_games > game.pair2_games) {\n            pair1Games++;\n          } else if (game.pair2_games > game.pair1_games) {\n            pair2Games++;\n          }\n        }\n      });\n      const isTie = pair1Games === pair2Games;\n      const winnerId = isTie ? undefined : pair1Games > pair2Games ? match.pair1_id : match.pair2_id;\n      await updateMatch(matchId, {\n        winner_id: winnerId,\n        is_finished: true\n      });\n      console.log(\"✅ Ganador recalculado y actualizado en la base de datos\");\n    } catch (error) {\n      console.error(\"Error recalculating match winner:\", error);\n    }\n  };\n  const handleBackToHome = () => {\n    setSelectedTournament(null);\n    setPairs([]);\n    setMatches([]);\n    setGames([]);\n    setSelectedMatchId(null);\n    setError(\"\");\n    setShowWinnerScreen(false);\n    setShowMatchResults(false);\n    setSelectedMatchResults(null);\n    setShowScoreCorrector(false);\n    setSelectedCorrectorMatch(null);\n    setForceRefresh(0);\n    setShowDebugInfo(false);\n    setEditingGames({});\n    setEditingTieBreaks({});\n    setShowSuccessModal(false);\n    setSuccessModalData({\n      title: \"\",\n      message: \"\",\n      icon: \"✅\"\n    });\n  };\n  const openScoreCorrector = match => {\n    setSelectedCorrectorMatch(match);\n    setShowScoreCorrector(true);\n  };\n  const closeScoreCorrector = () => {\n    setShowScoreCorrector(false);\n    setSelectedCorrectorMatch(null);\n  };\n  const handleScoreCorrectorUpdate = async () => {\n    if (selectedTournament) {\n      await loadTournamentData();\n    }\n    closeScoreCorrector();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"\\uD83C\\uDFC6 Gesti\\xF3n de Torneos Express y Retas\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 801,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"\\u274C Error\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 805,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 806,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"error-help\",\n          children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n            children: \"\\uD83D\\uDCA1 Ayuda:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 808,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"ol\", {\n            children: [/*#__PURE__*/_jsxDEV(\"li\", {\n              children: \"Verifica tu conexi\\xF3n a internet\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 810,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: \"Intenta recargar la p\\xE1gina\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 811,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: \"Si el problema persiste, contacta al administrador\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 812,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 809,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 807,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 804,\n        columnNumber: 11\n      }, this), loading && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"\\u23F3 Cargando...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 820,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 819,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"main-layout\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"left-panel\",\n          children: /*#__PURE__*/_jsxDEV(TournamentManager, {\n            selectedTournament: selectedTournament || undefined,\n            onTournamentSelect: setSelectedTournament,\n            onViewResults: handleViewTournamentResults\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 826,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 825,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"right-panel\",\n          children: selectedTournament ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"tournament-details\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"tournament-header\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"tournament-header-content\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"tournament-title-section\",\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"tournament-icon\",\n                      children: \"\\uD83C\\uDFC6\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 840,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"tournament-info\",\n                      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                        children: selectedTournament.name\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 842,\n                        columnNumber: 27\n                      }, this), selectedTournament.description && /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"tournament-description\",\n                        children: selectedTournament.description\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 844,\n                        columnNumber: 29\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 841,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 839,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"tournament-stats-section\",\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"stats-row\",\n                      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"stat-badge\",\n                        children: [selectedTournament.courts, \" canchas\"]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 852,\n                        columnNumber: 27\n                      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"stat-badge\",\n                        children: [pairs.length, \" parejas\"]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 855,\n                        columnNumber: 27\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 851,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"stats-row\",\n                      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"stat-badge\",\n                        children: [matches.length, \" partidos\"]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 860,\n                        columnNumber: 27\n                      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                        className: `status-badge ${selectedTournament.is_started ? \"started\" : \"pending\"}`,\n                        children: selectedTournament.is_started ? \"En Progreso\" : \"Pendiente\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 863,\n                        columnNumber: 27\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 859,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 850,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 838,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 837,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"player-management-section\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"player-management-header\",\n                  children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                    children: \"\\uD83D\\uDC65 Gesti\\xF3n de Jugadores\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 882,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    className: \"toggle-player-manager-btn\",\n                    onClick: () => setShowPlayerManager(!showPlayerManager),\n                    children: showPlayerManager ? \"👥 Ocultar Gestión de Jugadores\" : \"👥 Mostrar Gestión de Jugadores\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 883,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 881,\n                  columnNumber: 21\n                }, this), showPlayerManager && /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"player-manager-container\",\n                  children: /*#__PURE__*/_jsxDEV(PlayerManager, {\n                    playersInPairs: pairs.flatMap(pair => [pair.player1_id, pair.player2_id]),\n                    onPlayerSelect: players => {\n                      console.log(\"=== SELECCIÓN DE JUGADORES ===\");\n                      console.log(\"Players selected:\", players.length);\n                      players.forEach((player, index) => {\n                        console.log(`Player ${index + 1}:`, player.name, \"(ID:\", player.id + \")\");\n                      });\n\n                      // Validación: Verificar si algún jugador ya está en una pareja\n                      const playersInPairs = players.filter(player => {\n                        const isInPair = pairs.some(pair => pair.player1_id === player.id || pair.player2_id === player.id);\n                        if (isInPair) {\n                          var _existingPair$player, _existingPair$player2, _existingPair$player3;\n                          const existingPair = pairs.find(pair => pair.player1_id === player.id || pair.player2_id === player.id);\n                          console.log(`🚨 JUGADOR YA EN PAREJA: ${player.name} está en pareja con ${(existingPair === null || existingPair === void 0 ? void 0 : (_existingPair$player = existingPair.player1) === null || _existingPair$player === void 0 ? void 0 : _existingPair$player.id) === player.id ? existingPair === null || existingPair === void 0 ? void 0 : (_existingPair$player2 = existingPair.player2) === null || _existingPair$player2 === void 0 ? void 0 : _existingPair$player2.name : existingPair === null || existingPair === void 0 ? void 0 : (_existingPair$player3 = existingPair.player1) === null || _existingPair$player3 === void 0 ? void 0 : _existingPair$player3.name}`);\n                        }\n                        return isInPair;\n                      });\n                      if (playersInPairs.length > 0) {\n                        const playerNames = playersInPairs.map(p => p.name).join(\", \");\n                        console.log(\"🚨 ERROR: Jugadores ya están en parejas:\", playerNames);\n                        setError(`Los jugadores ${playerNames} ya están en parejas existentes. Debes eliminar sus parejas actuales antes de poder seleccionarlos nuevamente.`);\n                        return;\n                      }\n\n                      // Validación: No permitir jugadores con nombres iguales\n                      if (players.length === 2) {\n                        const player1 = players[0];\n                        const player2 = players[1];\n                        if (player1.name.toLowerCase() === player2.name.toLowerCase()) {\n                          console.log(\"🚨 ERROR: Jugadores con nombres iguales detectados\");\n                          console.log(\"Player 1:\", player1.name, \"(ID:\", player1.id + \")\");\n                          console.log(\"Player 2:\", player2.name, \"(ID:\", player2.id + \")\");\n                          setError(\"No puedes seleccionar dos jugadores con el mismo nombre\");\n                          return;\n                        }\n\n                        // Validación: Verificar si ya existe una pareja con estos jugadores\n                        const existingPair = pairs.find(pair => {\n                          var _pair$player5, _pair$player6, _pair$player7, _pair$player8;\n                          const sameIds = pair.player1_id === player1.id && pair.player2_id === player2.id || pair.player1_id === player2.id && pair.player2_id === player1.id;\n                          const sameNames = ((_pair$player5 = pair.player1) === null || _pair$player5 === void 0 ? void 0 : _pair$player5.name.toLowerCase()) === player1.name.toLowerCase() && ((_pair$player6 = pair.player2) === null || _pair$player6 === void 0 ? void 0 : _pair$player6.name.toLowerCase()) === player2.name.toLowerCase() || ((_pair$player7 = pair.player1) === null || _pair$player7 === void 0 ? void 0 : _pair$player7.name.toLowerCase()) === player2.name.toLowerCase() && ((_pair$player8 = pair.player2) === null || _pair$player8 === void 0 ? void 0 : _pair$player8.name.toLowerCase()) === player1.name.toLowerCase();\n                          if (sameIds || sameNames) {\n                            console.log(\"🚨 PAREJA DUPLICADA DETECTADA:\", player1.name, \"+\", player2.name);\n                            console.log(\"Existing pair:\", existingPair);\n                          }\n                          return sameIds || sameNames;\n                        });\n                        if (existingPair) {\n                          console.log(\"🚨 ERROR: Pareja ya existe en la base de datos\");\n                          setError(`La pareja ${player1.name} + ${player2.name} ya existe en el torneo`);\n                          return;\n                        }\n\n                        // Si llegamos aquí, la pareja es válida\n                        console.log(\"✅ PAREJA VÁLIDA:\", player1.name, \"+\", player2.name);\n                        addPair(player1, player2);\n                        setSelectedPlayers([]); // Limpiar selección después de crear la pareja\n                      } else {\n                        setSelectedPlayers(players);\n                      }\n                    },\n                    selectedPlayers: selectedPlayers,\n                    allowMultipleSelection: true\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 895,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 894,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 880,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"pair-management-section\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"pair-management-header\",\n                  children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                    children: \"\\u270F\\uFE0F Gesti\\xF3n de Parejas\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1048,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    className: \"toggle-pair-manager-btn\",\n                    onClick: () => setShowPairManager(!showPairManager),\n                    children: showPairManager ? \"✏️ Ocultar Gestión de Parejas\" : \"✏️ Mostrar Gestión de Parejas\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1049,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1047,\n                  columnNumber: 21\n                }, this), showPairManager && /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"pair-manager-container\",\n                  children: /*#__PURE__*/_jsxDEV(PairManager, {\n                    pairs: pairs,\n                    onPairUpdate: updatePairPlayers,\n                    onPairDelete: deletePair\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1061,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1060,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1046,\n                columnNumber: 19\n              }, this), !selectedTournament.is_started && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"start-tournament-section\",\n                children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                  children: \"\\uD83D\\uDE80 Iniciar Torneo\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1072,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"tournament-info\",\n                  children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                    children: [\"Tienes \", pairs.length, \" parejas registradas\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1074,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    children: [\"Se crear\\xE1n \", pairs.length * (pairs.length - 1) / 2, \" \", \"partidos (round-robin completo - todas las parejas se enfrentan)\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1075,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    children: [\"Estado del torneo:\", \" \", selectedTournament.is_started ? \"Iniciado\" : \"Pendiente\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1080,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1073,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"start-button\",\n                  onClick: startTournament,\n                  disabled: loading || pairs.length < 2,\n                  children: loading ? \"⏳ Iniciando...\" : selectedTournament.is_started ? \"🏆 Torneo Ya Iniciado\" : pairs.length < 2 ? \"❌ Necesitas al menos 2 parejas\" : \"🚀 ¡Iniciar Torneo!\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1087,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1071,\n                columnNumber: 21\n              }, this), selectedTournament && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"debug-section\",\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"debug-toggle-btn\",\n                  onClick: () => setShowDebugInfo(!showDebugInfo),\n                  children: [showDebugInfo ? \"🔽\" : \"🔼\", \" Debug Info\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1106,\n                  columnNumber: 23\n                }, this), showDebugInfo && /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"debug-info\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"debug-header\",\n                    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                      children: \"\\uD83D\\uDD27 Informaci\\xF3n de Debug\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1116,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"debug-stats\",\n                      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                        children: [\"Estado:\", \" \", selectedTournament.is_started ? \"✅ Iniciado\" : \"⏳ Pendiente\"]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1118,\n                        columnNumber: 31\n                      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                        children: [\"Parejas: \", pairs.length]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1124,\n                        columnNumber: 31\n                      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                        children: [\"Partidos: \", matches.length]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1125,\n                        columnNumber: 31\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1117,\n                      columnNumber: 29\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1115,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"debug-buttons\",\n                    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                      onClick: async () => {\n                        console.log(\"=== PROBAR CONEXIÓN ===\");\n                        const isConnected = await testConnection();\n                        if (isConnected) {\n                          setError(\"\");\n                        } else {\n                          setError(\"❌ Error de conexión a Supabase. Verifica tu configuración.\");\n                        }\n                      },\n                      className: \"debug-btn connection-btn\",\n                      children: \"\\uD83D\\uDD0C Probar Conexi\\xF3n\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1130,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                      onClick: () => {\n                        console.log(\"=== FORZANDO RECARGA DE DATOS ===\");\n                        loadTournamentData();\n                      },\n                      className: \"debug-btn reload-btn\",\n                      children: \"\\uD83D\\uDD04 Recargar Datos\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1147,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                      onClick: async () => {\n                        console.log(\"=== VERIFICANDO ESTADO DEL TORNEO ===\");\n                        try {\n                          console.log(\"Estado actual del torneo:\", selectedTournament);\n                          console.log(\"Parejas en estado:\", pairs.length);\n                          console.log(\"Partidos en estado:\", matches.length);\n                          const dbPairs = await getPairs(selectedTournament.id);\n                          const dbMatches = await getMatches(selectedTournament.id);\n                          console.log(\"Parejas en BD:\", dbPairs.length);\n                          console.log(\"Partidos en BD:\", dbMatches.length);\n                          alert(`Estado del torneo:\\n\\nParejas: ${pairs.length} (estado) / ${dbPairs.length} (BD)\\nPartidos: ${matches.length} (estado) / ${dbMatches.length} (BD)\\n\\nTorneo iniciado: ${selectedTournament.is_started ? \"Sí\" : \"No\"}`);\n                        } catch (error) {\n                          console.error(\"Error verificando estado:\", error);\n                        }\n                      },\n                      className: \"debug-btn status-btn\",\n                      children: \"\\uD83D\\uDD0D Verificar Estado\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1159,\n                      columnNumber: 29\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1129,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1114,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1105,\n                columnNumber: 21\n              }, this), pairs.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"pairs-display\",\n                children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                  children: [\"\\uD83D\\uDC65 Parejas Registradas (\", pairs.length, \")\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1226,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"pairs-grid\",\n                  children: pairs.map((pair, index) => {\n                    var _pair$player9, _pair$player0;\n                    return /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"pair-display-card\",\n                      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"pair-number\",\n                        children: [\"#\", index + 1]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1230,\n                        columnNumber: 29\n                      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"pair-names\",\n                        children: [(_pair$player9 = pair.player1) === null || _pair$player9 === void 0 ? void 0 : _pair$player9.name, \" y \", (_pair$player0 = pair.player2) === null || _pair$player0 === void 0 ? void 0 : _pair$player0.name]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1231,\n                        columnNumber: 29\n                      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"pair-stats\",\n                        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                          children: [\"Sets: \", pair.sets_won]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1235,\n                          columnNumber: 31\n                        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                          children: [\"Partidos: \", pair.matches_played]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1236,\n                          columnNumber: 31\n                        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                          children: [\"Puntos: \", pair.points]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1237,\n                          columnNumber: 31\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1234,\n                        columnNumber: 29\n                      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                        onClick: () => {\n                          var _pair$player1, _pair$player10;\n                          if (window.confirm(`¿Estás seguro de que quieres eliminar la pareja \"${(_pair$player1 = pair.player1) === null || _pair$player1 === void 0 ? void 0 : _pair$player1.name} y ${(_pair$player10 = pair.player2) === null || _pair$player10 === void 0 ? void 0 : _pair$player10.name}\"?`)) {\n                            deletePair(pair.id);\n                          }\n                        },\n                        className: \"delete-pair-btn\",\n                        title: \"Eliminar pareja\",\n                        children: \"\\uD83D\\uDDD1\\uFE0F\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1239,\n                        columnNumber: 29\n                      }, this)]\n                    }, pair.id, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1229,\n                      columnNumber: 27\n                    }, this);\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1227,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1225,\n                columnNumber: 21\n              }, this), selectedTournament.is_started && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"tournament-content\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"matches-section\",\n                  children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                    children: [\"\\uD83C\\uDFBE Partidos (\", matches.length, \" total)\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1264,\n                    columnNumber: 25\n                  }, this), matches.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"no-matches\",\n                    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                      children: \"\\uD83D\\uDCDD No hay partidos programados a\\xFAn\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1267,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                      children: \"Inicia el torneo para generar los partidos autom\\xE1ticamente\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1268,\n                      columnNumber: 29\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1266,\n                    columnNumber: 27\n                  }, this) : Object.entries(matchesByRound).map(([round, roundMatches]) => /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"round-section\",\n                    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                      children: [\"\\uD83D\\uDD04 Ronda \", round, \" (\", roundMatches.length, \" \", \"partidos)\"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1277,\n                      columnNumber: 33\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"matches-container\",\n                      children: roundMatches.map(match => {\n                        var _match$pair, _match$pair$player, _match$pair2, _match$pair2$player, _match$pair3, _match$pair3$player, _match$pair4, _match$pair4$player, _match$pair5, _match$pair5$player, _match$pair6, _match$pair6$player, _match$pair7, _match$pair7$player, _match$pair8, _match$pair8$player, _match$pair9, _match$pair9$player, _match$pair0, _match$pair0$player, _match$pair1, _match$pair1$player, _match$pair10, _match$pair10$player, _match$pair11, _match$pair11$player, _match$pair12, _match$pair12$player, _match$pair13, _match$pair13$player, _match$pair14, _match$pair14$player;\n                        return /*#__PURE__*/_jsxDEV(\"div\", {\n                          className: `match-card ${selectedMatchId === match.id ? \"selected\" : \"\"}`,\n                          onClick: () => handleMatchSelect(match.id),\n                          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                            className: \"match-header\",\n                            children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n                              children: [(_match$pair = match.pair1) === null || _match$pair === void 0 ? void 0 : (_match$pair$player = _match$pair.player1) === null || _match$pair$player === void 0 ? void 0 : _match$pair$player.name, \" y\", \" \", (_match$pair2 = match.pair1) === null || _match$pair2 === void 0 ? void 0 : (_match$pair2$player = _match$pair2.player2) === null || _match$pair2$player === void 0 ? void 0 : _match$pair2$player.name, \" vs\", \" \", (_match$pair3 = match.pair2) === null || _match$pair3 === void 0 ? void 0 : (_match$pair3$player = _match$pair3.player1) === null || _match$pair3$player === void 0 ? void 0 : _match$pair3$player.name, \" y\", \" \", (_match$pair4 = match.pair2) === null || _match$pair4 === void 0 ? void 0 : (_match$pair4$player = _match$pair4.player2) === null || _match$pair4$player === void 0 ? void 0 : _match$pair4$player.name]\n                            }, void 0, true, {\n                              fileName: _jsxFileName,\n                              lineNumber: 1295,\n                              columnNumber: 41\n                            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                              className: \"match-info\",\n                              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                                className: \"court-badge\",\n                                children: [\"\\uD83C\\uDFDF\\uFE0F Cancha \", match.court]\n                              }, void 0, true, {\n                                fileName: _jsxFileName,\n                                lineNumber: 1302,\n                                columnNumber: 43\n                              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                                className: \"round-badge\",\n                                children: [\"\\uD83D\\uDD04 Ronda \", match.round]\n                              }, void 0, true, {\n                                fileName: _jsxFileName,\n                                lineNumber: 1305,\n                                columnNumber: 43\n                              }, this)]\n                            }, void 0, true, {\n                              fileName: _jsxFileName,\n                              lineNumber: 1301,\n                              columnNumber: 41\n                            }, this)]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1294,\n                            columnNumber: 39\n                          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                            className: \"match-details\",\n                            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                              className: \"match-pairs\",\n                              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                                children: \"Pareja 1:\"\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 1312,\n                                columnNumber: 43\n                              }, this), \" \", (_match$pair5 = match.pair1) === null || _match$pair5 === void 0 ? void 0 : (_match$pair5$player = _match$pair5.player1) === null || _match$pair5$player === void 0 ? void 0 : _match$pair5$player.name, \" y\", \" \", (_match$pair6 = match.pair1) === null || _match$pair6 === void 0 ? void 0 : (_match$pair6$player = _match$pair6.player2) === null || _match$pair6$player === void 0 ? void 0 : _match$pair6$player.name]\n                            }, void 0, true, {\n                              fileName: _jsxFileName,\n                              lineNumber: 1311,\n                              columnNumber: 41\n                            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                              className: \"match-pairs\",\n                              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                                children: \"Pareja 2:\"\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 1317,\n                                columnNumber: 43\n                              }, this), \" \", (_match$pair7 = match.pair2) === null || _match$pair7 === void 0 ? void 0 : (_match$pair7$player = _match$pair7.player1) === null || _match$pair7$player === void 0 ? void 0 : _match$pair7$player.name, \" y\", \" \", (_match$pair8 = match.pair2) === null || _match$pair8 === void 0 ? void 0 : (_match$pair8$player = _match$pair8.player2) === null || _match$pair8$player === void 0 ? void 0 : _match$pair8$player.name]\n                            }, void 0, true, {\n                              fileName: _jsxFileName,\n                              lineNumber: 1316,\n                              columnNumber: 41\n                            }, this)]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1310,\n                            columnNumber: 39\n                          }, this), match.winner_id && /*#__PURE__*/_jsxDEV(\"div\", {\n                            className: \"winner\",\n                            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                              className: \"winner-icon\",\n                              children: \"\\uD83C\\uDFC6\"\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 1324,\n                              columnNumber: 43\n                            }, this), \"Ganador:\", \" \", match.winner_id === match.pair1_id ? `${(_match$pair9 = match.pair1) === null || _match$pair9 === void 0 ? void 0 : (_match$pair9$player = _match$pair9.player1) === null || _match$pair9$player === void 0 ? void 0 : _match$pair9$player.name} y ${(_match$pair0 = match.pair1) === null || _match$pair0 === void 0 ? void 0 : (_match$pair0$player = _match$pair0.player2) === null || _match$pair0$player === void 0 ? void 0 : _match$pair0$player.name}` : `${(_match$pair1 = match.pair2) === null || _match$pair1 === void 0 ? void 0 : (_match$pair1$player = _match$pair1.player1) === null || _match$pair1$player === void 0 ? void 0 : _match$pair1$player.name} y ${(_match$pair10 = match.pair2) === null || _match$pair10 === void 0 ? void 0 : (_match$pair10$player = _match$pair10.player2) === null || _match$pair10$player === void 0 ? void 0 : _match$pair10$player.name}`]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1323,\n                            columnNumber: 41\n                          }, this), match.is_finished && !match.winner_id && /*#__PURE__*/_jsxDEV(\"div\", {\n                            className: \"winner\",\n                            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                              className: \"winner-icon\",\n                              children: \"\\uD83E\\uDD1D\"\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 1336,\n                              columnNumber: 45\n                            }, this), \"Empate: \", (_match$pair11 = match.pair1) === null || _match$pair11 === void 0 ? void 0 : (_match$pair11$player = _match$pair11.player1) === null || _match$pair11$player === void 0 ? void 0 : _match$pair11$player.name, \" \", \"y \", (_match$pair12 = match.pair1) === null || _match$pair12 === void 0 ? void 0 : (_match$pair12$player = _match$pair12.player2) === null || _match$pair12$player === void 0 ? void 0 : _match$pair12$player.name, \" vs\", \" \", (_match$pair13 = match.pair2) === null || _match$pair13 === void 0 ? void 0 : (_match$pair13$player = _match$pair13.player1) === null || _match$pair13$player === void 0 ? void 0 : _match$pair13$player.name, \" y\", \" \", (_match$pair14 = match.pair2) === null || _match$pair14 === void 0 ? void 0 : (_match$pair14$player = _match$pair14.player2) === null || _match$pair14$player === void 0 ? void 0 : _match$pair14$player.name]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1335,\n                            columnNumber: 43\n                          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                            className: \"match-status\",\n                            children: match.is_finished ? /*#__PURE__*/_jsxDEV(\"span\", {\n                              className: \"status-finished\",\n                              children: \"\\u2714 Finalizado\"\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 1347,\n                              columnNumber: 43\n                            }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n                              className: \"status-pending\",\n                              children: \"\\u23F3 Pendiente\"\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 1351,\n                              columnNumber: 43\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1345,\n                            columnNumber: 39\n                          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                            className: \"match-actions\",\n                            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                              onClick: e => {\n                                e.stopPropagation();\n                                showMatchResultsHandler(match);\n                              },\n                              className: \"view-results-btn\",\n                              children: \"\\uD83D\\uDCCA Ver Resultados\"\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 1357,\n                              columnNumber: 41\n                            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                              onClick: e => {\n                                e.stopPropagation();\n                                openScoreCorrector(match);\n                              },\n                              className: \"correct-result-btn\",\n                              children: \"\\u270F\\uFE0F Corregir Marcador\"\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 1366,\n                              columnNumber: 41\n                            }, this)]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1356,\n                            columnNumber: 39\n                          }, this)]\n                        }, match.id, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1283,\n                          columnNumber: 37\n                        }, this);\n                      })\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1281,\n                      columnNumber: 33\n                    }, this)]\n                  }, round, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1276,\n                    columnNumber: 31\n                  }, this))]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1263,\n                  columnNumber: 23\n                }, this), selectedMatch && /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"match-management\",\n                  children: /*#__PURE__*/_jsxDEV(MatchStatusDisplay, {\n                    match: selectedMatch,\n                    games: games.filter(g => g.match_id === selectedMatch.id),\n                    pairs: pairs\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1388,\n                    columnNumber: 27\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1387,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(StandingsTable, {\n                  tournamentId: selectedTournament.id,\n                  forceRefresh: forceRefresh\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1399,\n                  columnNumber: 23\n                }, this), isTournamentFinished && winner && /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"winner-button-container\",\n                  children: /*#__PURE__*/_jsxDEV(\"button\", {\n                    className: \"show-winner-button\",\n                    onClick: showWinnerScreenHandler,\n                    children: \"\\uD83C\\uDFC6 \\xA1Ver Ganador!\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1407,\n                    columnNumber: 27\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1406,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"back-home-button-container\",\n                  children: /*#__PURE__*/_jsxDEV(\"button\", {\n                    className: \"back-home-button\",\n                    onClick: handleBackToHome,\n                    children: \"\\uD83C\\uDFE0 Volver al Inicio\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1418,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1417,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1261,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 836,\n              columnNumber: 17\n            }, this)\n          }, void 0, false) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"no-tournament-selected\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: \"\\uD83C\\uDFC6 Bienvenido al Gestor de Torneos\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1431,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Selecciona un torneo del panel izquierdo para comenzar a gestionar partidos y resultados.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1432,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1430,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 833,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 824,\n        columnNumber: 9\n      }, this), showWinnerScreen && winner && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"winner-screen\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"winner-content\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"winner-celebration\",\n            children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n              className: \"winner-title\",\n              children: \"\\uD83C\\uDFC6 \\xA1FELICIDADES! \\uD83C\\uDFC6\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1446,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"winner-names\",\n              children: [(_winner$player = winner.player1) === null || _winner$player === void 0 ? void 0 : _winner$player.name, \" y \", (_winner$player2 = winner.player2) === null || _winner$player2 === void 0 ? void 0 : _winner$player2.name]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1447,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"winner-subtitle\",\n              children: \"\\xA1Son los campeones del torneo!\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1450,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"winner-stats\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"stat-item\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"stat-number\",\n                  children: winner.sets_won\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1455,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"stat-label\",\n                  children: \"Sets Ganados\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1456,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1454,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"stat-item\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"stat-number\",\n                  children: winner.games_won\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1459,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"stat-label\",\n                  children: \"Partidos Ganados\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1460,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1458,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"stat-item\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"stat-number\",\n                  children: winner.points\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1463,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"stat-label\",\n                  children: \"Puntos Totales\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1464,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1462,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1453,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"back-button\",\n              onClick: hideWinnerScreenHandler,\n              children: \"\\uD83C\\uDFE0 Volver al Torneo\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1467,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1445,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1444,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1443,\n        columnNumber: 11\n      }, this), showMatchResults && selectedMatchResults && /*#__PURE__*/_jsxDEV(MatchResults, {\n        match: selectedMatchResults,\n        isOpen: showMatchResults,\n        onClose: hideMatchResultsHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1480,\n        columnNumber: 11\n      }, this), showScoreCorrector && selectedCorrectorMatch && /*#__PURE__*/_jsxDEV(ScoreCorrector, {\n        match: selectedCorrectorMatch,\n        onClose: closeScoreCorrector,\n        onUpdate: handleScoreCorrectorUpdate\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1489,\n        columnNumber: 11\n      }, this), showSuccessModal && /*#__PURE__*/_jsxDEV(SuccessModal, {\n        title: successModalData.title,\n        message: successModalData.message,\n        icon: successModalData.icon,\n        isOpen: showSuccessModal,\n        onClose: () => setShowSuccessModal(false)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1498,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 800,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 799,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"NcJJ7ZNavFqvqUcJtzm+PuXdsDc=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","useMemo","TournamentManager","PlayerManager","PairManager","ScoreCorrector","StandingsTable","SuccessModal","MatchResults","createPair","getPairs","updatePair","deletePair","deletePairFromDB","createMatch","getMatches","updateMatch","deleteMatchesByTournament","createGame","getGames","updateGame","deleteGame","updateTournament","testConnection","FlexibleMatchFinisher","MatchStatusDisplay","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","_winner$player","_winner$player2","selectedTournament","setSelectedTournament","pairs","setPairs","matches","setMatches","games","setGames","selectedMatchId","setSelectedMatchId","error","setError","loading","setLoading","showPlayerManager","setShowPlayerManager","showPairManager","setShowPairManager","selectedPlayers","setSelectedPlayers","showWinnerScreen","setShowWinnerScreen","showMatchResults","setShowMatchResults","selectedMatchResults","setSelectedMatchResults","showScoreCorrector","setShowScoreCorrector","selectedCorrectorMatch","setSelectedCorrectorMatch","forceRefresh","setForceRefresh","showDebugInfo","setShowDebugInfo","editingGames","setEditingGames","editingTieBreaks","setEditingTieBreaks","showSuccessModal","setShowSuccessModal","successModalData","setSuccessModalData","title","message","icon","loadTournamentData","id","console","log","name","pairsData","matchesData","Promise","all","length","err","pairId","filter","p","updatePairPlayers","player1","player2","player1_id","player2_id","map","pair","addPair","existingPairLocal","find","_pair$player","_pair$player2","_pair$player3","_pair$player4","sameIds","sameNames","toLowerCase","newPair","startTournament","allPairs","allCombinations","i","j","push","pair1","pair2","finalMatches","remainingCombinations","round","roundMatches","usedPairs","Set","courtOrder","courts","rotatedCourt","courtIndex","court","bestIndex","bestScore","combo","has","score","futureCombo","match","add","splice","createdMatches","createdMatch","is_started","prev","addGame","matchId","gameNumber","g","match_id","newGame","updateGameScore","gameId","pair1Games","pair2Games","prevGames","pair1_games","pair2_games","handleGameScoreChange","handleTieBreakScoreChange","pair1Points","pair2Points","handleGameScoreBlur","editingGame","newState","handleTieBreakScoreBlur","editingTieBreak","updateTieBreakScore","tie_break_pair1_points","tie_break_pair2_points","toggleTieBreak","game","newIsTieBreak","is_tie_break","removeGame","correctGameScore","pair1TieBreakPoints","pair2TieBreakPoints","isTieBreak","updated_at","Date","toISOString","finishMatch","m","matchGames","canFinishMatch","result","success","winner_id","winnerId","is_finished","updatedPairsData","alert","handleMatchSelect","loadMatchGames","gamesData","selectedMatch","matchesByRound","reduce","acc","sortedPairs","sort","a","b","sets_won","games_won","points","isTournamentFinished","every","winner","showWinnerScreenHandler","hideWinnerScreenHandler","showMatchResultsHandler","hideMatchResultsHandler","handleViewTournamentResults","tournament","recalculateMatchWinner","forEach","isTie","undefined","pair1_id","pair2_id","handleBackToHome","openScoreCorrector","closeScoreCorrector","handleScoreCorrectorUpdate","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onTournamentSelect","onViewResults","description","onClick","playersInPairs","flatMap","onPlayerSelect","players","player","index","isInPair","some","_existingPair$player","_existingPair$player2","_existingPair$player3","existingPair","playerNames","join","_pair$player5","_pair$player6","_pair$player7","_pair$player8","allowMultipleSelection","onPairUpdate","onPairDelete","disabled","isConnected","dbPairs","dbMatches","_pair$player9","_pair$player0","matches_played","_pair$player1","_pair$player10","window","confirm","Object","entries","_match$pair","_match$pair$player","_match$pair2","_match$pair2$player","_match$pair3","_match$pair3$player","_match$pair4","_match$pair4$player","_match$pair5","_match$pair5$player","_match$pair6","_match$pair6$player","_match$pair7","_match$pair7$player","_match$pair8","_match$pair8$player","_match$pair9","_match$pair9$player","_match$pair0","_match$pair0$player","_match$pair1","_match$pair1$player","_match$pair10","_match$pair10$player","_match$pair11","_match$pair11$player","_match$pair12","_match$pair12$player","_match$pair13","_match$pair13$player","_match$pair14","_match$pair14$player","e","stopPropagation","tournamentId","isOpen","onClose","onUpdate","_c","$RefreshReg$"],"sources":["/Users/nedev/padel-tournament-app/src/App.tsx"],"sourcesContent":["import React, { useState, useEffect, useCallback, useMemo } from \"react\";\nimport \"./App.css\";\nimport { TournamentManager } from \"./components/TournamentManager\";\nimport { PlayerManager } from \"./components/PlayerManager\";\nimport { PairManager } from \"./components/PairManager\";\nimport ScoreCorrector from \"./components/ScoreCorrector\";\nimport StandingsTable from \"./components/StandingsTable\";\nimport { SuccessModal } from \"./components/SuccessModal\";\nimport MatchResults from \"./components/MatchResults\";\n\nimport {\n  Tournament,\n  Player,\n  Pair,\n  Match,\n  Game,\n  createPair,\n  getPairs,\n  updatePair,\n  deletePair as deletePairFromDB,\n  deletePairsByTournament,\n  createMatch,\n  getMatches,\n  updateMatch,\n  deleteMatchesByTournament,\n  createGame,\n  getGames,\n  updateGame,\n  deleteGame,\n  updateTournament,\n} from \"./lib/database\";\nimport { testConnection } from \"./lib/supabaseClient\";\nimport { FlexibleMatchFinisher } from \"./components/FlexibleMatchFinisher\";\nimport MatchStatusDisplay from \"./components/MatchStatusDisplay\";\n\nfunction App() {\n  const [selectedTournament, setSelectedTournament] =\n    useState<Tournament | null>(null);\n  const [pairs, setPairs] = useState<Pair[]>([]);\n  const [matches, setMatches] = useState<Match[]>([]);\n  const [games, setGames] = useState<Game[]>([]);\n  const [selectedMatchId, setSelectedMatchId] = useState<string | null>(null);\n  const [error, setError] = useState<string>(\"\");\n  const [loading, setLoading] = useState(false);\n  const [showPlayerManager, setShowPlayerManager] = useState(false);\n  const [showPairManager, setShowPairManager] = useState(false);\n  const [selectedPlayers, setSelectedPlayers] = useState<Player[]>([]);\n  const [showWinnerScreen, setShowWinnerScreen] = useState(false);\n  const [showMatchResults, setShowMatchResults] = useState(false);\n  const [selectedMatchResults, setSelectedMatchResults] =\n    useState<Match | null>(null);\n  const [showScoreCorrector, setShowScoreCorrector] = useState(false);\n  const [selectedCorrectorMatch, setSelectedCorrectorMatch] =\n    useState<Match | null>(null);\n  const [forceRefresh, setForceRefresh] = useState(0);\n  const [showDebugInfo, setShowDebugInfo] = useState(false);\n  const [editingGames, setEditingGames] = useState<{\n    [key: string]: { pair1: number; pair2: number };\n  }>({});\n  const [editingTieBreaks, setEditingTieBreaks] = useState<{\n    [key: string]: { pair1: number; pair2: number };\n  }>({});\n\n  const [showSuccessModal, setShowSuccessModal] = useState(false);\n  const [successModalData, setSuccessModalData] = useState({\n    title: \"\",\n    message: \"\",\n    icon: \"✅\",\n  });\n\n  // Cargar datos cuando se selecciona un torneo\n  useEffect(() => {\n    if (selectedTournament) {\n      loadTournamentData();\n    }\n  }, [selectedTournament?.id]);\n\n  const loadTournamentData = useCallback(async () => {\n    if (!selectedTournament) return;\n\n    try {\n      setLoading(true);\n      setError(\"\");\n      console.log(\"Loading tournament data for:\", selectedTournament.name);\n\n      const [pairsData, matchesData] = await Promise.all([\n        getPairs(selectedTournament.id),\n        getMatches(selectedTournament.id),\n      ]);\n\n      console.log(\"Pairs loaded:\", pairsData.length, \"pairs\");\n      setPairs(pairsData);\n\n      console.log(\n        \"Matches loaded from database:\",\n        matchesData.length,\n        \"matches\"\n      );\n      setMatches(matchesData);\n    } catch (err) {\n      console.error(\"Error loading tournament data:\", err);\n      setError(\n        \"Error al cargar los datos del torneo: \" + (err as Error).message\n      );\n    } finally {\n      setLoading(false);\n    }\n  }, [selectedTournament]);\n\n  const deletePair = async (pairId: string) => {\n    try {\n      setError(\"\");\n      console.log(\"Eliminando pareja:\", pairId);\n\n      await deletePairFromDB(pairId);\n      setPairs(pairs.filter((p) => p.id !== pairId));\n\n      console.log(\"Pareja eliminada exitosamente\");\n    } catch (err) {\n      console.error(\"Error eliminando pareja:\", err);\n      setError(\"Error al eliminar la pareja: \" + (err as Error).message);\n    }\n  };\n\n  const updatePairPlayers = async (\n    pairId: string,\n    player1: Player,\n    player2: Player\n  ) => {\n    try {\n      setError(\"\");\n      console.log(\"Actualizando pareja:\", pairId);\n      console.log(\"Nuevos jugadores:\", player1.name, \"+\", player2.name);\n\n      // Actualizar la pareja en la base de datos\n      await updatePair(pairId, {\n        player1_id: player1.id,\n        player2_id: player2.id,\n      });\n\n      // Actualizar el estado local\n      setPairs(\n        pairs.map((pair) => {\n          if (pair.id === pairId) {\n            return {\n              ...pair,\n              player1_id: player1.id,\n              player2_id: player2.id,\n              player1: player1,\n              player2: player2,\n            };\n          }\n          return pair;\n        })\n      );\n\n      console.log(\"Pareja actualizada exitosamente\");\n    } catch (err) {\n      console.error(\"Error actualizando pareja:\", err);\n      setError(\"Error al actualizar la pareja: \" + (err as Error).message);\n    }\n  };\n\n  const addPair = async (player1: Player, player2: Player) => {\n    if (!selectedTournament) {\n      setError(\"No hay torneo seleccionado\");\n      return;\n    }\n\n    try {\n      setError(\"\");\n\n      // Verificar duplicados en estado local\n      const existingPairLocal = pairs.find((pair) => {\n        const sameIds =\n          (pair.player1_id === player1.id && pair.player2_id === player2.id) ||\n          (pair.player1_id === player2.id && pair.player2_id === player1.id);\n\n        const sameNames =\n          (pair.player1?.name.toLowerCase() === player1.name.toLowerCase() &&\n            pair.player2?.name.toLowerCase() === player2.name.toLowerCase()) ||\n          (pair.player1?.name.toLowerCase() === player2.name.toLowerCase() &&\n            pair.player2?.name.toLowerCase() === player1.name.toLowerCase());\n\n        return sameIds || sameNames;\n      });\n\n      if (existingPairLocal) {\n        setError(\n          `La pareja ${player1.name} y ${player2.name} ya está registrada`\n        );\n        return;\n      }\n\n      const newPair = await createPair(\n        selectedTournament.id,\n        player1.id,\n        player2.id\n      );\n\n      setPairs([...pairs, newPair]);\n      setSelectedPlayers([]);\n\n      console.log(\"Pair added successfully\");\n    } catch (err) {\n      console.error(\"Error creating pair:\", err);\n      setError(\"Error al crear la pareja: \" + (err as Error).message);\n    }\n  };\n\n  const startTournament = async () => {\n    if (!selectedTournament || pairs.length < 2) {\n      setError(\"Se necesitan al menos 2 parejas para iniciar el torneo\");\n      return;\n    }\n\n    try {\n      setLoading(true);\n      setError(\"\");\n\n      console.log(\"🚀 Iniciando torneo:\", selectedTournament.name);\n\n      // Limpiar partidos existentes\n      if (matches.length > 0) {\n        await deleteMatchesByTournament(selectedTournament.id);\n        setMatches([]);\n      }\n\n      const allPairs = [...pairs];\n      const allCombinations = [];\n\n      for (let i = 0; i < allPairs.length; i++) {\n        for (let j = i + 1; j < allPairs.length; j++) {\n          allCombinations.push({\n            pair1: allPairs[i],\n            pair2: allPairs[j],\n          });\n        }\n      }\n\n      const finalMatches = [];\n      const remainingCombinations = [...allCombinations];\n      let round = 1;\n\n      while (remainingCombinations.length > 0) {\n        const roundMatches = [];\n        const usedPairs = new Set();\n        const courtOrder = [];\n\n        for (let i = 0; i < selectedTournament.courts; i++) {\n          const rotatedCourt =\n            ((round - 1 + i) % selectedTournament.courts) + 1;\n          courtOrder.push(rotatedCourt);\n        }\n\n        for (let courtIndex = 0; courtIndex < courtOrder.length; courtIndex++) {\n          const court = courtOrder[courtIndex];\n          let bestIndex = -1;\n          let bestScore = -1;\n\n          for (let i = 0; i < remainingCombinations.length; i++) {\n            const combo = remainingCombinations[i];\n\n            if (\n              !usedPairs.has(combo.pair1.id) &&\n              !usedPairs.has(combo.pair2.id)\n            ) {\n              let score = 0;\n\n              for (let j = 0; j < remainingCombinations.length; j++) {\n                if (i !== j) {\n                  const futureCombo = remainingCombinations[j];\n                  if (\n                    !usedPairs.has(futureCombo.pair1.id) &&\n                    !usedPairs.has(futureCombo.pair2.id) &&\n                    futureCombo.pair1.id !== combo.pair1.id &&\n                    futureCombo.pair1.id !== combo.pair2.id &&\n                    futureCombo.pair2.id !== combo.pair1.id &&\n                    futureCombo.pair2.id !== combo.pair2.id\n                  ) {\n                    score++;\n                  }\n                }\n              }\n\n              if (score > bestScore) {\n                bestScore = score;\n                bestIndex = i;\n              }\n            }\n          }\n\n          if (bestIndex !== -1) {\n            const combo = remainingCombinations[bestIndex];\n\n            const match = {\n              pair1: combo.pair1,\n              pair2: combo.pair2,\n              round,\n              court,\n            };\n\n            roundMatches.push(match);\n            usedPairs.add(combo.pair1.id);\n            usedPairs.add(combo.pair2.id);\n            remainingCombinations.splice(bestIndex, 1);\n          } else {\n            break;\n          }\n        }\n\n        if (roundMatches.length > 0) {\n          finalMatches.push(...roundMatches);\n        }\n\n        round++;\n      }\n\n      const createdMatches = [];\n\n      for (const match of finalMatches) {\n        try {\n          const createdMatch = await createMatch(\n            selectedTournament.id,\n            match.pair1.id,\n            match.pair2.id,\n            match.court,\n            match.round\n          );\n          createdMatches.push(createdMatch);\n        } catch (error) {\n          console.error(\"Error creating match:\", error);\n        }\n      }\n\n      await updateTournament(selectedTournament.id, { is_started: true });\n      setSelectedTournament((prev) =>\n        prev ? { ...prev, is_started: true } : null\n      );\n\n      await loadTournamentData();\n\n      setSuccessModalData({\n        title: \"¡Torneo Iniciado!\",\n        message: `Se han creado ${createdMatches.length} partidos exitosamente usando ${selectedTournament.courts} canchas. El torneo está listo para comenzar.`,\n        icon: \"🏆\",\n      });\n      setShowSuccessModal(true);\n    } catch (error) {\n      console.error(\"Error starting tournament:\", error);\n      setError(\"Error al iniciar el torneo: \" + (error as Error).message);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const addGame = async (matchId: string) => {\n    try {\n      setError(\"\");\n      const gameNumber = games.filter((g) => g.match_id === matchId).length + 1;\n\n      const newGame = await createGame(matchId, gameNumber);\n      setGames([...games, newGame]);\n    } catch (err) {\n      console.error(\"❌ Error al agregar el juego:\", err);\n      setError(\"Error al agregar el juego\");\n    }\n  };\n\n  const updateGameScore = useCallback(\n    async (gameId: string, pair1Games: number, pair2Games: number) => {\n      try {\n        setError(\"\");\n\n        setGames((prevGames) =>\n          prevGames.map((g) =>\n            g.id === gameId\n              ? { ...g, pair1_games: pair1Games, pair2_games: pair2Games }\n              : g\n          )\n        );\n\n        await updateGame(gameId, {\n          pair1_games: pair1Games,\n          pair2_games: pair2Games,\n        });\n      } catch (err) {\n        console.error(\"❌ Error al actualizar el marcador:\", err);\n        setError(\"Error al actualizar el marcador: \" + (err as Error).message);\n      }\n    },\n    [games, selectedTournament]\n  );\n\n  const handleGameScoreChange = useCallback(\n    (gameId: string, pair1Games: number, pair2Games: number) => {\n      setEditingGames((prev) => ({\n        ...prev,\n        [gameId]: { pair1: pair1Games, pair2: pair2Games },\n      }));\n    },\n    []\n  );\n\n  const handleTieBreakScoreChange = useCallback(\n    (gameId: string, pair1Points: number, pair2Points: number) => {\n      setEditingTieBreaks((prev) => ({\n        ...prev,\n        [gameId]: { pair1: pair1Points, pair2: pair2Points },\n      }));\n    },\n    []\n  );\n\n  const handleGameScoreBlur = useCallback(\n    async (gameId: string) => {\n      const editingGame = editingGames[gameId];\n      if (editingGame) {\n        await updateGameScore(gameId, editingGame.pair1, editingGame.pair2);\n        setEditingGames((prev) => {\n          const newState = { ...prev };\n          delete newState[gameId];\n          return newState;\n        });\n      }\n    },\n    [editingGames]\n  );\n\n  const handleTieBreakScoreBlur = useCallback(\n    async (gameId: string) => {\n      const editingTieBreak = editingTieBreaks[gameId];\n      if (editingTieBreak) {\n        await updateTieBreakScore(\n          gameId,\n          editingTieBreak.pair1,\n          editingTieBreak.pair2\n        );\n        setEditingTieBreaks((prev) => {\n          const newState = { ...prev };\n          delete newState[gameId];\n          return newState;\n        });\n      }\n    },\n    [editingTieBreaks]\n  );\n\n  const updateTieBreakScore = async (\n    gameId: string,\n    pair1Points: number,\n    pair2Points: number\n  ) => {\n    try {\n      setError(\"\");\n\n      setGames((prevGames) =>\n        prevGames.map((g) =>\n          g.id === gameId\n            ? {\n                ...g,\n                tie_break_pair1_points: pair1Points,\n                tie_break_pair2_points: pair2Points,\n              }\n            : g\n        )\n      );\n\n      await updateGame(gameId, {\n        tie_break_pair1_points: pair1Points,\n        tie_break_pair2_points: pair2Points,\n      });\n    } catch (err) {\n      console.error(\"❌ Error al actualizar el tie break:\", err);\n      setError(\"Error al actualizar el tie break: \" + (err as Error).message);\n    }\n  };\n\n  const toggleTieBreak = async (gameId: string) => {\n    try {\n      setError(\"\");\n      const game = games.find((g) => g.id === gameId);\n      if (!game) return;\n\n      const newIsTieBreak = !game.is_tie_break;\n\n      setGames((prevGames) =>\n        prevGames.map((g) =>\n          g.id === gameId\n            ? {\n                ...g,\n                is_tie_break: newIsTieBreak,\n                tie_break_pair1_points: 0,\n                tie_break_pair2_points: 0,\n              }\n            : g\n        )\n      );\n\n      await updateGame(gameId, {\n        is_tie_break: newIsTieBreak,\n        tie_break_pair1_points: 0,\n        tie_break_pair2_points: 0,\n      });\n    } catch (err) {\n      setError(\"Error al cambiar el tipo de juego\");\n      console.error(err);\n    }\n  };\n\n  const removeGame = async (gameId: string) => {\n    try {\n      setError(\"\");\n\n      await deleteGame(gameId);\n      setGames(games.filter((g) => g.id !== gameId));\n    } catch (err) {\n      console.error(\"❌ Error al eliminar el juego:\", err);\n      setError(\"Error al eliminar el juego: \" + (err as Error).message);\n    }\n  };\n\n  const correctGameScore = useCallback(\n    async (\n      gameId: string,\n      pair1Games: number,\n      pair2Games: number,\n      pair1TieBreakPoints: number = 0,\n      pair2TieBreakPoints: number = 0,\n      isTieBreak: boolean = false\n    ) => {\n      try {\n        setError(\"\");\n\n        setGames((prevGames) =>\n          prevGames.map((g) =>\n            g.id === gameId\n              ? {\n                  ...g,\n                  pair1_games: pair1Games,\n                  pair2_games: pair2Games,\n                  tie_break_pair1_points: pair1TieBreakPoints,\n                  tie_break_pair2_points: pair2TieBreakPoints,\n                  is_tie_break: isTieBreak,\n                  updated_at: new Date().toISOString(),\n                }\n              : g\n          )\n        );\n\n        await updateGame(gameId, {\n          pair1_games: pair1Games,\n          pair2_games: pair2Games,\n          tie_break_pair1_points: pair1TieBreakPoints,\n          tie_break_pair2_points: pair2TieBreakPoints,\n          is_tie_break: isTieBreak,\n        });\n      } catch (err) {\n        console.error(\"❌ Error al corregir el marcador:\", err);\n        setError(\"Error al corregir el marcador: \" + (err as Error).message);\n      }\n    },\n    []\n  );\n\n  const finishMatch = async (matchId: string) => {\n    try {\n      setError(\"\");\n      const match = matches.find((m) => m.id === matchId);\n      if (!match) {\n        console.error(\"Match not found:\", matchId);\n        return;\n      }\n\n      const matchGames = games.filter((g) => g.match_id === matchId);\n\n      if (!FlexibleMatchFinisher.canFinishMatch(matchGames)) {\n        setError(\n          \"No se puede finalizar el partido. Verifica que todos los juegos tengan marcadores válidos.\"\n        );\n        return;\n      }\n\n      const result = await FlexibleMatchFinisher.finishMatch(\n        match,\n        matchGames,\n        pairs,\n        async () => {\n          if (selectedTournament) {\n            const pairsData = await getPairs(selectedTournament.id);\n            setPairs(pairsData);\n            setForceRefresh((prev) => prev + 1);\n            const matchesData = await getMatches(selectedTournament.id);\n            setMatches(matchesData);\n          }\n        }\n      );\n\n      if (result.success) {\n        setMatches(\n          matches.map((m) =>\n            m.id === matchId\n              ? { ...m, winner_id: result.winnerId, is_finished: true }\n              : m\n          )\n        );\n\n        if (selectedTournament) {\n          const updatedPairsData = await getPairs(selectedTournament.id);\n          setPairs(updatedPairsData);\n          setForceRefresh((prev) => prev + 1);\n        }\n\n        alert(result.message);\n      } else {\n        setError(result.message);\n      }\n    } catch (err) {\n      setError(\"Error al finalizar el partido\");\n      console.error(err);\n    }\n  };\n\n  const handleMatchSelect = (matchId: string) => {\n    setSelectedMatchId(matchId);\n    loadMatchGames(matchId);\n  };\n\n  const loadMatchGames = async (matchId: string) => {\n    try {\n      const gamesData = await getGames(matchId);\n      setGames(gamesData);\n    } catch (err) {\n      console.error(\"❌ Error al cargar juegos:\", err);\n    }\n  };\n\n  const selectedMatch = matches.find((match) => match.id === selectedMatchId);\n\n  const matchesByRound = matches.reduce((acc, match) => {\n    if (!acc[match.round]) {\n      acc[match.round] = [];\n    }\n    acc[match.round].push(match);\n    return acc;\n  }, {} as Record<number, Match[]>);\n\n  const sortedPairs = useMemo(() => {\n    return [...pairs].sort((a, b) => {\n      if (a.sets_won !== b.sets_won) {\n        return b.sets_won - a.sets_won;\n      }\n      if (a.games_won !== b.games_won) {\n        return b.games_won - a.games_won;\n      }\n      return b.points - a.points;\n    });\n  }, [pairs, forceRefresh]);\n\n  const isTournamentFinished = useMemo(() => {\n    return matches.length > 0 && matches.every((match) => match.is_finished);\n  }, [matches]);\n\n  const winner = useMemo(() => {\n    return sortedPairs.length > 0 ? sortedPairs[0] : null;\n  }, [sortedPairs]);\n\n  const showWinnerScreenHandler = () => {\n    setShowWinnerScreen(true);\n  };\n\n  const hideWinnerScreenHandler = () => {\n    setShowWinnerScreen(false);\n  };\n\n  const showMatchResultsHandler = (match: Match) => {\n    setSelectedMatchResults(match);\n    setShowMatchResults(true);\n  };\n\n  const hideMatchResultsHandler = () => {\n    setShowMatchResults(false);\n    setSelectedMatchResults(null);\n  };\n\n  const handleViewTournamentResults = async (tournament: Tournament) => {\n    try {\n      setSelectedTournament(tournament);\n      await loadTournamentData();\n      alert(\n        `✅ Torneo \"${tournament.name}\" seleccionado\\n\\nAhora puedes ver todos los partidos y resultados en el panel derecho.`\n      );\n    } catch (err) {\n      console.error(\"❌ Error al cargar resultados del torneo:\", err);\n      alert(\"Error al cargar los resultados del torneo. Inténtalo de nuevo.\");\n    }\n  };\n\n  const recalculateMatchWinner = async (matchId: string) => {\n    try {\n      const match = matches.find((m) => m.id === matchId);\n      if (!match) {\n        console.error(\"Match not found:\", matchId);\n        return;\n      }\n\n      const matchGames = await getGames(matchId);\n\n      if (matchGames.length === 0) {\n        console.log(\"No hay juegos para recalcular\");\n        return;\n      }\n\n      let pair1Games = 0;\n      let pair2Games = 0;\n\n      matchGames.forEach((game) => {\n        if (game.is_tie_break) {\n          if (\n            game.tie_break_pair1_points >= 10 &&\n            game.tie_break_pair1_points - game.tie_break_pair2_points >= 2\n          ) {\n            pair1Games++;\n          } else if (\n            game.tie_break_pair2_points >= 10 &&\n            game.tie_break_pair2_points - game.tie_break_pair1_points >= 2\n          ) {\n            pair2Games++;\n          }\n        } else {\n          if (game.pair1_games > game.pair2_games) {\n            pair1Games++;\n          } else if (game.pair2_games > game.pair1_games) {\n            pair2Games++;\n          }\n        }\n      });\n\n      const isTie = pair1Games === pair2Games;\n      const winnerId = isTie\n        ? undefined\n        : pair1Games > pair2Games\n        ? match.pair1_id\n        : match.pair2_id;\n\n      await updateMatch(matchId, {\n        winner_id: winnerId,\n        is_finished: true,\n      });\n\n      console.log(\"✅ Ganador recalculado y actualizado en la base de datos\");\n    } catch (error) {\n      console.error(\"Error recalculating match winner:\", error);\n    }\n  };\n\n  const handleBackToHome = () => {\n    setSelectedTournament(null);\n    setPairs([]);\n    setMatches([]);\n    setGames([]);\n    setSelectedMatchId(null);\n    setError(\"\");\n    setShowWinnerScreen(false);\n    setShowMatchResults(false);\n    setSelectedMatchResults(null);\n    setShowScoreCorrector(false);\n    setSelectedCorrectorMatch(null);\n    setForceRefresh(0);\n    setShowDebugInfo(false);\n    setEditingGames({});\n    setEditingTieBreaks({});\n    setShowSuccessModal(false);\n    setSuccessModalData({\n      title: \"\",\n      message: \"\",\n      icon: \"✅\",\n    });\n  };\n\n  const openScoreCorrector = (match: Match) => {\n    setSelectedCorrectorMatch(match);\n    setShowScoreCorrector(true);\n  };\n\n  const closeScoreCorrector = () => {\n    setShowScoreCorrector(false);\n    setSelectedCorrectorMatch(null);\n  };\n\n  const handleScoreCorrectorUpdate = async () => {\n    if (selectedTournament) {\n      await loadTournamentData();\n    }\n    closeScoreCorrector();\n  };\n\n  return (\n    <div className=\"App\">\n      <div className=\"container\">\n        <h1>🏆 Gestión de Torneos Express y Retas</h1>\n\n        {error && (\n          <div className=\"error\">\n            <h4>❌ Error</h4>\n            <p>{error}</p>\n            <div className=\"error-help\">\n              <h5>💡 Ayuda:</h5>\n              <ol>\n                <li>Verifica tu conexión a internet</li>\n                <li>Intenta recargar la página</li>\n                <li>Si el problema persiste, contacta al administrador</li>\n              </ol>\n            </div>\n          </div>\n        )}\n\n        {loading && (\n          <div className=\"loading\">\n            <p>⏳ Cargando...</p>\n          </div>\n        )}\n\n        <div className=\"main-layout\">\n          <div className=\"left-panel\">\n            <TournamentManager\n              selectedTournament={selectedTournament || undefined}\n              onTournamentSelect={setSelectedTournament}\n              onViewResults={handleViewTournamentResults}\n            />\n          </div>\n\n          <div className=\"right-panel\">\n            {selectedTournament ? (\n              <>\n                <div className=\"tournament-details\">\n                  <div className=\"tournament-header\">\n                    <div className=\"tournament-header-content\">\n                      <div className=\"tournament-title-section\">\n                        <div className=\"tournament-icon\">🏆</div>\n                        <div className=\"tournament-info\">\n                          <h2>{selectedTournament.name}</h2>\n                          {selectedTournament.description && (\n                            <div className=\"tournament-description\">\n                              {selectedTournament.description}\n                            </div>\n                          )}\n                        </div>\n                      </div>\n                      <div className=\"tournament-stats-section\">\n                        <div className=\"stats-row\">\n                          <span className=\"stat-badge\">\n                            {selectedTournament.courts} canchas\n                          </span>\n                          <span className=\"stat-badge\">\n                            {pairs.length} parejas\n                          </span>\n                        </div>\n                        <div className=\"stats-row\">\n                          <span className=\"stat-badge\">\n                            {matches.length} partidos\n                          </span>\n                          <span\n                            className={`status-badge ${\n                              selectedTournament.is_started\n                                ? \"started\"\n                                : \"pending\"\n                            }`}\n                          >\n                            {selectedTournament.is_started\n                              ? \"En Progreso\"\n                              : \"Pendiente\"}\n                          </span>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n\n                  {/* Gestión de Jugadores - MOVIDA AQUÍ */}\n                  <div className=\"player-management-section\">\n                    <div className=\"player-management-header\">\n                      <h3>👥 Gestión de Jugadores</h3>\n                      <button\n                        className=\"toggle-player-manager-btn\"\n                        onClick={() => setShowPlayerManager(!showPlayerManager)}\n                      >\n                        {showPlayerManager\n                          ? \"👥 Ocultar Gestión de Jugadores\"\n                          : \"👥 Mostrar Gestión de Jugadores\"}\n                      </button>\n                    </div>\n\n                    {showPlayerManager && (\n                      <div className=\"player-manager-container\">\n                        <PlayerManager\n                          playersInPairs={pairs.flatMap((pair) => [\n                            pair.player1_id,\n                            pair.player2_id,\n                          ])}\n                          onPlayerSelect={(players) => {\n                            console.log(\"=== SELECCIÓN DE JUGADORES ===\");\n                            console.log(\"Players selected:\", players.length);\n                            players.forEach((player, index) => {\n                              console.log(\n                                `Player ${index + 1}:`,\n                                player.name,\n                                \"(ID:\",\n                                player.id + \")\"\n                              );\n                            });\n\n                            // Validación: Verificar si algún jugador ya está en una pareja\n                            const playersInPairs = players.filter((player) => {\n                              const isInPair = pairs.some(\n                                (pair) =>\n                                  pair.player1_id === player.id ||\n                                  pair.player2_id === player.id\n                              );\n\n                              if (isInPair) {\n                                const existingPair = pairs.find(\n                                  (pair) =>\n                                    pair.player1_id === player.id ||\n                                    pair.player2_id === player.id\n                                );\n                                console.log(\n                                  `🚨 JUGADOR YA EN PAREJA: ${\n                                    player.name\n                                  } está en pareja con ${\n                                    existingPair?.player1?.id === player.id\n                                      ? existingPair?.player2?.name\n                                      : existingPair?.player1?.name\n                                  }`\n                                );\n                              }\n\n                              return isInPair;\n                            });\n\n                            if (playersInPairs.length > 0) {\n                              const playerNames = playersInPairs\n                                .map((p) => p.name)\n                                .join(\", \");\n                              console.log(\n                                \"🚨 ERROR: Jugadores ya están en parejas:\",\n                                playerNames\n                              );\n                              setError(\n                                `Los jugadores ${playerNames} ya están en parejas existentes. Debes eliminar sus parejas actuales antes de poder seleccionarlos nuevamente.`\n                              );\n                              return;\n                            }\n\n                            // Validación: No permitir jugadores con nombres iguales\n                            if (players.length === 2) {\n                              const player1 = players[0];\n                              const player2 = players[1];\n\n                              if (\n                                player1.name.toLowerCase() ===\n                                player2.name.toLowerCase()\n                              ) {\n                                console.log(\n                                  \"🚨 ERROR: Jugadores con nombres iguales detectados\"\n                                );\n                                console.log(\n                                  \"Player 1:\",\n                                  player1.name,\n                                  \"(ID:\",\n                                  player1.id + \")\"\n                                );\n                                console.log(\n                                  \"Player 2:\",\n                                  player2.name,\n                                  \"(ID:\",\n                                  player2.id + \")\"\n                                );\n                                setError(\n                                  \"No puedes seleccionar dos jugadores con el mismo nombre\"\n                                );\n                                return;\n                              }\n\n                              // Validación: Verificar si ya existe una pareja con estos jugadores\n                              const existingPair = pairs.find((pair) => {\n                                const sameIds =\n                                  (pair.player1_id === player1.id &&\n                                    pair.player2_id === player2.id) ||\n                                  (pair.player1_id === player2.id &&\n                                    pair.player2_id === player1.id);\n\n                                const sameNames =\n                                  (pair.player1?.name.toLowerCase() ===\n                                    player1.name.toLowerCase() &&\n                                    pair.player2?.name.toLowerCase() ===\n                                      player2.name.toLowerCase()) ||\n                                  (pair.player1?.name.toLowerCase() ===\n                                    player2.name.toLowerCase() &&\n                                    pair.player2?.name.toLowerCase() ===\n                                      player1.name.toLowerCase());\n\n                                if (sameIds || sameNames) {\n                                  console.log(\n                                    \"🚨 PAREJA DUPLICADA DETECTADA:\",\n                                    player1.name,\n                                    \"+\",\n                                    player2.name\n                                  );\n                                  console.log(\"Existing pair:\", existingPair);\n                                }\n\n                                return sameIds || sameNames;\n                              });\n\n                              if (existingPair) {\n                                console.log(\n                                  \"🚨 ERROR: Pareja ya existe en la base de datos\"\n                                );\n                                setError(\n                                  `La pareja ${player1.name} + ${player2.name} ya existe en el torneo`\n                                );\n                                return;\n                              }\n\n                              // Si llegamos aquí, la pareja es válida\n                              console.log(\n                                \"✅ PAREJA VÁLIDA:\",\n                                player1.name,\n                                \"+\",\n                                player2.name\n                              );\n                              addPair(player1, player2);\n                              setSelectedPlayers([]); // Limpiar selección después de crear la pareja\n                            } else {\n                              setSelectedPlayers(players);\n                            }\n                          }}\n                          selectedPlayers={selectedPlayers}\n                          allowMultipleSelection={true}\n                        />\n                      </div>\n                    )}\n                  </div>\n\n                  {/* Gestión de Parejas - NUEVO COMPONENTE */}\n                  <div className=\"pair-management-section\">\n                    <div className=\"pair-management-header\">\n                      <h3>✏️ Gestión de Parejas</h3>\n                      <button\n                        className=\"toggle-pair-manager-btn\"\n                        onClick={() => setShowPairManager(!showPairManager)}\n                      >\n                        {showPairManager\n                          ? \"✏️ Ocultar Gestión de Parejas\"\n                          : \"✏️ Mostrar Gestión de Parejas\"}\n                      </button>\n                    </div>\n\n                    {showPairManager && (\n                      <div className=\"pair-manager-container\">\n                        <PairManager\n                          pairs={pairs}\n                          onPairUpdate={updatePairPlayers}\n                          onPairDelete={deletePair}\n                        />\n                      </div>\n                    )}\n                  </div>\n\n                  {!selectedTournament.is_started && (\n                    <div className=\"start-tournament-section\">\n                      <h3>🚀 Iniciar Torneo</h3>\n                      <div className=\"tournament-info\">\n                        <p>Tienes {pairs.length} parejas registradas</p>\n                        <p>\n                          Se crearán {(pairs.length * (pairs.length - 1)) / 2}{\" \"}\n                          partidos (round-robin completo - todas las parejas se\n                          enfrentan)\n                        </p>\n                        <p>\n                          Estado del torneo:{\" \"}\n                          {selectedTournament.is_started\n                            ? \"Iniciado\"\n                            : \"Pendiente\"}\n                        </p>\n                      </div>\n                      <button\n                        className=\"start-button\"\n                        onClick={startTournament}\n                        disabled={loading || pairs.length < 2}\n                      >\n                        {loading\n                          ? \"⏳ Iniciando...\"\n                          : selectedTournament.is_started\n                          ? \"🏆 Torneo Ya Iniciado\"\n                          : pairs.length < 2\n                          ? \"❌ Necesitas al menos 2 parejas\"\n                          : \"🚀 ¡Iniciar Torneo!\"}\n                      </button>\n                    </div>\n                  )}\n\n                  {/* Debug info - COLAPSIBLE */}\n                  {selectedTournament && (\n                    <div className=\"debug-section\">\n                      <button\n                        className=\"debug-toggle-btn\"\n                        onClick={() => setShowDebugInfo(!showDebugInfo)}\n                      >\n                        {showDebugInfo ? \"🔽\" : \"🔼\"} Debug Info\n                      </button>\n\n                      {showDebugInfo && (\n                        <div className=\"debug-info\">\n                          <div className=\"debug-header\">\n                            <h4>🔧 Información de Debug</h4>\n                            <div className=\"debug-stats\">\n                              <span>\n                                Estado:{\" \"}\n                                {selectedTournament.is_started\n                                  ? \"✅ Iniciado\"\n                                  : \"⏳ Pendiente\"}\n                              </span>\n                              <span>Parejas: {pairs.length}</span>\n                              <span>Partidos: {matches.length}</span>\n                            </div>\n                          </div>\n\n                          <div className=\"debug-buttons\">\n                            <button\n                              onClick={async () => {\n                                console.log(\"=== PROBAR CONEXIÓN ===\");\n                                const isConnected = await testConnection();\n                                if (isConnected) {\n                                  setError(\"\");\n                                } else {\n                                  setError(\n                                    \"❌ Error de conexión a Supabase. Verifica tu configuración.\"\n                                  );\n                                }\n                              }}\n                              className=\"debug-btn connection-btn\"\n                            >\n                              🔌 Probar Conexión\n                            </button>\n\n                            <button\n                              onClick={() => {\n                                console.log(\n                                  \"=== FORZANDO RECARGA DE DATOS ===\"\n                                );\n                                loadTournamentData();\n                              }}\n                              className=\"debug-btn reload-btn\"\n                            >\n                              🔄 Recargar Datos\n                            </button>\n\n                            <button\n                              onClick={async () => {\n                                console.log(\n                                  \"=== VERIFICANDO ESTADO DEL TORNEO ===\"\n                                );\n                                try {\n                                  console.log(\n                                    \"Estado actual del torneo:\",\n                                    selectedTournament\n                                  );\n                                  console.log(\n                                    \"Parejas en estado:\",\n                                    pairs.length\n                                  );\n                                  console.log(\n                                    \"Partidos en estado:\",\n                                    matches.length\n                                  );\n\n                                  const dbPairs = await getPairs(\n                                    selectedTournament.id\n                                  );\n                                  const dbMatches = await getMatches(\n                                    selectedTournament.id\n                                  );\n\n                                  console.log(\"Parejas en BD:\", dbPairs.length);\n                                  console.log(\n                                    \"Partidos en BD:\",\n                                    dbMatches.length\n                                  );\n\n                                  alert(\n                                    `Estado del torneo:\\n\\nParejas: ${\n                                      pairs.length\n                                    } (estado) / ${\n                                      dbPairs.length\n                                    } (BD)\\nPartidos: ${\n                                      matches.length\n                                    } (estado) / ${\n                                      dbMatches.length\n                                    } (BD)\\n\\nTorneo iniciado: ${\n                                      selectedTournament.is_started\n                                        ? \"Sí\"\n                                        : \"No\"\n                                    }`\n                                  );\n                                } catch (error) {\n                                  console.error(\n                                    \"Error verificando estado:\",\n                                    error\n                                  );\n                                }\n                              }}\n                              className=\"debug-btn status-btn\"\n                            >\n                              🔍 Verificar Estado\n                            </button>\n                          </div>\n                        </div>\n                      )}\n                    </div>\n                  )}\n\n                  {/* Mostrar parejas creadas */}\n                  {pairs.length > 0 && (\n                    <div className=\"pairs-display\">\n                      <h3>👥 Parejas Registradas ({pairs.length})</h3>\n                      <div className=\"pairs-grid\">\n                        {pairs.map((pair, index) => (\n                          <div key={pair.id} className=\"pair-display-card\">\n                            <div className=\"pair-number\">#{index + 1}</div>\n                            <div className=\"pair-names\">\n                              {pair.player1?.name} y {pair.player2?.name}\n                            </div>\n                            <div className=\"pair-stats\">\n                              <span>Sets: {pair.sets_won}</span>\n                              <span>Partidos: {pair.matches_played}</span>\n                              <span>Puntos: {pair.points}</span>\n                            </div>\n                            <button\n                              onClick={() => {\n                                if (\n                                  window.confirm(\n                                    `¿Estás seguro de que quieres eliminar la pareja \"${pair.player1?.name} y ${pair.player2?.name}\"?`\n                                  )\n                                ) {\n                                  deletePair(pair.id);\n                                }\n                              }}\n                              className=\"delete-pair-btn\"\n                              title=\"Eliminar pareja\"\n                            >\n                              🗑️\n                            </button>\n                          </div>\n                        ))}\n                      </div>\n                    </div>\n                  )}\n\n                  {selectedTournament.is_started && (\n                    <div className=\"tournament-content\">\n                      {/* Lista de partidos */}\n                      <div className=\"matches-section\">\n                        <h3>🎾 Partidos ({matches.length} total)</h3>\n                        {matches.length === 0 ? (\n                          <div className=\"no-matches\">\n                            <p>📝 No hay partidos programados aún</p>\n                            <p>\n                              Inicia el torneo para generar los partidos\n                              automáticamente\n                            </p>\n                          </div>\n                        ) : (\n                          Object.entries(matchesByRound).map(\n                            ([round, roundMatches]) => (\n                              <div key={round} className=\"round-section\">\n                                <h4>\n                                  🔄 Ronda {round} ({roundMatches.length}{\" \"}\n                                  partidos)\n                                </h4>\n                                <div className=\"matches-container\">\n                                  {roundMatches.map((match) => (\n                                    <div\n                                      key={match.id}\n                                      className={`match-card ${\n                                        selectedMatchId === match.id\n                                          ? \"selected\"\n                                          : \"\"\n                                      }`}\n                                      onClick={() =>\n                                        handleMatchSelect(match.id)\n                                      }\n                                    >\n                                      <div className=\"match-header\">\n                                        <h5>\n                                          {match.pair1?.player1?.name} y{\" \"}\n                                          {match.pair1?.player2?.name} vs{\" \"}\n                                          {match.pair2?.player1?.name} y{\" \"}\n                                          {match.pair2?.player2?.name}\n                                        </h5>\n                                        <div className=\"match-info\">\n                                          <span className=\"court-badge\">\n                                            🏟️ Cancha {match.court}\n                                          </span>\n                                          <span className=\"round-badge\">\n                                            🔄 Ronda {match.round}\n                                          </span>\n                                        </div>\n                                      </div>\n                                      <div className=\"match-details\">\n                                        <p className=\"match-pairs\">\n                                          <strong>Pareja 1:</strong>{\" \"}\n                                          {match.pair1?.player1?.name} y{\" \"}\n                                          {match.pair1?.player2?.name}\n                                        </p>\n                                        <p className=\"match-pairs\">\n                                          <strong>Pareja 2:</strong>{\" \"}\n                                          {match.pair2?.player1?.name} y{\" \"}\n                                          {match.pair2?.player2?.name}\n                                        </p>\n                                      </div>\n                                      {match.winner_id && (\n                                        <div className=\"winner\">\n                                          <span className=\"winner-icon\">\n                                            🏆\n                                          </span>\n                                          Ganador:{\" \"}\n                                          {match.winner_id === match.pair1_id\n                                            ? `${match.pair1?.player1?.name} y ${match.pair1?.player2?.name}`\n                                            : `${match.pair2?.player1?.name} y ${match.pair2?.player2?.name}`}\n                                        </div>\n                                      )}\n                                      {match.is_finished &&\n                                        !match.winner_id && (\n                                          <div className=\"winner\">\n                                            <span className=\"winner-icon\">\n                                              🤝\n                                            </span>\n                                            Empate: {match.pair1?.player1?.name}{\" \"}\n                                            y {match.pair1?.player2?.name} vs{\" \"}\n                                            {match.pair2?.player1?.name} y{\" \"}\n                                            {match.pair2?.player2?.name}\n                                          </div>\n                                        )}\n                                      <div className=\"match-status\">\n                                        {match.is_finished ? (\n                                          <span className=\"status-finished\">\n                                            ✔ Finalizado\n                                          </span>\n                                        ) : (\n                                          <span className=\"status-pending\">\n                                            ⏳ Pendiente\n                                          </span>\n                                        )}\n                                      </div>\n                                      <div className=\"match-actions\">\n                                        <button\n                                          onClick={(e) => {\n                                            e.stopPropagation();\n                                            showMatchResultsHandler(match);\n                                          }}\n                                          className=\"view-results-btn\"\n                                        >\n                                          📊 Ver Resultados\n                                        </button>\n                                        <button\n                                          onClick={(e) => {\n                                            e.stopPropagation();\n                                            openScoreCorrector(match);\n                                          }}\n                                          className=\"correct-result-btn\"\n                                        >\n                                          ✏️ Corregir Marcador\n                                        </button>\n                                      </div>\n                                    </div>\n                                  ))}\n                                </div>\n                              </div>\n                            )\n                          )\n                        )}\n                      </div>\n\n                      {/* Detalles del partido seleccionado */}\n                      {selectedMatch && (\n                        <div className=\"match-management\">\n                          <MatchStatusDisplay\n                            match={selectedMatch}\n                            games={games.filter(\n                              (g) => g.match_id === selectedMatch.id\n                            )}\n                            pairs={pairs}\n                          />\n                        </div>\n                      )}\n\n                      {/* Tabla de clasificación */}\n                      <StandingsTable\n                        tournamentId={selectedTournament.id}\n                        forceRefresh={forceRefresh}\n                      />\n\n                      {/* Botón para mostrar ganador */}\n                      {isTournamentFinished && winner && (\n                        <div className=\"winner-button-container\">\n                          <button\n                            className=\"show-winner-button\"\n                            onClick={showWinnerScreenHandler}\n                          >\n                            🏆 ¡Ver Ganador!\n                          </button>\n                        </div>\n                      )}\n\n                      {/* Botón para volver al inicio */}\n                      <div className=\"back-home-button-container\">\n                        <button\n                          className=\"back-home-button\"\n                          onClick={handleBackToHome}\n                        >\n                          🏠 Volver al Inicio\n                        </button>\n                      </div>\n                    </div>\n                  )}\n                </div>\n              </>\n            ) : (\n              <div className=\"no-tournament-selected\">\n                <h2>🏆 Bienvenido al Gestor de Torneos</h2>\n                <p>\n                  Selecciona un torneo del panel izquierdo para comenzar a\n                  gestionar partidos y resultados.\n                </p>\n              </div>\n            )}\n          </div>\n        </div>\n\n        {/* Pantalla de ganador */}\n        {showWinnerScreen && winner && (\n          <div className=\"winner-screen\">\n            <div className=\"winner-content\">\n              <div className=\"winner-celebration\">\n                <h1 className=\"winner-title\">🏆 ¡FELICIDADES! 🏆</h1>\n                <div className=\"winner-names\">\n                  {winner.player1?.name} y {winner.player2?.name}\n                </div>\n                <div className=\"winner-subtitle\">\n                  ¡Son los campeones del torneo!\n                </div>\n                <div className=\"winner-stats\">\n                  <div className=\"stat-item\">\n                    <span className=\"stat-number\">{winner.sets_won}</span>\n                    <span className=\"stat-label\">Sets Ganados</span>\n                  </div>\n                  <div className=\"stat-item\">\n                    <span className=\"stat-number\">{winner.games_won}</span>\n                    <span className=\"stat-label\">Partidos Ganados</span>\n                  </div>\n                  <div className=\"stat-item\">\n                    <span className=\"stat-number\">{winner.points}</span>\n                    <span className=\"stat-label\">Puntos Totales</span>\n                  </div>\n                </div>\n                <button\n                  className=\"back-button\"\n                  onClick={hideWinnerScreenHandler}\n                >\n                  🏠 Volver al Torneo\n                </button>\n              </div>\n            </div>\n          </div>\n        )}\n\n        {/* Modal de resultados de partido */}\n        {showMatchResults && selectedMatchResults && (\n          <MatchResults\n            match={selectedMatchResults}\n            isOpen={showMatchResults}\n            onClose={hideMatchResultsHandler}\n          />\n        )}\n\n        {/* Modal de corrección de marcador */}\n        {showScoreCorrector && selectedCorrectorMatch && (\n          <ScoreCorrector\n            match={selectedCorrectorMatch}\n            onClose={closeScoreCorrector}\n            onUpdate={handleScoreCorrectorUpdate}\n          />\n        )}\n\n        {/* Modal de éxito */}\n        {showSuccessModal && (\n          <SuccessModal\n            title={successModalData.title}\n            message={successModalData.message}\n            icon={successModalData.icon}\n            isOpen={showSuccessModal}\n            onClose={() => setShowSuccessModal(false)}\n          />\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}